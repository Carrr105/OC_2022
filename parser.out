Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CALL
    DO
    DOT
    PRINT
    THEN

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON establishglobalscope programaP
Rule 2     establishglobalscope -> <empty>
Rule 3     programaP -> vars programaP
Rule 4     programaP -> clase programaP
Rule 5     programaP -> funcion programaP
Rule 6     programaP -> bloque
Rule 7     programaP -> empty
Rule 8     clase -> CLASS ID OPENBRACE claseP CLOSEBRACE
Rule 9     claseP -> vars clasePP
Rule 10    claseP -> clasePP
Rule 11    clasePP -> funcion clasePP
Rule 12    clasePP -> empty
Rule 13    funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
Rule 14    savefuncscope -> <empty>
Rule 15    paramsfunction -> tipo savetipo param COMMA paramsfunction
Rule 16    paramsfunction -> tipo savetipo param
Rule 17    savetipo -> <empty>
Rule 18    savesequence -> <empty>
Rule 19    return -> RETURN exp
Rule 20    return -> RETURN
Rule 21    vars -> VARS tipo savetype TWODOTS varsP
Rule 22    varsP -> param COMMA varsP
Rule 23    varsP -> param SEMICOLON
Rule 24    savetype -> <empty>
Rule 25    param -> ID
Rule 26    param -> ID OPENBRACKET paramsP CLOSEBRACKET
Rule 27    paramsP -> exp COMMA paramsP
Rule 28    paramsP -> exp
Rule 29    tipo -> INT
Rule 30    tipo -> FLOAT
Rule 31    tipo -> CHAR
Rule 32    tipo -> BOOL
Rule 33    bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE
Rule 34    bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE
Rule 35    establishmainscope -> <empty>
Rule 36    estatuto -> asignacion estatuto
Rule 37    estatuto -> llamada estatuto
Rule 38    estatuto -> retorno estatuto
Rule 39    estatuto -> lectura estatuto
Rule 40    estatuto -> escritura estatuto
Rule 41    estatuto -> repeticion estatuto
Rule 42    estatuto -> declaracion estatuto
Rule 43    estatuto -> condicion estatuto
Rule 44    estatuto -> empty
Rule 45    declaracion -> vars
Rule 46    llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
Rule 47    gen_era -> <empty>
Rule 48    param_call -> exp gen_param printt
Rule 49    param_call -> exp gen_param COMMA param_call
Rule 50    printt -> <empty>
Rule 51    gen_param -> <empty>
Rule 52    retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
Rule 53    lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
Rule 54    asignacion -> ID EQUALS exp SEMICOLON
Rule 55    asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
Rule 56    escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
Rule 57    escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP
Rule 58    escrituraP -> exp COMMA escrituraP
Rule 59    escrituraP -> ID COMMA escrituraP
Rule 60    escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK
Rule 61    escrituraP -> exp
Rule 62    escrituraP -> ID
Rule 63    condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
Rule 64    gen_gotof -> <empty>
Rule 65    fill_gotof -> <empty>
Rule 66    gen_goto -> <empty>
Rule 67    fill_goto -> <empty>
Rule 68    fill_gotof_if -> <empty>
Rule 69    condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE
Rule 70    condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE condicion
Rule 71    condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE
Rule 72    repeticion -> condicional
Rule 73    repeticion -> no_condicional
Rule 74    condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
Rule 75    migaja -> <empty>
Rule 76    gen_goto_migaja -> <empty>
Rule 77    gen_goto_while -> <empty>
Rule 78    gen_fill_goto -> <empty>
Rule 79    fill_goto_while -> <empty>
Rule 80    fill_gotof_while -> <empty>
Rule 81    no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
Rule 82    exp -> iexp
Rule 83    exp -> NOT iexp
Rule 84    iexp -> nexp
Rule 85    iexp -> iexp AND nexp
Rule 86    iexp -> iexp OR nexp
Rule 87    nexp -> pexp
Rule 88    nexp -> nexp GREATER pexp
Rule 89    nexp -> nexp LESS pexp
Rule 90    nexp -> nexp DIFFERENT pexp
Rule 91    nexp -> nexp EQUALS_BOOLEAN pexp
Rule 92    nexp -> nexp LESSEQUAL pexp
Rule 93    nexp -> nexp GREATEREQUAL pexp
Rule 94    pexp -> termino
Rule 95    pexp -> pexp PLUS termino
Rule 96    pexp -> pexp MINUS termino
Rule 97    termino -> factor
Rule 98    termino -> termino MULTIPLY factor
Rule 99    termino -> termino DIVIDE factor
Rule 100   factor -> CTEB
Rule 101   factor -> llamada printt
Rule 102   factor -> ID
Rule 103   factor -> CTEF
Rule 104   factor -> CTEI
Rule 105   factor -> CTEC
Rule 106   factor -> OPENPARENTHESES exp CLOSEPARENTHESES
Rule 107   empty -> <empty>

Terminals, with rules where they appear

AND                  : 85
BOOL                 : 32
CALL                 : 
CHAR                 : 31
CLASS                : 8
CLOSEBRACE           : 8 13 33 34 69 69 70 71 74 81
CLOSEBRACKET         : 26 55
CLOSEPARENTHESES     : 13 33 34 46 52 53 56 63 74 106
COMMA                : 15 22 27 49 57 58 59
CTEB                 : 100
CTEC                 : 105
CTEF                 : 103
CTEI                 : 104
CTESTRING            : 57 60
DIFFERENT            : 90
DIVIDE               : 99
DO                   : 
DOT                  : 
ELSE                 : 69 70
EQUALS               : 54 55 81
EQUALS_BOOLEAN       : 91
FLOAT                : 30
FOR                  : 81
FUNCTION             : 13
GREATER              : 88
GREATEREQUAL         : 93
ID                   : 1 8 13 25 26 46 54 55 59 62 81 102
IF                   : 63
INT                  : 29
LESS                 : 89
LESSEQUAL            : 92
MAIN                 : 33 34
MINUS                : 96
MULTIPLY             : 98
NOT                  : 83
OPENBRACE            : 8 13 33 34 63 69 74 81
OPENBRACKET          : 26 55
OPENPARENTHESES      : 13 33 34 46 52 53 56 63 74 106
OR                   : 86
PLUS                 : 95
PRINT                : 
PROGRAM              : 1
QUOTATIONMARK        : 57 57 60 60
READ                 : 53
RETURN               : 19 20 52
SEMICOLON            : 1 23 52 53 54 55 56
THEN                 : 
TO                   : 81
TWODOTS              : 13 21
VARS                 : 21
WHILE                : 74
WRITE                : 56
error                : 

Nonterminals, with rules where they appear

asignacion           : 36
bloque               : 6
clase                : 4
claseP               : 8
clasePP              : 9 10 11
condicion            : 43 70
condicional          : 72
condicionp           : 63
declaracion          : 42
empty                : 7 12 44
escritura            : 40
escrituraP           : 56 57 58 59
establishglobalscope : 1
establishmainscope   : 33
estatuto             : 13 33 36 37 38 39 40 41 42 43 69 69 70 71 74 81
exp                  : 19 27 28 48 49 52 54 55 58 61 63 74 81 81 106
factor               : 97 98 99
fill_goto            : 63
fill_goto_while      : 
fill_gotof           : 
fill_gotof_if        : 69 70 71
fill_gotof_while     : 74
funcion              : 5 11
gen_era              : 46
gen_fill_goto        : 
gen_goto             : 69 70 71
gen_goto_migaja      : 74
gen_goto_while       : 
gen_gotof            : 63 74
gen_param            : 48 49
iexp                 : 82 83 85 86
lectura              : 39
llamada              : 37 101
migaja               : 74
nexp                 : 84 85 86 88 89 90 91 92 93
no_condicional       : 73
param                : 15 16 22 23 53
param_call           : 46 49
paramsP              : 26 27 55
paramsfunction       : 13 15
pexp                 : 87 88 89 90 91 92 93 95 96
printt               : 48 101
programa             : 0
programaP            : 1 3 4 5
repeticion           : 41
retorno              : 38
return               : 
savefuncscope        : 13
savesequence         : 13
savetipo             : 15 16
savetype             : 21
termino              : 94 95 96 98 99
tipo                 : 13 15 16 21
vars                 : 3 9 45
varsP                : 21 22

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON establishglobalscope programaP

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON establishglobalscope programaP

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON establishglobalscope programaP

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . establishglobalscope programaP
    (2) establishglobalscope -> .

    VARS            reduce using rule 2 (establishglobalscope -> .)
    CLASS           reduce using rule 2 (establishglobalscope -> .)
    FUNCTION        reduce using rule 2 (establishglobalscope -> .)
    MAIN            reduce using rule 2 (establishglobalscope -> .)
    $end            reduce using rule 2 (establishglobalscope -> .)

    establishglobalscope           shift and go to state 5

state 5

    (1) programa -> PROGRAM ID SEMICOLON establishglobalscope . programaP
    (3) programaP -> . vars programaP
    (4) programaP -> . clase programaP
    (5) programaP -> . funcion programaP
    (6) programaP -> . bloque
    (7) programaP -> . empty
    (21) vars -> . VARS tipo savetype TWODOTS varsP
    (8) clase -> . CLASS ID OPENBRACE claseP CLOSEBRACE
    (13) funcion -> . FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (33) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE
    (34) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE
    (107) empty -> .

    VARS            shift and go to state 12
    CLASS           shift and go to state 13
    FUNCTION        shift and go to state 14
    MAIN            shift and go to state 15
    $end            reduce using rule 107 (empty -> .)

    programaP                      shift and go to state 6
    vars                           shift and go to state 7
    clase                          shift and go to state 8
    funcion                        shift and go to state 9
    bloque                         shift and go to state 10
    empty                          shift and go to state 11

state 6

    (1) programa -> PROGRAM ID SEMICOLON establishglobalscope programaP .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON establishglobalscope programaP .)


state 7

    (3) programaP -> vars . programaP
    (3) programaP -> . vars programaP
    (4) programaP -> . clase programaP
    (5) programaP -> . funcion programaP
    (6) programaP -> . bloque
    (7) programaP -> . empty
    (21) vars -> . VARS tipo savetype TWODOTS varsP
    (8) clase -> . CLASS ID OPENBRACE claseP CLOSEBRACE
    (13) funcion -> . FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (33) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE
    (34) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE
    (107) empty -> .

    VARS            shift and go to state 12
    CLASS           shift and go to state 13
    FUNCTION        shift and go to state 14
    MAIN            shift and go to state 15
    $end            reduce using rule 107 (empty -> .)

    vars                           shift and go to state 7
    programaP                      shift and go to state 16
    clase                          shift and go to state 8
    funcion                        shift and go to state 9
    bloque                         shift and go to state 10
    empty                          shift and go to state 11

state 8

    (4) programaP -> clase . programaP
    (3) programaP -> . vars programaP
    (4) programaP -> . clase programaP
    (5) programaP -> . funcion programaP
    (6) programaP -> . bloque
    (7) programaP -> . empty
    (21) vars -> . VARS tipo savetype TWODOTS varsP
    (8) clase -> . CLASS ID OPENBRACE claseP CLOSEBRACE
    (13) funcion -> . FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (33) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE
    (34) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE
    (107) empty -> .

    VARS            shift and go to state 12
    CLASS           shift and go to state 13
    FUNCTION        shift and go to state 14
    MAIN            shift and go to state 15
    $end            reduce using rule 107 (empty -> .)

    clase                          shift and go to state 8
    programaP                      shift and go to state 17
    vars                           shift and go to state 7
    funcion                        shift and go to state 9
    bloque                         shift and go to state 10
    empty                          shift and go to state 11

state 9

    (5) programaP -> funcion . programaP
    (3) programaP -> . vars programaP
    (4) programaP -> . clase programaP
    (5) programaP -> . funcion programaP
    (6) programaP -> . bloque
    (7) programaP -> . empty
    (21) vars -> . VARS tipo savetype TWODOTS varsP
    (8) clase -> . CLASS ID OPENBRACE claseP CLOSEBRACE
    (13) funcion -> . FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (33) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE
    (34) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE
    (107) empty -> .

    VARS            shift and go to state 12
    CLASS           shift and go to state 13
    FUNCTION        shift and go to state 14
    MAIN            shift and go to state 15
    $end            reduce using rule 107 (empty -> .)

    funcion                        shift and go to state 9
    programaP                      shift and go to state 18
    vars                           shift and go to state 7
    clase                          shift and go to state 8
    bloque                         shift and go to state 10
    empty                          shift and go to state 11

state 10

    (6) programaP -> bloque .

    $end            reduce using rule 6 (programaP -> bloque .)


state 11

    (7) programaP -> empty .

    $end            reduce using rule 7 (programaP -> empty .)


state 12

    (21) vars -> VARS . tipo savetype TWODOTS varsP
    (29) tipo -> . INT
    (30) tipo -> . FLOAT
    (31) tipo -> . CHAR
    (32) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 19

state 13

    (8) clase -> CLASS . ID OPENBRACE claseP CLOSEBRACE

    ID              shift and go to state 24


state 14

    (13) funcion -> FUNCTION . tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (29) tipo -> . INT
    (30) tipo -> . FLOAT
    (31) tipo -> . CHAR
    (32) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 25

state 15

    (33) bloque -> MAIN . OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE
    (34) bloque -> MAIN . OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE

    OPENPARENTHESES shift and go to state 26


state 16

    (3) programaP -> vars programaP .

    $end            reduce using rule 3 (programaP -> vars programaP .)


state 17

    (4) programaP -> clase programaP .

    $end            reduce using rule 4 (programaP -> clase programaP .)


state 18

    (5) programaP -> funcion programaP .

    $end            reduce using rule 5 (programaP -> funcion programaP .)


state 19

    (21) vars -> VARS tipo . savetype TWODOTS varsP
    (24) savetype -> .

    TWODOTS         reduce using rule 24 (savetype -> .)

    savetype                       shift and go to state 27

state 20

    (29) tipo -> INT .

    TWODOTS         reduce using rule 29 (tipo -> INT .)
    ID              reduce using rule 29 (tipo -> INT .)


state 21

    (30) tipo -> FLOAT .

    TWODOTS         reduce using rule 30 (tipo -> FLOAT .)
    ID              reduce using rule 30 (tipo -> FLOAT .)


state 22

    (31) tipo -> CHAR .

    TWODOTS         reduce using rule 31 (tipo -> CHAR .)
    ID              reduce using rule 31 (tipo -> CHAR .)


state 23

    (32) tipo -> BOOL .

    TWODOTS         reduce using rule 32 (tipo -> BOOL .)
    ID              reduce using rule 32 (tipo -> BOOL .)


state 24

    (8) clase -> CLASS ID . OPENBRACE claseP CLOSEBRACE

    OPENBRACE       shift and go to state 28


state 25

    (13) funcion -> FUNCTION tipo . TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE

    TWODOTS         shift and go to state 29


state 26

    (33) bloque -> MAIN OPENPARENTHESES . CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE
    (34) bloque -> MAIN OPENPARENTHESES . CLOSEPARENTHESES OPENBRACE CLOSEBRACE

    CLOSEPARENTHESES shift and go to state 30


state 27

    (21) vars -> VARS tipo savetype . TWODOTS varsP

    TWODOTS         shift and go to state 31


state 28

    (8) clase -> CLASS ID OPENBRACE . claseP CLOSEBRACE
    (9) claseP -> . vars clasePP
    (10) claseP -> . clasePP
    (21) vars -> . VARS tipo savetype TWODOTS varsP
    (11) clasePP -> . funcion clasePP
    (12) clasePP -> . empty
    (13) funcion -> . FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (107) empty -> .

    VARS            shift and go to state 12
    FUNCTION        shift and go to state 14
    CLOSEBRACE      reduce using rule 107 (empty -> .)

    claseP                         shift and go to state 32
    vars                           shift and go to state 33
    clasePP                        shift and go to state 34
    funcion                        shift and go to state 35
    empty                          shift and go to state 36

state 29

    (13) funcion -> FUNCTION tipo TWODOTS . ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE

    ID              shift and go to state 37


state 30

    (33) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES . OPENBRACE establishmainscope estatuto CLOSEBRACE
    (34) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES . OPENBRACE CLOSEBRACE

    OPENBRACE       shift and go to state 38


state 31

    (21) vars -> VARS tipo savetype TWODOTS . varsP
    (22) varsP -> . param COMMA varsP
    (23) varsP -> . param SEMICOLON
    (25) param -> . ID
    (26) param -> . ID OPENBRACKET paramsP CLOSEBRACKET

    ID              shift and go to state 41

    varsP                          shift and go to state 39
    param                          shift and go to state 40

state 32

    (8) clase -> CLASS ID OPENBRACE claseP . CLOSEBRACE

    CLOSEBRACE      shift and go to state 42


state 33

    (9) claseP -> vars . clasePP
    (11) clasePP -> . funcion clasePP
    (12) clasePP -> . empty
    (13) funcion -> . FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (107) empty -> .

    FUNCTION        shift and go to state 14
    CLOSEBRACE      reduce using rule 107 (empty -> .)

    clasePP                        shift and go to state 43
    funcion                        shift and go to state 35
    empty                          shift and go to state 36

state 34

    (10) claseP -> clasePP .

    CLOSEBRACE      reduce using rule 10 (claseP -> clasePP .)


state 35

    (11) clasePP -> funcion . clasePP
    (11) clasePP -> . funcion clasePP
    (12) clasePP -> . empty
    (13) funcion -> . FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (107) empty -> .

    FUNCTION        shift and go to state 14
    CLOSEBRACE      reduce using rule 107 (empty -> .)

    funcion                        shift and go to state 35
    clasePP                        shift and go to state 44
    empty                          shift and go to state 36

state 36

    (12) clasePP -> empty .

    CLOSEBRACE      reduce using rule 12 (clasePP -> empty .)


state 37

    (13) funcion -> FUNCTION tipo TWODOTS ID . savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (14) savefuncscope -> .

    OPENPARENTHESES reduce using rule 14 (savefuncscope -> .)

    savefuncscope                  shift and go to state 45

state 38

    (33) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE . establishmainscope estatuto CLOSEBRACE
    (34) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE . CLOSEBRACE
    (35) establishmainscope -> .

  ! shift/reduce conflict for CLOSEBRACE resolved as shift
    CLOSEBRACE      shift and go to state 47
    ID              reduce using rule 35 (establishmainscope -> .)
    RETURN          reduce using rule 35 (establishmainscope -> .)
    READ            reduce using rule 35 (establishmainscope -> .)
    WRITE           reduce using rule 35 (establishmainscope -> .)
    IF              reduce using rule 35 (establishmainscope -> .)
    WHILE           reduce using rule 35 (establishmainscope -> .)
    FOR             reduce using rule 35 (establishmainscope -> .)
    VARS            reduce using rule 35 (establishmainscope -> .)

  ! CLOSEBRACE      [ reduce using rule 35 (establishmainscope -> .) ]

    establishmainscope             shift and go to state 46

state 39

    (21) vars -> VARS tipo savetype TWODOTS varsP .

    VARS            reduce using rule 21 (vars -> VARS tipo savetype TWODOTS varsP .)
    CLASS           reduce using rule 21 (vars -> VARS tipo savetype TWODOTS varsP .)
    FUNCTION        reduce using rule 21 (vars -> VARS tipo savetype TWODOTS varsP .)
    MAIN            reduce using rule 21 (vars -> VARS tipo savetype TWODOTS varsP .)
    $end            reduce using rule 21 (vars -> VARS tipo savetype TWODOTS varsP .)
    CLOSEBRACE      reduce using rule 21 (vars -> VARS tipo savetype TWODOTS varsP .)
    ID              reduce using rule 21 (vars -> VARS tipo savetype TWODOTS varsP .)
    RETURN          reduce using rule 21 (vars -> VARS tipo savetype TWODOTS varsP .)
    READ            reduce using rule 21 (vars -> VARS tipo savetype TWODOTS varsP .)
    WRITE           reduce using rule 21 (vars -> VARS tipo savetype TWODOTS varsP .)
    IF              reduce using rule 21 (vars -> VARS tipo savetype TWODOTS varsP .)
    WHILE           reduce using rule 21 (vars -> VARS tipo savetype TWODOTS varsP .)
    FOR             reduce using rule 21 (vars -> VARS tipo savetype TWODOTS varsP .)


state 40

    (22) varsP -> param . COMMA varsP
    (23) varsP -> param . SEMICOLON

    COMMA           shift and go to state 48
    SEMICOLON       shift and go to state 49


state 41

    (25) param -> ID .
    (26) param -> ID . OPENBRACKET paramsP CLOSEBRACKET

    COMMA           reduce using rule 25 (param -> ID .)
    SEMICOLON       reduce using rule 25 (param -> ID .)
    CLOSEPARENTHESES reduce using rule 25 (param -> ID .)
    OPENBRACKET     shift and go to state 50


state 42

    (8) clase -> CLASS ID OPENBRACE claseP CLOSEBRACE .

    VARS            reduce using rule 8 (clase -> CLASS ID OPENBRACE claseP CLOSEBRACE .)
    CLASS           reduce using rule 8 (clase -> CLASS ID OPENBRACE claseP CLOSEBRACE .)
    FUNCTION        reduce using rule 8 (clase -> CLASS ID OPENBRACE claseP CLOSEBRACE .)
    MAIN            reduce using rule 8 (clase -> CLASS ID OPENBRACE claseP CLOSEBRACE .)
    $end            reduce using rule 8 (clase -> CLASS ID OPENBRACE claseP CLOSEBRACE .)


state 43

    (9) claseP -> vars clasePP .

    CLOSEBRACE      reduce using rule 9 (claseP -> vars clasePP .)


state 44

    (11) clasePP -> funcion clasePP .

    CLOSEBRACE      reduce using rule 11 (clasePP -> funcion clasePP .)


state 45

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope . OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE

    OPENPARENTHESES shift and go to state 51


state 46

    (33) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope . estatuto CLOSEBRACE
    (36) estatuto -> . asignacion estatuto
    (37) estatuto -> . llamada estatuto
    (38) estatuto -> . retorno estatuto
    (39) estatuto -> . lectura estatuto
    (40) estatuto -> . escritura estatuto
    (41) estatuto -> . repeticion estatuto
    (42) estatuto -> . declaracion estatuto
    (43) estatuto -> . condicion estatuto
    (44) estatuto -> . empty
    (54) asignacion -> . ID EQUALS exp SEMICOLON
    (55) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (52) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (53) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (56) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (72) repeticion -> . condicional
    (73) repeticion -> . no_condicional
    (45) declaracion -> . vars
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (107) empty -> .
    (74) condicional -> . WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (81) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (21) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 107 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    estatuto                       shift and go to state 52
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 47

    (34) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE .

    $end            reduce using rule 34 (bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE .)


state 48

    (22) varsP -> param COMMA . varsP
    (22) varsP -> . param COMMA varsP
    (23) varsP -> . param SEMICOLON
    (25) param -> . ID
    (26) param -> . ID OPENBRACKET paramsP CLOSEBRACKET

    ID              shift and go to state 41

    param                          shift and go to state 40
    varsP                          shift and go to state 72

state 49

    (23) varsP -> param SEMICOLON .

    VARS            reduce using rule 23 (varsP -> param SEMICOLON .)
    CLASS           reduce using rule 23 (varsP -> param SEMICOLON .)
    FUNCTION        reduce using rule 23 (varsP -> param SEMICOLON .)
    MAIN            reduce using rule 23 (varsP -> param SEMICOLON .)
    $end            reduce using rule 23 (varsP -> param SEMICOLON .)
    CLOSEBRACE      reduce using rule 23 (varsP -> param SEMICOLON .)
    ID              reduce using rule 23 (varsP -> param SEMICOLON .)
    RETURN          reduce using rule 23 (varsP -> param SEMICOLON .)
    READ            reduce using rule 23 (varsP -> param SEMICOLON .)
    WRITE           reduce using rule 23 (varsP -> param SEMICOLON .)
    IF              reduce using rule 23 (varsP -> param SEMICOLON .)
    WHILE           reduce using rule 23 (varsP -> param SEMICOLON .)
    FOR             reduce using rule 23 (varsP -> param SEMICOLON .)


state 50

    (26) param -> ID OPENBRACKET . paramsP CLOSEBRACKET
    (27) paramsP -> . exp COMMA paramsP
    (28) paramsP -> . exp
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    paramsP                        shift and go to state 74
    exp                            shift and go to state 75
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 51

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES . paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (15) paramsfunction -> . tipo savetipo param COMMA paramsfunction
    (16) paramsfunction -> . tipo savetipo param
    (29) tipo -> . INT
    (30) tipo -> . FLOAT
    (31) tipo -> . CHAR
    (32) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 88
    paramsfunction                 shift and go to state 89

state 52

    (33) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto . CLOSEBRACE

    CLOSEBRACE      shift and go to state 90


state 53

    (36) estatuto -> asignacion . estatuto
    (36) estatuto -> . asignacion estatuto
    (37) estatuto -> . llamada estatuto
    (38) estatuto -> . retorno estatuto
    (39) estatuto -> . lectura estatuto
    (40) estatuto -> . escritura estatuto
    (41) estatuto -> . repeticion estatuto
    (42) estatuto -> . declaracion estatuto
    (43) estatuto -> . condicion estatuto
    (44) estatuto -> . empty
    (54) asignacion -> . ID EQUALS exp SEMICOLON
    (55) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (52) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (53) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (56) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (72) repeticion -> . condicional
    (73) repeticion -> . no_condicional
    (45) declaracion -> . vars
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (107) empty -> .
    (74) condicional -> . WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (81) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (21) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 107 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    asignacion                     shift and go to state 53
    estatuto                       shift and go to state 91
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 54

    (37) estatuto -> llamada . estatuto
    (36) estatuto -> . asignacion estatuto
    (37) estatuto -> . llamada estatuto
    (38) estatuto -> . retorno estatuto
    (39) estatuto -> . lectura estatuto
    (40) estatuto -> . escritura estatuto
    (41) estatuto -> . repeticion estatuto
    (42) estatuto -> . declaracion estatuto
    (43) estatuto -> . condicion estatuto
    (44) estatuto -> . empty
    (54) asignacion -> . ID EQUALS exp SEMICOLON
    (55) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (52) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (53) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (56) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (72) repeticion -> . condicional
    (73) repeticion -> . no_condicional
    (45) declaracion -> . vars
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (107) empty -> .
    (74) condicional -> . WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (81) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (21) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 107 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    llamada                        shift and go to state 54
    estatuto                       shift and go to state 92
    asignacion                     shift and go to state 53
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 55

    (38) estatuto -> retorno . estatuto
    (36) estatuto -> . asignacion estatuto
    (37) estatuto -> . llamada estatuto
    (38) estatuto -> . retorno estatuto
    (39) estatuto -> . lectura estatuto
    (40) estatuto -> . escritura estatuto
    (41) estatuto -> . repeticion estatuto
    (42) estatuto -> . declaracion estatuto
    (43) estatuto -> . condicion estatuto
    (44) estatuto -> . empty
    (54) asignacion -> . ID EQUALS exp SEMICOLON
    (55) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (52) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (53) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (56) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (72) repeticion -> . condicional
    (73) repeticion -> . no_condicional
    (45) declaracion -> . vars
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (107) empty -> .
    (74) condicional -> . WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (81) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (21) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 107 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    retorno                        shift and go to state 55
    estatuto                       shift and go to state 93
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 56

    (39) estatuto -> lectura . estatuto
    (36) estatuto -> . asignacion estatuto
    (37) estatuto -> . llamada estatuto
    (38) estatuto -> . retorno estatuto
    (39) estatuto -> . lectura estatuto
    (40) estatuto -> . escritura estatuto
    (41) estatuto -> . repeticion estatuto
    (42) estatuto -> . declaracion estatuto
    (43) estatuto -> . condicion estatuto
    (44) estatuto -> . empty
    (54) asignacion -> . ID EQUALS exp SEMICOLON
    (55) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (52) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (53) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (56) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (72) repeticion -> . condicional
    (73) repeticion -> . no_condicional
    (45) declaracion -> . vars
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (107) empty -> .
    (74) condicional -> . WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (81) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (21) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 107 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    lectura                        shift and go to state 56
    estatuto                       shift and go to state 94
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 57

    (40) estatuto -> escritura . estatuto
    (36) estatuto -> . asignacion estatuto
    (37) estatuto -> . llamada estatuto
    (38) estatuto -> . retorno estatuto
    (39) estatuto -> . lectura estatuto
    (40) estatuto -> . escritura estatuto
    (41) estatuto -> . repeticion estatuto
    (42) estatuto -> . declaracion estatuto
    (43) estatuto -> . condicion estatuto
    (44) estatuto -> . empty
    (54) asignacion -> . ID EQUALS exp SEMICOLON
    (55) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (52) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (53) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (56) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (72) repeticion -> . condicional
    (73) repeticion -> . no_condicional
    (45) declaracion -> . vars
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (107) empty -> .
    (74) condicional -> . WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (81) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (21) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 107 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    escritura                      shift and go to state 57
    estatuto                       shift and go to state 95
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 58

    (41) estatuto -> repeticion . estatuto
    (36) estatuto -> . asignacion estatuto
    (37) estatuto -> . llamada estatuto
    (38) estatuto -> . retorno estatuto
    (39) estatuto -> . lectura estatuto
    (40) estatuto -> . escritura estatuto
    (41) estatuto -> . repeticion estatuto
    (42) estatuto -> . declaracion estatuto
    (43) estatuto -> . condicion estatuto
    (44) estatuto -> . empty
    (54) asignacion -> . ID EQUALS exp SEMICOLON
    (55) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (52) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (53) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (56) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (72) repeticion -> . condicional
    (73) repeticion -> . no_condicional
    (45) declaracion -> . vars
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (107) empty -> .
    (74) condicional -> . WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (81) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (21) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 107 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    repeticion                     shift and go to state 58
    estatuto                       shift and go to state 96
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 59

    (42) estatuto -> declaracion . estatuto
    (36) estatuto -> . asignacion estatuto
    (37) estatuto -> . llamada estatuto
    (38) estatuto -> . retorno estatuto
    (39) estatuto -> . lectura estatuto
    (40) estatuto -> . escritura estatuto
    (41) estatuto -> . repeticion estatuto
    (42) estatuto -> . declaracion estatuto
    (43) estatuto -> . condicion estatuto
    (44) estatuto -> . empty
    (54) asignacion -> . ID EQUALS exp SEMICOLON
    (55) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (52) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (53) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (56) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (72) repeticion -> . condicional
    (73) repeticion -> . no_condicional
    (45) declaracion -> . vars
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (107) empty -> .
    (74) condicional -> . WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (81) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (21) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 107 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    declaracion                    shift and go to state 59
    estatuto                       shift and go to state 97
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 60

    (43) estatuto -> condicion . estatuto
    (36) estatuto -> . asignacion estatuto
    (37) estatuto -> . llamada estatuto
    (38) estatuto -> . retorno estatuto
    (39) estatuto -> . lectura estatuto
    (40) estatuto -> . escritura estatuto
    (41) estatuto -> . repeticion estatuto
    (42) estatuto -> . declaracion estatuto
    (43) estatuto -> . condicion estatuto
    (44) estatuto -> . empty
    (54) asignacion -> . ID EQUALS exp SEMICOLON
    (55) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (52) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (53) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (56) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (72) repeticion -> . condicional
    (73) repeticion -> . no_condicional
    (45) declaracion -> . vars
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (107) empty -> .
    (74) condicional -> . WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (81) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (21) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 107 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    condicion                      shift and go to state 60
    estatuto                       shift and go to state 98
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 61

    (44) estatuto -> empty .

    CLOSEBRACE      reduce using rule 44 (estatuto -> empty .)


state 62

    (54) asignacion -> ID . EQUALS exp SEMICOLON
    (55) asignacion -> ID . OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> ID . gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (47) gen_era -> .

    EQUALS          shift and go to state 99
    OPENBRACKET     shift and go to state 100
    OPENPARENTHESES reduce using rule 47 (gen_era -> .)

    gen_era                        shift and go to state 101

state 63

    (52) retorno -> RETURN . OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON

    OPENPARENTHESES shift and go to state 102


state 64

    (53) lectura -> READ . OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON

    OPENPARENTHESES shift and go to state 103


state 65

    (56) escritura -> WRITE . OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON

    OPENPARENTHESES shift and go to state 104


state 66

    (72) repeticion -> condicional .

    ID              reduce using rule 72 (repeticion -> condicional .)
    RETURN          reduce using rule 72 (repeticion -> condicional .)
    READ            reduce using rule 72 (repeticion -> condicional .)
    WRITE           reduce using rule 72 (repeticion -> condicional .)
    IF              reduce using rule 72 (repeticion -> condicional .)
    WHILE           reduce using rule 72 (repeticion -> condicional .)
    FOR             reduce using rule 72 (repeticion -> condicional .)
    VARS            reduce using rule 72 (repeticion -> condicional .)
    CLOSEBRACE      reduce using rule 72 (repeticion -> condicional .)


state 67

    (73) repeticion -> no_condicional .

    ID              reduce using rule 73 (repeticion -> no_condicional .)
    RETURN          reduce using rule 73 (repeticion -> no_condicional .)
    READ            reduce using rule 73 (repeticion -> no_condicional .)
    WRITE           reduce using rule 73 (repeticion -> no_condicional .)
    IF              reduce using rule 73 (repeticion -> no_condicional .)
    WHILE           reduce using rule 73 (repeticion -> no_condicional .)
    FOR             reduce using rule 73 (repeticion -> no_condicional .)
    VARS            reduce using rule 73 (repeticion -> no_condicional .)
    CLOSEBRACE      reduce using rule 73 (repeticion -> no_condicional .)


state 68

    (45) declaracion -> vars .

    ID              reduce using rule 45 (declaracion -> vars .)
    RETURN          reduce using rule 45 (declaracion -> vars .)
    READ            reduce using rule 45 (declaracion -> vars .)
    WRITE           reduce using rule 45 (declaracion -> vars .)
    IF              reduce using rule 45 (declaracion -> vars .)
    WHILE           reduce using rule 45 (declaracion -> vars .)
    FOR             reduce using rule 45 (declaracion -> vars .)
    VARS            reduce using rule 45 (declaracion -> vars .)
    CLOSEBRACE      reduce using rule 45 (declaracion -> vars .)


state 69

    (63) condicion -> IF . OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto

    OPENPARENTHESES shift and go to state 105


state 70

    (74) condicional -> WHILE . OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE

    OPENPARENTHESES shift and go to state 106


state 71

    (81) no_condicional -> FOR . ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE

    ID              shift and go to state 107


state 72

    (22) varsP -> param COMMA varsP .

    VARS            reduce using rule 22 (varsP -> param COMMA varsP .)
    CLASS           reduce using rule 22 (varsP -> param COMMA varsP .)
    FUNCTION        reduce using rule 22 (varsP -> param COMMA varsP .)
    MAIN            reduce using rule 22 (varsP -> param COMMA varsP .)
    $end            reduce using rule 22 (varsP -> param COMMA varsP .)
    CLOSEBRACE      reduce using rule 22 (varsP -> param COMMA varsP .)
    ID              reduce using rule 22 (varsP -> param COMMA varsP .)
    RETURN          reduce using rule 22 (varsP -> param COMMA varsP .)
    READ            reduce using rule 22 (varsP -> param COMMA varsP .)
    WRITE           reduce using rule 22 (varsP -> param COMMA varsP .)
    IF              reduce using rule 22 (varsP -> param COMMA varsP .)
    WHILE           reduce using rule 22 (varsP -> param COMMA varsP .)
    FOR             reduce using rule 22 (varsP -> param COMMA varsP .)


state 73

    (102) factor -> ID .
    (46) llamada -> ID . gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (47) gen_era -> .

    MULTIPLY        reduce using rule 102 (factor -> ID .)
    DIVIDE          reduce using rule 102 (factor -> ID .)
    PLUS            reduce using rule 102 (factor -> ID .)
    MINUS           reduce using rule 102 (factor -> ID .)
    GREATER         reduce using rule 102 (factor -> ID .)
    LESS            reduce using rule 102 (factor -> ID .)
    DIFFERENT       reduce using rule 102 (factor -> ID .)
    EQUALS_BOOLEAN  reduce using rule 102 (factor -> ID .)
    LESSEQUAL       reduce using rule 102 (factor -> ID .)
    GREATEREQUAL    reduce using rule 102 (factor -> ID .)
    AND             reduce using rule 102 (factor -> ID .)
    OR              reduce using rule 102 (factor -> ID .)
    COMMA           reduce using rule 102 (factor -> ID .)
    CLOSEBRACKET    reduce using rule 102 (factor -> ID .)
    CLOSEPARENTHESES reduce using rule 102 (factor -> ID .)
    SEMICOLON       reduce using rule 102 (factor -> ID .)
    TO              reduce using rule 102 (factor -> ID .)
    OPENBRACE       reduce using rule 102 (factor -> ID .)
    OPENPARENTHESES reduce using rule 47 (gen_era -> .)

    gen_era                        shift and go to state 101

state 74

    (26) param -> ID OPENBRACKET paramsP . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 108


state 75

    (27) paramsP -> exp . COMMA paramsP
    (28) paramsP -> exp .

    COMMA           shift and go to state 109
    CLOSEBRACKET    reduce using rule 28 (paramsP -> exp .)


state 76

    (82) exp -> iexp .
    (85) iexp -> iexp . AND nexp
    (86) iexp -> iexp . OR nexp

    COMMA           reduce using rule 82 (exp -> iexp .)
    CLOSEBRACKET    reduce using rule 82 (exp -> iexp .)
    CLOSEPARENTHESES reduce using rule 82 (exp -> iexp .)
    SEMICOLON       reduce using rule 82 (exp -> iexp .)
    TO              reduce using rule 82 (exp -> iexp .)
    OPENBRACE       reduce using rule 82 (exp -> iexp .)
    AND             shift and go to state 110
    OR              shift and go to state 111


state 77

    (83) exp -> NOT . iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    iexp                           shift and go to state 112
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 78

    (84) iexp -> nexp .
    (88) nexp -> nexp . GREATER pexp
    (89) nexp -> nexp . LESS pexp
    (90) nexp -> nexp . DIFFERENT pexp
    (91) nexp -> nexp . EQUALS_BOOLEAN pexp
    (92) nexp -> nexp . LESSEQUAL pexp
    (93) nexp -> nexp . GREATEREQUAL pexp

    AND             reduce using rule 84 (iexp -> nexp .)
    OR              reduce using rule 84 (iexp -> nexp .)
    COMMA           reduce using rule 84 (iexp -> nexp .)
    CLOSEBRACKET    reduce using rule 84 (iexp -> nexp .)
    CLOSEPARENTHESES reduce using rule 84 (iexp -> nexp .)
    SEMICOLON       reduce using rule 84 (iexp -> nexp .)
    TO              reduce using rule 84 (iexp -> nexp .)
    OPENBRACE       reduce using rule 84 (iexp -> nexp .)
    GREATER         shift and go to state 113
    LESS            shift and go to state 114
    DIFFERENT       shift and go to state 115
    EQUALS_BOOLEAN  shift and go to state 116
    LESSEQUAL       shift and go to state 117
    GREATEREQUAL    shift and go to state 118


state 79

    (87) nexp -> pexp .
    (95) pexp -> pexp . PLUS termino
    (96) pexp -> pexp . MINUS termino

    GREATER         reduce using rule 87 (nexp -> pexp .)
    LESS            reduce using rule 87 (nexp -> pexp .)
    DIFFERENT       reduce using rule 87 (nexp -> pexp .)
    EQUALS_BOOLEAN  reduce using rule 87 (nexp -> pexp .)
    LESSEQUAL       reduce using rule 87 (nexp -> pexp .)
    GREATEREQUAL    reduce using rule 87 (nexp -> pexp .)
    AND             reduce using rule 87 (nexp -> pexp .)
    OR              reduce using rule 87 (nexp -> pexp .)
    COMMA           reduce using rule 87 (nexp -> pexp .)
    CLOSEBRACKET    reduce using rule 87 (nexp -> pexp .)
    CLOSEPARENTHESES reduce using rule 87 (nexp -> pexp .)
    SEMICOLON       reduce using rule 87 (nexp -> pexp .)
    TO              reduce using rule 87 (nexp -> pexp .)
    OPENBRACE       reduce using rule 87 (nexp -> pexp .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120


state 80

    (94) pexp -> termino .
    (98) termino -> termino . MULTIPLY factor
    (99) termino -> termino . DIVIDE factor

    PLUS            reduce using rule 94 (pexp -> termino .)
    MINUS           reduce using rule 94 (pexp -> termino .)
    GREATER         reduce using rule 94 (pexp -> termino .)
    LESS            reduce using rule 94 (pexp -> termino .)
    DIFFERENT       reduce using rule 94 (pexp -> termino .)
    EQUALS_BOOLEAN  reduce using rule 94 (pexp -> termino .)
    LESSEQUAL       reduce using rule 94 (pexp -> termino .)
    GREATEREQUAL    reduce using rule 94 (pexp -> termino .)
    AND             reduce using rule 94 (pexp -> termino .)
    OR              reduce using rule 94 (pexp -> termino .)
    COMMA           reduce using rule 94 (pexp -> termino .)
    CLOSEBRACKET    reduce using rule 94 (pexp -> termino .)
    CLOSEPARENTHESES reduce using rule 94 (pexp -> termino .)
    SEMICOLON       reduce using rule 94 (pexp -> termino .)
    TO              reduce using rule 94 (pexp -> termino .)
    OPENBRACE       reduce using rule 94 (pexp -> termino .)
    MULTIPLY        shift and go to state 121
    DIVIDE          shift and go to state 122


state 81

    (97) termino -> factor .

    MULTIPLY        reduce using rule 97 (termino -> factor .)
    DIVIDE          reduce using rule 97 (termino -> factor .)
    PLUS            reduce using rule 97 (termino -> factor .)
    MINUS           reduce using rule 97 (termino -> factor .)
    GREATER         reduce using rule 97 (termino -> factor .)
    LESS            reduce using rule 97 (termino -> factor .)
    DIFFERENT       reduce using rule 97 (termino -> factor .)
    EQUALS_BOOLEAN  reduce using rule 97 (termino -> factor .)
    LESSEQUAL       reduce using rule 97 (termino -> factor .)
    GREATEREQUAL    reduce using rule 97 (termino -> factor .)
    AND             reduce using rule 97 (termino -> factor .)
    OR              reduce using rule 97 (termino -> factor .)
    COMMA           reduce using rule 97 (termino -> factor .)
    CLOSEBRACKET    reduce using rule 97 (termino -> factor .)
    CLOSEPARENTHESES reduce using rule 97 (termino -> factor .)
    SEMICOLON       reduce using rule 97 (termino -> factor .)
    TO              reduce using rule 97 (termino -> factor .)
    OPENBRACE       reduce using rule 97 (termino -> factor .)


state 82

    (100) factor -> CTEB .

    MULTIPLY        reduce using rule 100 (factor -> CTEB .)
    DIVIDE          reduce using rule 100 (factor -> CTEB .)
    PLUS            reduce using rule 100 (factor -> CTEB .)
    MINUS           reduce using rule 100 (factor -> CTEB .)
    GREATER         reduce using rule 100 (factor -> CTEB .)
    LESS            reduce using rule 100 (factor -> CTEB .)
    DIFFERENT       reduce using rule 100 (factor -> CTEB .)
    EQUALS_BOOLEAN  reduce using rule 100 (factor -> CTEB .)
    LESSEQUAL       reduce using rule 100 (factor -> CTEB .)
    GREATEREQUAL    reduce using rule 100 (factor -> CTEB .)
    AND             reduce using rule 100 (factor -> CTEB .)
    OR              reduce using rule 100 (factor -> CTEB .)
    COMMA           reduce using rule 100 (factor -> CTEB .)
    CLOSEBRACKET    reduce using rule 100 (factor -> CTEB .)
    CLOSEPARENTHESES reduce using rule 100 (factor -> CTEB .)
    SEMICOLON       reduce using rule 100 (factor -> CTEB .)
    TO              reduce using rule 100 (factor -> CTEB .)
    OPENBRACE       reduce using rule 100 (factor -> CTEB .)


state 83

    (101) factor -> llamada . printt
    (50) printt -> .

    MULTIPLY        reduce using rule 50 (printt -> .)
    DIVIDE          reduce using rule 50 (printt -> .)
    PLUS            reduce using rule 50 (printt -> .)
    MINUS           reduce using rule 50 (printt -> .)
    GREATER         reduce using rule 50 (printt -> .)
    LESS            reduce using rule 50 (printt -> .)
    DIFFERENT       reduce using rule 50 (printt -> .)
    EQUALS_BOOLEAN  reduce using rule 50 (printt -> .)
    LESSEQUAL       reduce using rule 50 (printt -> .)
    GREATEREQUAL    reduce using rule 50 (printt -> .)
    AND             reduce using rule 50 (printt -> .)
    OR              reduce using rule 50 (printt -> .)
    COMMA           reduce using rule 50 (printt -> .)
    CLOSEBRACKET    reduce using rule 50 (printt -> .)
    CLOSEPARENTHESES reduce using rule 50 (printt -> .)
    SEMICOLON       reduce using rule 50 (printt -> .)
    TO              reduce using rule 50 (printt -> .)
    OPENBRACE       reduce using rule 50 (printt -> .)

    printt                         shift and go to state 123

state 84

    (103) factor -> CTEF .

    MULTIPLY        reduce using rule 103 (factor -> CTEF .)
    DIVIDE          reduce using rule 103 (factor -> CTEF .)
    PLUS            reduce using rule 103 (factor -> CTEF .)
    MINUS           reduce using rule 103 (factor -> CTEF .)
    GREATER         reduce using rule 103 (factor -> CTEF .)
    LESS            reduce using rule 103 (factor -> CTEF .)
    DIFFERENT       reduce using rule 103 (factor -> CTEF .)
    EQUALS_BOOLEAN  reduce using rule 103 (factor -> CTEF .)
    LESSEQUAL       reduce using rule 103 (factor -> CTEF .)
    GREATEREQUAL    reduce using rule 103 (factor -> CTEF .)
    AND             reduce using rule 103 (factor -> CTEF .)
    OR              reduce using rule 103 (factor -> CTEF .)
    COMMA           reduce using rule 103 (factor -> CTEF .)
    CLOSEBRACKET    reduce using rule 103 (factor -> CTEF .)
    CLOSEPARENTHESES reduce using rule 103 (factor -> CTEF .)
    SEMICOLON       reduce using rule 103 (factor -> CTEF .)
    TO              reduce using rule 103 (factor -> CTEF .)
    OPENBRACE       reduce using rule 103 (factor -> CTEF .)


state 85

    (104) factor -> CTEI .

    MULTIPLY        reduce using rule 104 (factor -> CTEI .)
    DIVIDE          reduce using rule 104 (factor -> CTEI .)
    PLUS            reduce using rule 104 (factor -> CTEI .)
    MINUS           reduce using rule 104 (factor -> CTEI .)
    GREATER         reduce using rule 104 (factor -> CTEI .)
    LESS            reduce using rule 104 (factor -> CTEI .)
    DIFFERENT       reduce using rule 104 (factor -> CTEI .)
    EQUALS_BOOLEAN  reduce using rule 104 (factor -> CTEI .)
    LESSEQUAL       reduce using rule 104 (factor -> CTEI .)
    GREATEREQUAL    reduce using rule 104 (factor -> CTEI .)
    AND             reduce using rule 104 (factor -> CTEI .)
    OR              reduce using rule 104 (factor -> CTEI .)
    COMMA           reduce using rule 104 (factor -> CTEI .)
    CLOSEBRACKET    reduce using rule 104 (factor -> CTEI .)
    CLOSEPARENTHESES reduce using rule 104 (factor -> CTEI .)
    SEMICOLON       reduce using rule 104 (factor -> CTEI .)
    TO              reduce using rule 104 (factor -> CTEI .)
    OPENBRACE       reduce using rule 104 (factor -> CTEI .)


state 86

    (105) factor -> CTEC .

    MULTIPLY        reduce using rule 105 (factor -> CTEC .)
    DIVIDE          reduce using rule 105 (factor -> CTEC .)
    PLUS            reduce using rule 105 (factor -> CTEC .)
    MINUS           reduce using rule 105 (factor -> CTEC .)
    GREATER         reduce using rule 105 (factor -> CTEC .)
    LESS            reduce using rule 105 (factor -> CTEC .)
    DIFFERENT       reduce using rule 105 (factor -> CTEC .)
    EQUALS_BOOLEAN  reduce using rule 105 (factor -> CTEC .)
    LESSEQUAL       reduce using rule 105 (factor -> CTEC .)
    GREATEREQUAL    reduce using rule 105 (factor -> CTEC .)
    AND             reduce using rule 105 (factor -> CTEC .)
    OR              reduce using rule 105 (factor -> CTEC .)
    COMMA           reduce using rule 105 (factor -> CTEC .)
    CLOSEBRACKET    reduce using rule 105 (factor -> CTEC .)
    CLOSEPARENTHESES reduce using rule 105 (factor -> CTEC .)
    SEMICOLON       reduce using rule 105 (factor -> CTEC .)
    TO              reduce using rule 105 (factor -> CTEC .)
    OPENBRACE       reduce using rule 105 (factor -> CTEC .)


state 87

    (106) factor -> OPENPARENTHESES . exp CLOSEPARENTHESES
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    exp                            shift and go to state 124
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 88

    (15) paramsfunction -> tipo . savetipo param COMMA paramsfunction
    (16) paramsfunction -> tipo . savetipo param
    (17) savetipo -> .

    ID              reduce using rule 17 (savetipo -> .)

    savetipo                       shift and go to state 125

state 89

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction . savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (18) savesequence -> .

    CLOSEPARENTHESES reduce using rule 18 (savesequence -> .)

    savesequence                   shift and go to state 126

state 90

    (33) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE .

    $end            reduce using rule 33 (bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE .)


state 91

    (36) estatuto -> asignacion estatuto .

    CLOSEBRACE      reduce using rule 36 (estatuto -> asignacion estatuto .)


state 92

    (37) estatuto -> llamada estatuto .

    CLOSEBRACE      reduce using rule 37 (estatuto -> llamada estatuto .)


state 93

    (38) estatuto -> retorno estatuto .

    CLOSEBRACE      reduce using rule 38 (estatuto -> retorno estatuto .)


state 94

    (39) estatuto -> lectura estatuto .

    CLOSEBRACE      reduce using rule 39 (estatuto -> lectura estatuto .)


state 95

    (40) estatuto -> escritura estatuto .

    CLOSEBRACE      reduce using rule 40 (estatuto -> escritura estatuto .)


state 96

    (41) estatuto -> repeticion estatuto .

    CLOSEBRACE      reduce using rule 41 (estatuto -> repeticion estatuto .)


state 97

    (42) estatuto -> declaracion estatuto .

    CLOSEBRACE      reduce using rule 42 (estatuto -> declaracion estatuto .)


state 98

    (43) estatuto -> condicion estatuto .

    CLOSEBRACE      reduce using rule 43 (estatuto -> condicion estatuto .)


state 99

    (54) asignacion -> ID EQUALS . exp SEMICOLON
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    exp                            shift and go to state 127
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 100

    (55) asignacion -> ID OPENBRACKET . paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (27) paramsP -> . exp COMMA paramsP
    (28) paramsP -> . exp
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    paramsP                        shift and go to state 128
    exp                            shift and go to state 75
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 101

    (46) llamada -> ID gen_era . OPENPARENTHESES param_call CLOSEPARENTHESES

    OPENPARENTHESES shift and go to state 129


state 102

    (52) retorno -> RETURN OPENPARENTHESES . exp CLOSEPARENTHESES SEMICOLON
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    exp                            shift and go to state 130
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 103

    (53) lectura -> READ OPENPARENTHESES . param CLOSEPARENTHESES SEMICOLON
    (25) param -> . ID
    (26) param -> . ID OPENBRACKET paramsP CLOSEBRACKET

    ID              shift and go to state 41

    param                          shift and go to state 131

state 104

    (56) escritura -> WRITE OPENPARENTHESES . escrituraP CLOSEPARENTHESES SEMICOLON
    (57) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP
    (58) escrituraP -> . exp COMMA escrituraP
    (59) escrituraP -> . ID COMMA escrituraP
    (60) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK
    (61) escrituraP -> . exp
    (62) escrituraP -> . ID
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    QUOTATIONMARK   shift and go to state 133
    ID              shift and go to state 135
    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    escrituraP                     shift and go to state 132
    exp                            shift and go to state 134
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 105

    (63) condicion -> IF OPENPARENTHESES . exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    exp                            shift and go to state 136
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 106

    (74) condicional -> WHILE OPENPARENTHESES . migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (75) migaja -> .

    NOT             reduce using rule 75 (migaja -> .)
    CTEB            reduce using rule 75 (migaja -> .)
    ID              reduce using rule 75 (migaja -> .)
    CTEF            reduce using rule 75 (migaja -> .)
    CTEI            reduce using rule 75 (migaja -> .)
    CTEC            reduce using rule 75 (migaja -> .)
    OPENPARENTHESES reduce using rule 75 (migaja -> .)

    migaja                         shift and go to state 137

state 107

    (81) no_condicional -> FOR ID . EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE

    EQUALS          shift and go to state 138


state 108

    (26) param -> ID OPENBRACKET paramsP CLOSEBRACKET .

    COMMA           reduce using rule 26 (param -> ID OPENBRACKET paramsP CLOSEBRACKET .)
    SEMICOLON       reduce using rule 26 (param -> ID OPENBRACKET paramsP CLOSEBRACKET .)
    CLOSEPARENTHESES reduce using rule 26 (param -> ID OPENBRACKET paramsP CLOSEBRACKET .)


state 109

    (27) paramsP -> exp COMMA . paramsP
    (27) paramsP -> . exp COMMA paramsP
    (28) paramsP -> . exp
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    exp                            shift and go to state 75
    paramsP                        shift and go to state 139
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 110

    (85) iexp -> iexp AND . nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    nexp                           shift and go to state 140
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 111

    (86) iexp -> iexp OR . nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    nexp                           shift and go to state 141
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 112

    (83) exp -> NOT iexp .
    (85) iexp -> iexp . AND nexp
    (86) iexp -> iexp . OR nexp

    COMMA           reduce using rule 83 (exp -> NOT iexp .)
    CLOSEBRACKET    reduce using rule 83 (exp -> NOT iexp .)
    CLOSEPARENTHESES reduce using rule 83 (exp -> NOT iexp .)
    SEMICOLON       reduce using rule 83 (exp -> NOT iexp .)
    TO              reduce using rule 83 (exp -> NOT iexp .)
    OPENBRACE       reduce using rule 83 (exp -> NOT iexp .)
    AND             shift and go to state 110
    OR              shift and go to state 111


state 113

    (88) nexp -> nexp GREATER . pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    pexp                           shift and go to state 142
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 114

    (89) nexp -> nexp LESS . pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    pexp                           shift and go to state 143
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 115

    (90) nexp -> nexp DIFFERENT . pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    pexp                           shift and go to state 144
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 116

    (91) nexp -> nexp EQUALS_BOOLEAN . pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    pexp                           shift and go to state 145
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 117

    (92) nexp -> nexp LESSEQUAL . pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    pexp                           shift and go to state 146
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 118

    (93) nexp -> nexp GREATEREQUAL . pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    pexp                           shift and go to state 147
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 119

    (95) pexp -> pexp PLUS . termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    termino                        shift and go to state 148
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 120

    (96) pexp -> pexp MINUS . termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    termino                        shift and go to state 149
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 121

    (98) termino -> termino MULTIPLY . factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    factor                         shift and go to state 150
    llamada                        shift and go to state 83

state 122

    (99) termino -> termino DIVIDE . factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    factor                         shift and go to state 151
    llamada                        shift and go to state 83

state 123

    (101) factor -> llamada printt .

    MULTIPLY        reduce using rule 101 (factor -> llamada printt .)
    DIVIDE          reduce using rule 101 (factor -> llamada printt .)
    PLUS            reduce using rule 101 (factor -> llamada printt .)
    MINUS           reduce using rule 101 (factor -> llamada printt .)
    GREATER         reduce using rule 101 (factor -> llamada printt .)
    LESS            reduce using rule 101 (factor -> llamada printt .)
    DIFFERENT       reduce using rule 101 (factor -> llamada printt .)
    EQUALS_BOOLEAN  reduce using rule 101 (factor -> llamada printt .)
    LESSEQUAL       reduce using rule 101 (factor -> llamada printt .)
    GREATEREQUAL    reduce using rule 101 (factor -> llamada printt .)
    AND             reduce using rule 101 (factor -> llamada printt .)
    OR              reduce using rule 101 (factor -> llamada printt .)
    COMMA           reduce using rule 101 (factor -> llamada printt .)
    CLOSEBRACKET    reduce using rule 101 (factor -> llamada printt .)
    CLOSEPARENTHESES reduce using rule 101 (factor -> llamada printt .)
    SEMICOLON       reduce using rule 101 (factor -> llamada printt .)
    TO              reduce using rule 101 (factor -> llamada printt .)
    OPENBRACE       reduce using rule 101 (factor -> llamada printt .)


state 124

    (106) factor -> OPENPARENTHESES exp . CLOSEPARENTHESES

    CLOSEPARENTHESES shift and go to state 152


state 125

    (15) paramsfunction -> tipo savetipo . param COMMA paramsfunction
    (16) paramsfunction -> tipo savetipo . param
    (25) param -> . ID
    (26) param -> . ID OPENBRACKET paramsP CLOSEBRACKET

    ID              shift and go to state 41

    param                          shift and go to state 153

state 126

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence . CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE

    CLOSEPARENTHESES shift and go to state 154


state 127

    (54) asignacion -> ID EQUALS exp . SEMICOLON

    SEMICOLON       shift and go to state 155


state 128

    (55) asignacion -> ID OPENBRACKET paramsP . CLOSEBRACKET EQUALS exp SEMICOLON

    CLOSEBRACKET    shift and go to state 156


state 129

    (46) llamada -> ID gen_era OPENPARENTHESES . param_call CLOSEPARENTHESES
    (48) param_call -> . exp gen_param printt
    (49) param_call -> . exp gen_param COMMA param_call
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    param_call                     shift and go to state 157
    exp                            shift and go to state 158
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 130

    (52) retorno -> RETURN OPENPARENTHESES exp . CLOSEPARENTHESES SEMICOLON

    CLOSEPARENTHESES shift and go to state 159


state 131

    (53) lectura -> READ OPENPARENTHESES param . CLOSEPARENTHESES SEMICOLON

    CLOSEPARENTHESES shift and go to state 160


state 132

    (56) escritura -> WRITE OPENPARENTHESES escrituraP . CLOSEPARENTHESES SEMICOLON

    CLOSEPARENTHESES shift and go to state 161


state 133

    (57) escrituraP -> QUOTATIONMARK . CTESTRING QUOTATIONMARK COMMA escrituraP
    (60) escrituraP -> QUOTATIONMARK . CTESTRING QUOTATIONMARK

    CTESTRING       shift and go to state 162


state 134

    (58) escrituraP -> exp . COMMA escrituraP
    (61) escrituraP -> exp .

    COMMA           shift and go to state 163
    CLOSEPARENTHESES reduce using rule 61 (escrituraP -> exp .)


state 135

    (59) escrituraP -> ID . COMMA escrituraP
    (62) escrituraP -> ID .
    (102) factor -> ID .
    (46) llamada -> ID . gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (47) gen_era -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for CLOSEPARENTHESES resolved using rule 62 (escrituraP -> ID .)
    COMMA           shift and go to state 164
    CLOSEPARENTHESES reduce using rule 62 (escrituraP -> ID .)
    MULTIPLY        reduce using rule 102 (factor -> ID .)
    DIVIDE          reduce using rule 102 (factor -> ID .)
    PLUS            reduce using rule 102 (factor -> ID .)
    MINUS           reduce using rule 102 (factor -> ID .)
    GREATER         reduce using rule 102 (factor -> ID .)
    LESS            reduce using rule 102 (factor -> ID .)
    DIFFERENT       reduce using rule 102 (factor -> ID .)
    EQUALS_BOOLEAN  reduce using rule 102 (factor -> ID .)
    LESSEQUAL       reduce using rule 102 (factor -> ID .)
    GREATEREQUAL    reduce using rule 102 (factor -> ID .)
    AND             reduce using rule 102 (factor -> ID .)
    OR              reduce using rule 102 (factor -> ID .)
    OPENPARENTHESES reduce using rule 47 (gen_era -> .)

  ! COMMA           [ reduce using rule 102 (factor -> ID .) ]
  ! CLOSEPARENTHESES [ reduce using rule 102 (factor -> ID .) ]

    gen_era                        shift and go to state 101

state 136

    (63) condicion -> IF OPENPARENTHESES exp . CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto

    CLOSEPARENTHESES shift and go to state 165


state 137

    (74) condicional -> WHILE OPENPARENTHESES migaja . exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    exp                            shift and go to state 166
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 138

    (81) no_condicional -> FOR ID EQUALS . exp TO exp OPENBRACE estatuto CLOSEBRACE
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    exp                            shift and go to state 167
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 139

    (27) paramsP -> exp COMMA paramsP .

    CLOSEBRACKET    reduce using rule 27 (paramsP -> exp COMMA paramsP .)


state 140

    (85) iexp -> iexp AND nexp .
    (88) nexp -> nexp . GREATER pexp
    (89) nexp -> nexp . LESS pexp
    (90) nexp -> nexp . DIFFERENT pexp
    (91) nexp -> nexp . EQUALS_BOOLEAN pexp
    (92) nexp -> nexp . LESSEQUAL pexp
    (93) nexp -> nexp . GREATEREQUAL pexp

    AND             reduce using rule 85 (iexp -> iexp AND nexp .)
    OR              reduce using rule 85 (iexp -> iexp AND nexp .)
    COMMA           reduce using rule 85 (iexp -> iexp AND nexp .)
    CLOSEBRACKET    reduce using rule 85 (iexp -> iexp AND nexp .)
    CLOSEPARENTHESES reduce using rule 85 (iexp -> iexp AND nexp .)
    SEMICOLON       reduce using rule 85 (iexp -> iexp AND nexp .)
    TO              reduce using rule 85 (iexp -> iexp AND nexp .)
    OPENBRACE       reduce using rule 85 (iexp -> iexp AND nexp .)
    GREATER         shift and go to state 113
    LESS            shift and go to state 114
    DIFFERENT       shift and go to state 115
    EQUALS_BOOLEAN  shift and go to state 116
    LESSEQUAL       shift and go to state 117
    GREATEREQUAL    shift and go to state 118


state 141

    (86) iexp -> iexp OR nexp .
    (88) nexp -> nexp . GREATER pexp
    (89) nexp -> nexp . LESS pexp
    (90) nexp -> nexp . DIFFERENT pexp
    (91) nexp -> nexp . EQUALS_BOOLEAN pexp
    (92) nexp -> nexp . LESSEQUAL pexp
    (93) nexp -> nexp . GREATEREQUAL pexp

    AND             reduce using rule 86 (iexp -> iexp OR nexp .)
    OR              reduce using rule 86 (iexp -> iexp OR nexp .)
    COMMA           reduce using rule 86 (iexp -> iexp OR nexp .)
    CLOSEBRACKET    reduce using rule 86 (iexp -> iexp OR nexp .)
    CLOSEPARENTHESES reduce using rule 86 (iexp -> iexp OR nexp .)
    SEMICOLON       reduce using rule 86 (iexp -> iexp OR nexp .)
    TO              reduce using rule 86 (iexp -> iexp OR nexp .)
    OPENBRACE       reduce using rule 86 (iexp -> iexp OR nexp .)
    GREATER         shift and go to state 113
    LESS            shift and go to state 114
    DIFFERENT       shift and go to state 115
    EQUALS_BOOLEAN  shift and go to state 116
    LESSEQUAL       shift and go to state 117
    GREATEREQUAL    shift and go to state 118


state 142

    (88) nexp -> nexp GREATER pexp .
    (95) pexp -> pexp . PLUS termino
    (96) pexp -> pexp . MINUS termino

    GREATER         reduce using rule 88 (nexp -> nexp GREATER pexp .)
    LESS            reduce using rule 88 (nexp -> nexp GREATER pexp .)
    DIFFERENT       reduce using rule 88 (nexp -> nexp GREATER pexp .)
    EQUALS_BOOLEAN  reduce using rule 88 (nexp -> nexp GREATER pexp .)
    LESSEQUAL       reduce using rule 88 (nexp -> nexp GREATER pexp .)
    GREATEREQUAL    reduce using rule 88 (nexp -> nexp GREATER pexp .)
    AND             reduce using rule 88 (nexp -> nexp GREATER pexp .)
    OR              reduce using rule 88 (nexp -> nexp GREATER pexp .)
    COMMA           reduce using rule 88 (nexp -> nexp GREATER pexp .)
    CLOSEBRACKET    reduce using rule 88 (nexp -> nexp GREATER pexp .)
    CLOSEPARENTHESES reduce using rule 88 (nexp -> nexp GREATER pexp .)
    SEMICOLON       reduce using rule 88 (nexp -> nexp GREATER pexp .)
    TO              reduce using rule 88 (nexp -> nexp GREATER pexp .)
    OPENBRACE       reduce using rule 88 (nexp -> nexp GREATER pexp .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120


state 143

    (89) nexp -> nexp LESS pexp .
    (95) pexp -> pexp . PLUS termino
    (96) pexp -> pexp . MINUS termino

    GREATER         reduce using rule 89 (nexp -> nexp LESS pexp .)
    LESS            reduce using rule 89 (nexp -> nexp LESS pexp .)
    DIFFERENT       reduce using rule 89 (nexp -> nexp LESS pexp .)
    EQUALS_BOOLEAN  reduce using rule 89 (nexp -> nexp LESS pexp .)
    LESSEQUAL       reduce using rule 89 (nexp -> nexp LESS pexp .)
    GREATEREQUAL    reduce using rule 89 (nexp -> nexp LESS pexp .)
    AND             reduce using rule 89 (nexp -> nexp LESS pexp .)
    OR              reduce using rule 89 (nexp -> nexp LESS pexp .)
    COMMA           reduce using rule 89 (nexp -> nexp LESS pexp .)
    CLOSEBRACKET    reduce using rule 89 (nexp -> nexp LESS pexp .)
    CLOSEPARENTHESES reduce using rule 89 (nexp -> nexp LESS pexp .)
    SEMICOLON       reduce using rule 89 (nexp -> nexp LESS pexp .)
    TO              reduce using rule 89 (nexp -> nexp LESS pexp .)
    OPENBRACE       reduce using rule 89 (nexp -> nexp LESS pexp .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120


state 144

    (90) nexp -> nexp DIFFERENT pexp .
    (95) pexp -> pexp . PLUS termino
    (96) pexp -> pexp . MINUS termino

    GREATER         reduce using rule 90 (nexp -> nexp DIFFERENT pexp .)
    LESS            reduce using rule 90 (nexp -> nexp DIFFERENT pexp .)
    DIFFERENT       reduce using rule 90 (nexp -> nexp DIFFERENT pexp .)
    EQUALS_BOOLEAN  reduce using rule 90 (nexp -> nexp DIFFERENT pexp .)
    LESSEQUAL       reduce using rule 90 (nexp -> nexp DIFFERENT pexp .)
    GREATEREQUAL    reduce using rule 90 (nexp -> nexp DIFFERENT pexp .)
    AND             reduce using rule 90 (nexp -> nexp DIFFERENT pexp .)
    OR              reduce using rule 90 (nexp -> nexp DIFFERENT pexp .)
    COMMA           reduce using rule 90 (nexp -> nexp DIFFERENT pexp .)
    CLOSEBRACKET    reduce using rule 90 (nexp -> nexp DIFFERENT pexp .)
    CLOSEPARENTHESES reduce using rule 90 (nexp -> nexp DIFFERENT pexp .)
    SEMICOLON       reduce using rule 90 (nexp -> nexp DIFFERENT pexp .)
    TO              reduce using rule 90 (nexp -> nexp DIFFERENT pexp .)
    OPENBRACE       reduce using rule 90 (nexp -> nexp DIFFERENT pexp .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120


state 145

    (91) nexp -> nexp EQUALS_BOOLEAN pexp .
    (95) pexp -> pexp . PLUS termino
    (96) pexp -> pexp . MINUS termino

    GREATER         reduce using rule 91 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    LESS            reduce using rule 91 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    DIFFERENT       reduce using rule 91 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    EQUALS_BOOLEAN  reduce using rule 91 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    LESSEQUAL       reduce using rule 91 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    GREATEREQUAL    reduce using rule 91 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    AND             reduce using rule 91 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    OR              reduce using rule 91 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    COMMA           reduce using rule 91 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    CLOSEBRACKET    reduce using rule 91 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    CLOSEPARENTHESES reduce using rule 91 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    SEMICOLON       reduce using rule 91 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    TO              reduce using rule 91 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    OPENBRACE       reduce using rule 91 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120


state 146

    (92) nexp -> nexp LESSEQUAL pexp .
    (95) pexp -> pexp . PLUS termino
    (96) pexp -> pexp . MINUS termino

    GREATER         reduce using rule 92 (nexp -> nexp LESSEQUAL pexp .)
    LESS            reduce using rule 92 (nexp -> nexp LESSEQUAL pexp .)
    DIFFERENT       reduce using rule 92 (nexp -> nexp LESSEQUAL pexp .)
    EQUALS_BOOLEAN  reduce using rule 92 (nexp -> nexp LESSEQUAL pexp .)
    LESSEQUAL       reduce using rule 92 (nexp -> nexp LESSEQUAL pexp .)
    GREATEREQUAL    reduce using rule 92 (nexp -> nexp LESSEQUAL pexp .)
    AND             reduce using rule 92 (nexp -> nexp LESSEQUAL pexp .)
    OR              reduce using rule 92 (nexp -> nexp LESSEQUAL pexp .)
    COMMA           reduce using rule 92 (nexp -> nexp LESSEQUAL pexp .)
    CLOSEBRACKET    reduce using rule 92 (nexp -> nexp LESSEQUAL pexp .)
    CLOSEPARENTHESES reduce using rule 92 (nexp -> nexp LESSEQUAL pexp .)
    SEMICOLON       reduce using rule 92 (nexp -> nexp LESSEQUAL pexp .)
    TO              reduce using rule 92 (nexp -> nexp LESSEQUAL pexp .)
    OPENBRACE       reduce using rule 92 (nexp -> nexp LESSEQUAL pexp .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120


state 147

    (93) nexp -> nexp GREATEREQUAL pexp .
    (95) pexp -> pexp . PLUS termino
    (96) pexp -> pexp . MINUS termino

    GREATER         reduce using rule 93 (nexp -> nexp GREATEREQUAL pexp .)
    LESS            reduce using rule 93 (nexp -> nexp GREATEREQUAL pexp .)
    DIFFERENT       reduce using rule 93 (nexp -> nexp GREATEREQUAL pexp .)
    EQUALS_BOOLEAN  reduce using rule 93 (nexp -> nexp GREATEREQUAL pexp .)
    LESSEQUAL       reduce using rule 93 (nexp -> nexp GREATEREQUAL pexp .)
    GREATEREQUAL    reduce using rule 93 (nexp -> nexp GREATEREQUAL pexp .)
    AND             reduce using rule 93 (nexp -> nexp GREATEREQUAL pexp .)
    OR              reduce using rule 93 (nexp -> nexp GREATEREQUAL pexp .)
    COMMA           reduce using rule 93 (nexp -> nexp GREATEREQUAL pexp .)
    CLOSEBRACKET    reduce using rule 93 (nexp -> nexp GREATEREQUAL pexp .)
    CLOSEPARENTHESES reduce using rule 93 (nexp -> nexp GREATEREQUAL pexp .)
    SEMICOLON       reduce using rule 93 (nexp -> nexp GREATEREQUAL pexp .)
    TO              reduce using rule 93 (nexp -> nexp GREATEREQUAL pexp .)
    OPENBRACE       reduce using rule 93 (nexp -> nexp GREATEREQUAL pexp .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120


state 148

    (95) pexp -> pexp PLUS termino .
    (98) termino -> termino . MULTIPLY factor
    (99) termino -> termino . DIVIDE factor

    PLUS            reduce using rule 95 (pexp -> pexp PLUS termino .)
    MINUS           reduce using rule 95 (pexp -> pexp PLUS termino .)
    GREATER         reduce using rule 95 (pexp -> pexp PLUS termino .)
    LESS            reduce using rule 95 (pexp -> pexp PLUS termino .)
    DIFFERENT       reduce using rule 95 (pexp -> pexp PLUS termino .)
    EQUALS_BOOLEAN  reduce using rule 95 (pexp -> pexp PLUS termino .)
    LESSEQUAL       reduce using rule 95 (pexp -> pexp PLUS termino .)
    GREATEREQUAL    reduce using rule 95 (pexp -> pexp PLUS termino .)
    AND             reduce using rule 95 (pexp -> pexp PLUS termino .)
    OR              reduce using rule 95 (pexp -> pexp PLUS termino .)
    COMMA           reduce using rule 95 (pexp -> pexp PLUS termino .)
    CLOSEBRACKET    reduce using rule 95 (pexp -> pexp PLUS termino .)
    CLOSEPARENTHESES reduce using rule 95 (pexp -> pexp PLUS termino .)
    SEMICOLON       reduce using rule 95 (pexp -> pexp PLUS termino .)
    TO              reduce using rule 95 (pexp -> pexp PLUS termino .)
    OPENBRACE       reduce using rule 95 (pexp -> pexp PLUS termino .)
    MULTIPLY        shift and go to state 121
    DIVIDE          shift and go to state 122


state 149

    (96) pexp -> pexp MINUS termino .
    (98) termino -> termino . MULTIPLY factor
    (99) termino -> termino . DIVIDE factor

    PLUS            reduce using rule 96 (pexp -> pexp MINUS termino .)
    MINUS           reduce using rule 96 (pexp -> pexp MINUS termino .)
    GREATER         reduce using rule 96 (pexp -> pexp MINUS termino .)
    LESS            reduce using rule 96 (pexp -> pexp MINUS termino .)
    DIFFERENT       reduce using rule 96 (pexp -> pexp MINUS termino .)
    EQUALS_BOOLEAN  reduce using rule 96 (pexp -> pexp MINUS termino .)
    LESSEQUAL       reduce using rule 96 (pexp -> pexp MINUS termino .)
    GREATEREQUAL    reduce using rule 96 (pexp -> pexp MINUS termino .)
    AND             reduce using rule 96 (pexp -> pexp MINUS termino .)
    OR              reduce using rule 96 (pexp -> pexp MINUS termino .)
    COMMA           reduce using rule 96 (pexp -> pexp MINUS termino .)
    CLOSEBRACKET    reduce using rule 96 (pexp -> pexp MINUS termino .)
    CLOSEPARENTHESES reduce using rule 96 (pexp -> pexp MINUS termino .)
    SEMICOLON       reduce using rule 96 (pexp -> pexp MINUS termino .)
    TO              reduce using rule 96 (pexp -> pexp MINUS termino .)
    OPENBRACE       reduce using rule 96 (pexp -> pexp MINUS termino .)
    MULTIPLY        shift and go to state 121
    DIVIDE          shift and go to state 122


state 150

    (98) termino -> termino MULTIPLY factor .

    MULTIPLY        reduce using rule 98 (termino -> termino MULTIPLY factor .)
    DIVIDE          reduce using rule 98 (termino -> termino MULTIPLY factor .)
    PLUS            reduce using rule 98 (termino -> termino MULTIPLY factor .)
    MINUS           reduce using rule 98 (termino -> termino MULTIPLY factor .)
    GREATER         reduce using rule 98 (termino -> termino MULTIPLY factor .)
    LESS            reduce using rule 98 (termino -> termino MULTIPLY factor .)
    DIFFERENT       reduce using rule 98 (termino -> termino MULTIPLY factor .)
    EQUALS_BOOLEAN  reduce using rule 98 (termino -> termino MULTIPLY factor .)
    LESSEQUAL       reduce using rule 98 (termino -> termino MULTIPLY factor .)
    GREATEREQUAL    reduce using rule 98 (termino -> termino MULTIPLY factor .)
    AND             reduce using rule 98 (termino -> termino MULTIPLY factor .)
    OR              reduce using rule 98 (termino -> termino MULTIPLY factor .)
    COMMA           reduce using rule 98 (termino -> termino MULTIPLY factor .)
    CLOSEBRACKET    reduce using rule 98 (termino -> termino MULTIPLY factor .)
    CLOSEPARENTHESES reduce using rule 98 (termino -> termino MULTIPLY factor .)
    SEMICOLON       reduce using rule 98 (termino -> termino MULTIPLY factor .)
    TO              reduce using rule 98 (termino -> termino MULTIPLY factor .)
    OPENBRACE       reduce using rule 98 (termino -> termino MULTIPLY factor .)


state 151

    (99) termino -> termino DIVIDE factor .

    MULTIPLY        reduce using rule 99 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 99 (termino -> termino DIVIDE factor .)
    PLUS            reduce using rule 99 (termino -> termino DIVIDE factor .)
    MINUS           reduce using rule 99 (termino -> termino DIVIDE factor .)
    GREATER         reduce using rule 99 (termino -> termino DIVIDE factor .)
    LESS            reduce using rule 99 (termino -> termino DIVIDE factor .)
    DIFFERENT       reduce using rule 99 (termino -> termino DIVIDE factor .)
    EQUALS_BOOLEAN  reduce using rule 99 (termino -> termino DIVIDE factor .)
    LESSEQUAL       reduce using rule 99 (termino -> termino DIVIDE factor .)
    GREATEREQUAL    reduce using rule 99 (termino -> termino DIVIDE factor .)
    AND             reduce using rule 99 (termino -> termino DIVIDE factor .)
    OR              reduce using rule 99 (termino -> termino DIVIDE factor .)
    COMMA           reduce using rule 99 (termino -> termino DIVIDE factor .)
    CLOSEBRACKET    reduce using rule 99 (termino -> termino DIVIDE factor .)
    CLOSEPARENTHESES reduce using rule 99 (termino -> termino DIVIDE factor .)
    SEMICOLON       reduce using rule 99 (termino -> termino DIVIDE factor .)
    TO              reduce using rule 99 (termino -> termino DIVIDE factor .)
    OPENBRACE       reduce using rule 99 (termino -> termino DIVIDE factor .)


state 152

    (106) factor -> OPENPARENTHESES exp CLOSEPARENTHESES .

    MULTIPLY        reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    DIVIDE          reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    PLUS            reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    MINUS           reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    GREATER         reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    LESS            reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    DIFFERENT       reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    EQUALS_BOOLEAN  reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    LESSEQUAL       reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    GREATEREQUAL    reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    AND             reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    OR              reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    COMMA           reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    CLOSEBRACKET    reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    CLOSEPARENTHESES reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    SEMICOLON       reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    TO              reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    OPENBRACE       reduce using rule 106 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)


state 153

    (15) paramsfunction -> tipo savetipo param . COMMA paramsfunction
    (16) paramsfunction -> tipo savetipo param .

    COMMA           shift and go to state 168
    CLOSEPARENTHESES reduce using rule 16 (paramsfunction -> tipo savetipo param .)


state 154

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES . OPENBRACE estatuto CLOSEBRACE

    OPENBRACE       shift and go to state 169


state 155

    (54) asignacion -> ID EQUALS exp SEMICOLON .

    ID              reduce using rule 54 (asignacion -> ID EQUALS exp SEMICOLON .)
    RETURN          reduce using rule 54 (asignacion -> ID EQUALS exp SEMICOLON .)
    READ            reduce using rule 54 (asignacion -> ID EQUALS exp SEMICOLON .)
    WRITE           reduce using rule 54 (asignacion -> ID EQUALS exp SEMICOLON .)
    IF              reduce using rule 54 (asignacion -> ID EQUALS exp SEMICOLON .)
    WHILE           reduce using rule 54 (asignacion -> ID EQUALS exp SEMICOLON .)
    FOR             reduce using rule 54 (asignacion -> ID EQUALS exp SEMICOLON .)
    VARS            reduce using rule 54 (asignacion -> ID EQUALS exp SEMICOLON .)
    CLOSEBRACE      reduce using rule 54 (asignacion -> ID EQUALS exp SEMICOLON .)


state 156

    (55) asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET . EQUALS exp SEMICOLON

    EQUALS          shift and go to state 170


state 157

    (46) llamada -> ID gen_era OPENPARENTHESES param_call . CLOSEPARENTHESES

    CLOSEPARENTHESES shift and go to state 171


state 158

    (48) param_call -> exp . gen_param printt
    (49) param_call -> exp . gen_param COMMA param_call
    (51) gen_param -> .

    COMMA           reduce using rule 51 (gen_param -> .)
    CLOSEPARENTHESES reduce using rule 51 (gen_param -> .)

    gen_param                      shift and go to state 172

state 159

    (52) retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 173


state 160

    (53) lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 174


state 161

    (56) escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 175


state 162

    (57) escrituraP -> QUOTATIONMARK CTESTRING . QUOTATIONMARK COMMA escrituraP
    (60) escrituraP -> QUOTATIONMARK CTESTRING . QUOTATIONMARK

    QUOTATIONMARK   shift and go to state 176


state 163

    (58) escrituraP -> exp COMMA . escrituraP
    (57) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP
    (58) escrituraP -> . exp COMMA escrituraP
    (59) escrituraP -> . ID COMMA escrituraP
    (60) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK
    (61) escrituraP -> . exp
    (62) escrituraP -> . ID
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    QUOTATIONMARK   shift and go to state 133
    ID              shift and go to state 135
    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    exp                            shift and go to state 134
    escrituraP                     shift and go to state 177
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 164

    (59) escrituraP -> ID COMMA . escrituraP
    (57) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP
    (58) escrituraP -> . exp COMMA escrituraP
    (59) escrituraP -> . ID COMMA escrituraP
    (60) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK
    (61) escrituraP -> . exp
    (62) escrituraP -> . ID
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    QUOTATIONMARK   shift and go to state 133
    ID              shift and go to state 135
    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    escrituraP                     shift and go to state 178
    exp                            shift and go to state 134
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 165

    (63) condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES . OPENBRACE gen_gotof condicionp fill_goto

    OPENBRACE       shift and go to state 179


state 166

    (74) condicional -> WHILE OPENPARENTHESES migaja exp . gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (64) gen_gotof -> .

    CLOSEPARENTHESES reduce using rule 64 (gen_gotof -> .)

    gen_gotof                      shift and go to state 180

state 167

    (81) no_condicional -> FOR ID EQUALS exp . TO exp OPENBRACE estatuto CLOSEBRACE

    TO              shift and go to state 181


state 168

    (15) paramsfunction -> tipo savetipo param COMMA . paramsfunction
    (15) paramsfunction -> . tipo savetipo param COMMA paramsfunction
    (16) paramsfunction -> . tipo savetipo param
    (29) tipo -> . INT
    (30) tipo -> . FLOAT
    (31) tipo -> . CHAR
    (32) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 88
    paramsfunction                 shift and go to state 182

state 169

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE . estatuto CLOSEBRACE
    (36) estatuto -> . asignacion estatuto
    (37) estatuto -> . llamada estatuto
    (38) estatuto -> . retorno estatuto
    (39) estatuto -> . lectura estatuto
    (40) estatuto -> . escritura estatuto
    (41) estatuto -> . repeticion estatuto
    (42) estatuto -> . declaracion estatuto
    (43) estatuto -> . condicion estatuto
    (44) estatuto -> . empty
    (54) asignacion -> . ID EQUALS exp SEMICOLON
    (55) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (52) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (53) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (56) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (72) repeticion -> . condicional
    (73) repeticion -> . no_condicional
    (45) declaracion -> . vars
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (107) empty -> .
    (74) condicional -> . WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (81) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (21) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 107 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    estatuto                       shift and go to state 183
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 170

    (55) asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS . exp SEMICOLON
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    exp                            shift and go to state 184
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 171

    (46) llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .

    ID              reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    RETURN          reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    READ            reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    WRITE           reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    IF              reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    WHILE           reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    FOR             reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    VARS            reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    CLOSEBRACE      reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    MULTIPLY        reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    DIVIDE          reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    PLUS            reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    MINUS           reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    GREATER         reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    LESS            reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    DIFFERENT       reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    EQUALS_BOOLEAN  reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    LESSEQUAL       reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    GREATEREQUAL    reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    AND             reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    OR              reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    COMMA           reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    CLOSEBRACKET    reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    CLOSEPARENTHESES reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    SEMICOLON       reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    TO              reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)
    OPENBRACE       reduce using rule 46 (llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES .)


state 172

    (48) param_call -> exp gen_param . printt
    (49) param_call -> exp gen_param . COMMA param_call
    (50) printt -> .

    COMMA           shift and go to state 186
    CLOSEPARENTHESES reduce using rule 50 (printt -> .)

    printt                         shift and go to state 185

state 173

    (52) retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .

    ID              reduce using rule 52 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    RETURN          reduce using rule 52 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    READ            reduce using rule 52 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    WRITE           reduce using rule 52 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    IF              reduce using rule 52 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    WHILE           reduce using rule 52 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    FOR             reduce using rule 52 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    VARS            reduce using rule 52 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    CLOSEBRACE      reduce using rule 52 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)


state 174

    (53) lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .

    ID              reduce using rule 53 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    RETURN          reduce using rule 53 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    READ            reduce using rule 53 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    WRITE           reduce using rule 53 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    IF              reduce using rule 53 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    WHILE           reduce using rule 53 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    FOR             reduce using rule 53 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    VARS            reduce using rule 53 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    CLOSEBRACE      reduce using rule 53 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)


state 175

    (56) escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .

    ID              reduce using rule 56 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    RETURN          reduce using rule 56 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    READ            reduce using rule 56 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    WRITE           reduce using rule 56 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    IF              reduce using rule 56 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    WHILE           reduce using rule 56 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    FOR             reduce using rule 56 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    VARS            reduce using rule 56 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    CLOSEBRACE      reduce using rule 56 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)


state 176

    (57) escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK . COMMA escrituraP
    (60) escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK .

    COMMA           shift and go to state 187
    CLOSEPARENTHESES reduce using rule 60 (escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK .)


state 177

    (58) escrituraP -> exp COMMA escrituraP .

    CLOSEPARENTHESES reduce using rule 58 (escrituraP -> exp COMMA escrituraP .)


state 178

    (59) escrituraP -> ID COMMA escrituraP .

    CLOSEPARENTHESES reduce using rule 59 (escrituraP -> ID COMMA escrituraP .)


state 179

    (63) condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE . gen_gotof condicionp fill_goto
    (64) gen_gotof -> .

    ID              reduce using rule 64 (gen_gotof -> .)
    RETURN          reduce using rule 64 (gen_gotof -> .)
    READ            reduce using rule 64 (gen_gotof -> .)
    WRITE           reduce using rule 64 (gen_gotof -> .)
    IF              reduce using rule 64 (gen_gotof -> .)
    WHILE           reduce using rule 64 (gen_gotof -> .)
    FOR             reduce using rule 64 (gen_gotof -> .)
    VARS            reduce using rule 64 (gen_gotof -> .)
    CLOSEBRACE      reduce using rule 64 (gen_gotof -> .)

    gen_gotof                      shift and go to state 188

state 180

    (74) condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof . CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE

    CLOSEPARENTHESES shift and go to state 189


state 181

    (81) no_condicional -> FOR ID EQUALS exp TO . exp OPENBRACE estatuto CLOSEBRACE
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    exp                            shift and go to state 190
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 182

    (15) paramsfunction -> tipo savetipo param COMMA paramsfunction .

    CLOSEPARENTHESES reduce using rule 15 (paramsfunction -> tipo savetipo param COMMA paramsfunction .)


state 183

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto . CLOSEBRACE

    CLOSEBRACE      shift and go to state 191


state 184

    (55) asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp . SEMICOLON

    SEMICOLON       shift and go to state 192


state 185

    (48) param_call -> exp gen_param printt .

    CLOSEPARENTHESES reduce using rule 48 (param_call -> exp gen_param printt .)


state 186

    (49) param_call -> exp gen_param COMMA . param_call
    (48) param_call -> . exp gen_param printt
    (49) param_call -> . exp gen_param COMMA param_call
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    exp                            shift and go to state 158
    param_call                     shift and go to state 193
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 187

    (57) escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA . escrituraP
    (57) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP
    (58) escrituraP -> . exp COMMA escrituraP
    (59) escrituraP -> . ID COMMA escrituraP
    (60) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK
    (61) escrituraP -> . exp
    (62) escrituraP -> . ID
    (82) exp -> . iexp
    (83) exp -> . NOT iexp
    (84) iexp -> . nexp
    (85) iexp -> . iexp AND nexp
    (86) iexp -> . iexp OR nexp
    (87) nexp -> . pexp
    (88) nexp -> . nexp GREATER pexp
    (89) nexp -> . nexp LESS pexp
    (90) nexp -> . nexp DIFFERENT pexp
    (91) nexp -> . nexp EQUALS_BOOLEAN pexp
    (92) nexp -> . nexp LESSEQUAL pexp
    (93) nexp -> . nexp GREATEREQUAL pexp
    (94) pexp -> . termino
    (95) pexp -> . pexp PLUS termino
    (96) pexp -> . pexp MINUS termino
    (97) termino -> . factor
    (98) termino -> . termino MULTIPLY factor
    (99) termino -> . termino DIVIDE factor
    (100) factor -> . CTEB
    (101) factor -> . llamada printt
    (102) factor -> . ID
    (103) factor -> . CTEF
    (104) factor -> . CTEI
    (105) factor -> . CTEC
    (106) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES

    QUOTATIONMARK   shift and go to state 133
    ID              shift and go to state 135
    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    CTEC            shift and go to state 86
    OPENPARENTHESES shift and go to state 87

    escrituraP                     shift and go to state 194
    exp                            shift and go to state 134
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    llamada                        shift and go to state 83

state 188

    (63) condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof . condicionp fill_goto
    (69) condicionp -> . estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE
    (70) condicionp -> . estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE condicion
    (71) condicionp -> . estatuto fill_gotof_if gen_goto CLOSEBRACE
    (36) estatuto -> . asignacion estatuto
    (37) estatuto -> . llamada estatuto
    (38) estatuto -> . retorno estatuto
    (39) estatuto -> . lectura estatuto
    (40) estatuto -> . escritura estatuto
    (41) estatuto -> . repeticion estatuto
    (42) estatuto -> . declaracion estatuto
    (43) estatuto -> . condicion estatuto
    (44) estatuto -> . empty
    (54) asignacion -> . ID EQUALS exp SEMICOLON
    (55) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (52) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (53) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (56) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (72) repeticion -> . condicional
    (73) repeticion -> . no_condicional
    (45) declaracion -> . vars
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (107) empty -> .
    (74) condicional -> . WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (81) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (21) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 107 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    condicionp                     shift and go to state 195
    estatuto                       shift and go to state 196
    condicion                      shift and go to state 60
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 189

    (74) condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES . OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE

    OPENBRACE       shift and go to state 197


state 190

    (81) no_condicional -> FOR ID EQUALS exp TO exp . OPENBRACE estatuto CLOSEBRACE

    OPENBRACE       shift and go to state 198


state 191

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE .

    VARS            reduce using rule 13 (funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE .)
    CLASS           reduce using rule 13 (funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE .)
    FUNCTION        reduce using rule 13 (funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE .)
    MAIN            reduce using rule 13 (funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE .)
    $end            reduce using rule 13 (funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 13 (funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE .)


state 192

    (55) asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .

    ID              reduce using rule 55 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    RETURN          reduce using rule 55 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    READ            reduce using rule 55 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    WRITE           reduce using rule 55 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    IF              reduce using rule 55 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    WHILE           reduce using rule 55 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    FOR             reduce using rule 55 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    VARS            reduce using rule 55 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    CLOSEBRACE      reduce using rule 55 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)


state 193

    (49) param_call -> exp gen_param COMMA param_call .

    CLOSEPARENTHESES reduce using rule 49 (param_call -> exp gen_param COMMA param_call .)


state 194

    (57) escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP .

    CLOSEPARENTHESES reduce using rule 57 (escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP .)


state 195

    (63) condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp . fill_goto
    (67) fill_goto -> .

    ID              reduce using rule 67 (fill_goto -> .)
    RETURN          reduce using rule 67 (fill_goto -> .)
    READ            reduce using rule 67 (fill_goto -> .)
    WRITE           reduce using rule 67 (fill_goto -> .)
    IF              reduce using rule 67 (fill_goto -> .)
    WHILE           reduce using rule 67 (fill_goto -> .)
    FOR             reduce using rule 67 (fill_goto -> .)
    VARS            reduce using rule 67 (fill_goto -> .)
    CLOSEBRACE      reduce using rule 67 (fill_goto -> .)

    fill_goto                      shift and go to state 199

state 196

    (69) condicionp -> estatuto . fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE
    (70) condicionp -> estatuto . fill_gotof_if gen_goto CLOSEBRACE ELSE condicion
    (71) condicionp -> estatuto . fill_gotof_if gen_goto CLOSEBRACE
    (68) fill_gotof_if -> .

    CLOSEBRACE      reduce using rule 68 (fill_gotof_if -> .)

    fill_gotof_if                  shift and go to state 200

state 197

    (74) condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE . estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (36) estatuto -> . asignacion estatuto
    (37) estatuto -> . llamada estatuto
    (38) estatuto -> . retorno estatuto
    (39) estatuto -> . lectura estatuto
    (40) estatuto -> . escritura estatuto
    (41) estatuto -> . repeticion estatuto
    (42) estatuto -> . declaracion estatuto
    (43) estatuto -> . condicion estatuto
    (44) estatuto -> . empty
    (54) asignacion -> . ID EQUALS exp SEMICOLON
    (55) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (52) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (53) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (56) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (72) repeticion -> . condicional
    (73) repeticion -> . no_condicional
    (45) declaracion -> . vars
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (107) empty -> .
    (74) condicional -> . WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (81) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (21) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 107 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    estatuto                       shift and go to state 201
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 198

    (81) no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE . estatuto CLOSEBRACE
    (36) estatuto -> . asignacion estatuto
    (37) estatuto -> . llamada estatuto
    (38) estatuto -> . retorno estatuto
    (39) estatuto -> . lectura estatuto
    (40) estatuto -> . escritura estatuto
    (41) estatuto -> . repeticion estatuto
    (42) estatuto -> . declaracion estatuto
    (43) estatuto -> . condicion estatuto
    (44) estatuto -> . empty
    (54) asignacion -> . ID EQUALS exp SEMICOLON
    (55) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (52) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (53) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (56) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (72) repeticion -> . condicional
    (73) repeticion -> . no_condicional
    (45) declaracion -> . vars
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (107) empty -> .
    (74) condicional -> . WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (81) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (21) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 107 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    estatuto                       shift and go to state 202
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 199

    (63) condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .

    ID              reduce using rule 63 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    RETURN          reduce using rule 63 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    READ            reduce using rule 63 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    WRITE           reduce using rule 63 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    IF              reduce using rule 63 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    WHILE           reduce using rule 63 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    FOR             reduce using rule 63 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    VARS            reduce using rule 63 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    CLOSEBRACE      reduce using rule 63 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)


state 200

    (69) condicionp -> estatuto fill_gotof_if . gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE
    (70) condicionp -> estatuto fill_gotof_if . gen_goto CLOSEBRACE ELSE condicion
    (71) condicionp -> estatuto fill_gotof_if . gen_goto CLOSEBRACE
    (66) gen_goto -> .

    CLOSEBRACE      reduce using rule 66 (gen_goto -> .)

    gen_goto                       shift and go to state 203

state 201

    (74) condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto . fill_gotof_while gen_goto_migaja CLOSEBRACE
    (80) fill_gotof_while -> .

    CLOSEBRACE      reduce using rule 80 (fill_gotof_while -> .)

    fill_gotof_while               shift and go to state 204

state 202

    (81) no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto . CLOSEBRACE

    CLOSEBRACE      shift and go to state 205


state 203

    (69) condicionp -> estatuto fill_gotof_if gen_goto . CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE
    (70) condicionp -> estatuto fill_gotof_if gen_goto . CLOSEBRACE ELSE condicion
    (71) condicionp -> estatuto fill_gotof_if gen_goto . CLOSEBRACE

    CLOSEBRACE      shift and go to state 206


state 204

    (74) condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while . gen_goto_migaja CLOSEBRACE
    (76) gen_goto_migaja -> .

    CLOSEBRACE      reduce using rule 76 (gen_goto_migaja -> .)

    gen_goto_migaja                shift and go to state 207

state 205

    (81) no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .

    ID              reduce using rule 81 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    RETURN          reduce using rule 81 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    READ            reduce using rule 81 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    WRITE           reduce using rule 81 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    IF              reduce using rule 81 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    WHILE           reduce using rule 81 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    FOR             reduce using rule 81 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    VARS            reduce using rule 81 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 81 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)


state 206

    (69) condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE . ELSE OPENBRACE estatuto CLOSEBRACE
    (70) condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE . ELSE condicion
    (71) condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE .

    ELSE            shift and go to state 208
    ID              reduce using rule 71 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE .)
    RETURN          reduce using rule 71 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE .)
    READ            reduce using rule 71 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE .)
    WRITE           reduce using rule 71 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE .)
    IF              reduce using rule 71 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE .)
    WHILE           reduce using rule 71 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE .)
    FOR             reduce using rule 71 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE .)
    VARS            reduce using rule 71 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 71 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE .)


state 207

    (74) condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja . CLOSEBRACE

    CLOSEBRACE      shift and go to state 209


state 208

    (69) condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE . OPENBRACE estatuto CLOSEBRACE
    (70) condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE . condicion
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto

    OPENBRACE       shift and go to state 210
    IF              shift and go to state 69

    condicion                      shift and go to state 211

state 209

    (74) condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE .

    ID              reduce using rule 74 (condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE .)
    RETURN          reduce using rule 74 (condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE .)
    READ            reduce using rule 74 (condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE .)
    WRITE           reduce using rule 74 (condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE .)
    IF              reduce using rule 74 (condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE .)
    WHILE           reduce using rule 74 (condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE .)
    FOR             reduce using rule 74 (condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE .)
    VARS            reduce using rule 74 (condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 74 (condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE .)


state 210

    (69) condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE . estatuto CLOSEBRACE
    (36) estatuto -> . asignacion estatuto
    (37) estatuto -> . llamada estatuto
    (38) estatuto -> . retorno estatuto
    (39) estatuto -> . lectura estatuto
    (40) estatuto -> . escritura estatuto
    (41) estatuto -> . repeticion estatuto
    (42) estatuto -> . declaracion estatuto
    (43) estatuto -> . condicion estatuto
    (44) estatuto -> . empty
    (54) asignacion -> . ID EQUALS exp SEMICOLON
    (55) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (46) llamada -> . ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES
    (52) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (53) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (56) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (72) repeticion -> . condicional
    (73) repeticion -> . no_condicional
    (45) declaracion -> . vars
    (63) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (107) empty -> .
    (74) condicional -> . WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE
    (81) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (21) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 107 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    estatuto                       shift and go to state 212
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 211

    (70) condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE condicion .

    ID              reduce using rule 70 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE condicion .)
    RETURN          reduce using rule 70 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE condicion .)
    READ            reduce using rule 70 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE condicion .)
    WRITE           reduce using rule 70 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE condicion .)
    IF              reduce using rule 70 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE condicion .)
    WHILE           reduce using rule 70 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE condicion .)
    FOR             reduce using rule 70 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE condicion .)
    VARS            reduce using rule 70 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE condicion .)
    CLOSEBRACE      reduce using rule 70 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE condicion .)


state 212

    (69) condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto . CLOSEBRACE

    CLOSEBRACE      shift and go to state 213


state 213

    (69) condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .

    ID              reduce using rule 69 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    RETURN          reduce using rule 69 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    READ            reduce using rule 69 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    WRITE           reduce using rule 69 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    IF              reduce using rule 69 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    WHILE           reduce using rule 69 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    FOR             reduce using rule 69 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    VARS            reduce using rule 69 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 69 (condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLOSEBRACE in state 38 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 135 resolved as shift
WARNING: reduce/reduce conflict in state 135 resolved using rule (escrituraP -> ID)
WARNING: rejected rule (factor -> ID) in state 135
