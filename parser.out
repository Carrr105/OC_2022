Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOT
    PRINT
    THEN

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON establishglobalscope programaP
Rule 2     establishglobalscope -> <empty>
Rule 3     programaP -> vars programaP
Rule 4     programaP -> clase programaP
Rule 5     programaP -> funcion programaP
Rule 6     programaP -> bloque
Rule 7     programaP -> empty
Rule 8     clase -> CLASS ID OPENBRACE claseP CLOSEBRACE
Rule 9     claseP -> vars clasePP
Rule 10    claseP -> clasePP
Rule 11    clasePP -> funcion clasePP
Rule 12    clasePP -> empty
Rule 13    funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
Rule 14    savefuncscope -> <empty>
Rule 15    paramsfunction -> tipo param COMMA paramsfunction
Rule 16    paramsfunction -> tipo param
Rule 17    return -> RETURN exp
Rule 18    return -> RETURN
Rule 19    vars -> VARS tipo savetype TWODOTS varsP
Rule 20    varsP -> param COMMA varsP
Rule 21    varsP -> param SEMICOLON
Rule 22    savetype -> <empty>
Rule 23    param -> ID
Rule 24    param -> ID OPENBRACKET paramsP CLOSEBRACKET
Rule 25    paramsP -> exp COMMA paramsP
Rule 26    paramsP -> exp
Rule 27    tipo -> INT
Rule 28    tipo -> FLOAT
Rule 29    tipo -> CHAR
Rule 30    tipo -> BOOL
Rule 31    bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE
Rule 32    bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE
Rule 33    establishmainscope -> <empty>
Rule 34    estatuto -> asignacion estatuto
Rule 35    estatuto -> llamada estatuto
Rule 36    estatuto -> retorno estatuto
Rule 37    estatuto -> lectura estatuto
Rule 38    estatuto -> escritura estatuto
Rule 39    estatuto -> repeticion estatuto
Rule 40    estatuto -> declaracion estatuto
Rule 41    estatuto -> condicion estatuto
Rule 42    estatuto -> empty
Rule 43    declaracion -> vars
Rule 44    llamada -> ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
Rule 45    llamada -> ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
Rule 46    retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
Rule 47    lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
Rule 48    asignacion -> ID EQUALS exp SEMICOLON
Rule 49    asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
Rule 50    escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
Rule 51    escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP
Rule 52    escrituraP -> exp COMMA escrituraP
Rule 53    escrituraP -> ID COMMA escrituraP
Rule 54    escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK
Rule 55    escrituraP -> exp
Rule 56    escrituraP -> ID
Rule 57    condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
Rule 58    gen_gotof -> <empty>
Rule 59    fill_gotof -> <empty>
Rule 60    gen_goto -> <empty>
Rule 61    fill_goto -> <empty>
Rule 62    condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE
Rule 63    condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE condicion
Rule 64    condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE
Rule 65    repeticion -> condicional
Rule 66    repeticion -> no_condicional
Rule 67    condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
Rule 68    condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
Rule 69    no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
Rule 70    no_condicional -> FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
Rule 71    exp -> iexp
Rule 72    exp -> NOT iexp
Rule 73    iexp -> nexp
Rule 74    iexp -> iexp AND nexp
Rule 75    iexp -> iexp OR nexp
Rule 76    nexp -> pexp
Rule 77    nexp -> nexp GREATER pexp
Rule 78    nexp -> nexp LESS pexp
Rule 79    nexp -> nexp DIFFERENT pexp
Rule 80    nexp -> nexp EQUALS_BOOLEAN pexp
Rule 81    nexp -> nexp LESSEQUAL pexp
Rule 82    nexp -> nexp GREATEREQUAL pexp
Rule 83    pexp -> termino
Rule 84    pexp -> pexp PLUS termino
Rule 85    pexp -> pexp MINUS termino
Rule 86    termino -> factor
Rule 87    termino -> termino MULTIPLY factor
Rule 88    termino -> termino DIVIDE factor
Rule 89    factor -> CTEB
Rule 90    factor -> ID
Rule 91    factor -> CTEF
Rule 92    factor -> CTEI
Rule 93    factor -> CTEC
Rule 94    factor -> OPENPARENTHESES exp CLOSEPARENTHESES
Rule 95    empty -> <empty>

Terminals, with rules where they appear

AND                  : 74
BOOL                 : 30
CHAR                 : 29
CLASS                : 8
CLOSEBRACE           : 8 13 31 32 62 62 63 64 67 68 69 70
CLOSEBRACKET         : 24 49
CLOSEPARENTHESES     : 13 31 32 44 45 46 47 50 57 67 68 94
COMMA                : 15 20 25 51 52 53
CTEB                 : 89
CTEC                 : 93
CTEF                 : 91
CTEI                 : 92
CTESTRING            : 51 54
DIFFERENT            : 79
DIVIDE               : 88
DO                   : 67 68 70
DOT                  : 
ELSE                 : 62 63
EQUALS               : 48 49 69 70
EQUALS_BOOLEAN       : 80
FLOAT                : 28
FOR                  : 69 70
FUNCTION             : 13
GREATER              : 77
GREATEREQUAL         : 82
ID                   : 1 8 13 23 24 44 45 48 49 53 56 69 70 90
IF                   : 57
INT                  : 27
LESS                 : 78
LESSEQUAL            : 81
MAIN                 : 31 32
MINUS                : 85
MULTIPLY             : 87
NOT                  : 72
OPENBRACE            : 8 13 31 32 57 62 67 68 69 70
OPENBRACKET          : 24 49
OPENPARENTHESES      : 13 31 32 44 45 46 47 50 57 67 68 94
OR                   : 75
PLUS                 : 84
PRINT                : 
PROGRAM              : 1
QUOTATIONMARK        : 51 51 54 54
READ                 : 47
RETURN               : 17 18 46
SEMICOLON            : 1 21 44 45 46 47 48 49 50
THEN                 : 
TO                   : 69 70
TWODOTS              : 13 19
VARS                 : 19
WHILE                : 67 68
WRITE                : 50
error                : 

Nonterminals, with rules where they appear

asignacion           : 34
bloque               : 6
clase                : 4
claseP               : 8
clasePP              : 9 10 11
condicion            : 41 63
condicional          : 65
condicionp           : 57
declaracion          : 40
empty                : 7 12 42
escritura            : 38
escrituraP           : 50 51 52 53
establishglobalscope : 1
establishmainscope   : 31
estatuto             : 13 31 34 35 36 37 38 39 40 41 62 62 63 64 67 69
exp                  : 17 25 26 46 48 49 52 55 57 67 68 69 69 70 70 94
factor               : 86 87 88
fill_goto            : 57
fill_gotof           : 62 63 64
funcion              : 5 11
gen_goto             : 62 63 64
gen_gotof            : 57
iexp                 : 71 72 74 75
lectura              : 37
llamada              : 35
nexp                 : 73 74 75 77 78 79 80 81 82
no_condicional       : 66
param                : 15 16 20 21 44 47
paramsP              : 24 25 49
paramsfunction       : 13 15
pexp                 : 76 77 78 79 80 81 82 84 85
programa             : 0
programaP            : 1 3 4 5
repeticion           : 39
retorno              : 36
return               : 
savefuncscope        : 13
savetype             : 19
termino              : 83 84 85 87 88
tipo                 : 13 15 16 19
vars                 : 3 9 43
varsP                : 19 20

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON establishglobalscope programaP

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON establishglobalscope programaP

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON establishglobalscope programaP

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . establishglobalscope programaP
    (2) establishglobalscope -> .

    VARS            reduce using rule 2 (establishglobalscope -> .)
    CLASS           reduce using rule 2 (establishglobalscope -> .)
    FUNCTION        reduce using rule 2 (establishglobalscope -> .)
    MAIN            reduce using rule 2 (establishglobalscope -> .)
    $end            reduce using rule 2 (establishglobalscope -> .)

    establishglobalscope           shift and go to state 5

state 5

    (1) programa -> PROGRAM ID SEMICOLON establishglobalscope . programaP
    (3) programaP -> . vars programaP
    (4) programaP -> . clase programaP
    (5) programaP -> . funcion programaP
    (6) programaP -> . bloque
    (7) programaP -> . empty
    (19) vars -> . VARS tipo savetype TWODOTS varsP
    (8) clase -> . CLASS ID OPENBRACE claseP CLOSEBRACE
    (13) funcion -> . FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (31) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE
    (32) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE
    (95) empty -> .

    VARS            shift and go to state 12
    CLASS           shift and go to state 13
    FUNCTION        shift and go to state 14
    MAIN            shift and go to state 15
    $end            reduce using rule 95 (empty -> .)

    programaP                      shift and go to state 6
    vars                           shift and go to state 7
    clase                          shift and go to state 8
    funcion                        shift and go to state 9
    bloque                         shift and go to state 10
    empty                          shift and go to state 11

state 6

    (1) programa -> PROGRAM ID SEMICOLON establishglobalscope programaP .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON establishglobalscope programaP .)


state 7

    (3) programaP -> vars . programaP
    (3) programaP -> . vars programaP
    (4) programaP -> . clase programaP
    (5) programaP -> . funcion programaP
    (6) programaP -> . bloque
    (7) programaP -> . empty
    (19) vars -> . VARS tipo savetype TWODOTS varsP
    (8) clase -> . CLASS ID OPENBRACE claseP CLOSEBRACE
    (13) funcion -> . FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (31) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE
    (32) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE
    (95) empty -> .

    VARS            shift and go to state 12
    CLASS           shift and go to state 13
    FUNCTION        shift and go to state 14
    MAIN            shift and go to state 15
    $end            reduce using rule 95 (empty -> .)

    vars                           shift and go to state 7
    programaP                      shift and go to state 16
    clase                          shift and go to state 8
    funcion                        shift and go to state 9
    bloque                         shift and go to state 10
    empty                          shift and go to state 11

state 8

    (4) programaP -> clase . programaP
    (3) programaP -> . vars programaP
    (4) programaP -> . clase programaP
    (5) programaP -> . funcion programaP
    (6) programaP -> . bloque
    (7) programaP -> . empty
    (19) vars -> . VARS tipo savetype TWODOTS varsP
    (8) clase -> . CLASS ID OPENBRACE claseP CLOSEBRACE
    (13) funcion -> . FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (31) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE
    (32) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE
    (95) empty -> .

    VARS            shift and go to state 12
    CLASS           shift and go to state 13
    FUNCTION        shift and go to state 14
    MAIN            shift and go to state 15
    $end            reduce using rule 95 (empty -> .)

    clase                          shift and go to state 8
    programaP                      shift and go to state 17
    vars                           shift and go to state 7
    funcion                        shift and go to state 9
    bloque                         shift and go to state 10
    empty                          shift and go to state 11

state 9

    (5) programaP -> funcion . programaP
    (3) programaP -> . vars programaP
    (4) programaP -> . clase programaP
    (5) programaP -> . funcion programaP
    (6) programaP -> . bloque
    (7) programaP -> . empty
    (19) vars -> . VARS tipo savetype TWODOTS varsP
    (8) clase -> . CLASS ID OPENBRACE claseP CLOSEBRACE
    (13) funcion -> . FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (31) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE
    (32) bloque -> . MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE
    (95) empty -> .

    VARS            shift and go to state 12
    CLASS           shift and go to state 13
    FUNCTION        shift and go to state 14
    MAIN            shift and go to state 15
    $end            reduce using rule 95 (empty -> .)

    funcion                        shift and go to state 9
    programaP                      shift and go to state 18
    vars                           shift and go to state 7
    clase                          shift and go to state 8
    bloque                         shift and go to state 10
    empty                          shift and go to state 11

state 10

    (6) programaP -> bloque .

    $end            reduce using rule 6 (programaP -> bloque .)


state 11

    (7) programaP -> empty .

    $end            reduce using rule 7 (programaP -> empty .)


state 12

    (19) vars -> VARS . tipo savetype TWODOTS varsP
    (27) tipo -> . INT
    (28) tipo -> . FLOAT
    (29) tipo -> . CHAR
    (30) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 19

state 13

    (8) clase -> CLASS . ID OPENBRACE claseP CLOSEBRACE

    ID              shift and go to state 24


state 14

    (13) funcion -> FUNCTION . tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (27) tipo -> . INT
    (28) tipo -> . FLOAT
    (29) tipo -> . CHAR
    (30) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 25

state 15

    (31) bloque -> MAIN . OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE
    (32) bloque -> MAIN . OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE

    OPENPARENTHESES shift and go to state 26


state 16

    (3) programaP -> vars programaP .

    $end            reduce using rule 3 (programaP -> vars programaP .)


state 17

    (4) programaP -> clase programaP .

    $end            reduce using rule 4 (programaP -> clase programaP .)


state 18

    (5) programaP -> funcion programaP .

    $end            reduce using rule 5 (programaP -> funcion programaP .)


state 19

    (19) vars -> VARS tipo . savetype TWODOTS varsP
    (22) savetype -> .

    TWODOTS         reduce using rule 22 (savetype -> .)

    savetype                       shift and go to state 27

state 20

    (27) tipo -> INT .

    TWODOTS         reduce using rule 27 (tipo -> INT .)
    ID              reduce using rule 27 (tipo -> INT .)


state 21

    (28) tipo -> FLOAT .

    TWODOTS         reduce using rule 28 (tipo -> FLOAT .)
    ID              reduce using rule 28 (tipo -> FLOAT .)


state 22

    (29) tipo -> CHAR .

    TWODOTS         reduce using rule 29 (tipo -> CHAR .)
    ID              reduce using rule 29 (tipo -> CHAR .)


state 23

    (30) tipo -> BOOL .

    TWODOTS         reduce using rule 30 (tipo -> BOOL .)
    ID              reduce using rule 30 (tipo -> BOOL .)


state 24

    (8) clase -> CLASS ID . OPENBRACE claseP CLOSEBRACE

    OPENBRACE       shift and go to state 28


state 25

    (13) funcion -> FUNCTION tipo . TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE

    TWODOTS         shift and go to state 29


state 26

    (31) bloque -> MAIN OPENPARENTHESES . CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE
    (32) bloque -> MAIN OPENPARENTHESES . CLOSEPARENTHESES OPENBRACE CLOSEBRACE

    CLOSEPARENTHESES shift and go to state 30


state 27

    (19) vars -> VARS tipo savetype . TWODOTS varsP

    TWODOTS         shift and go to state 31


state 28

    (8) clase -> CLASS ID OPENBRACE . claseP CLOSEBRACE
    (9) claseP -> . vars clasePP
    (10) claseP -> . clasePP
    (19) vars -> . VARS tipo savetype TWODOTS varsP
    (11) clasePP -> . funcion clasePP
    (12) clasePP -> . empty
    (13) funcion -> . FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (95) empty -> .

    VARS            shift and go to state 12
    FUNCTION        shift and go to state 14
    CLOSEBRACE      reduce using rule 95 (empty -> .)

    claseP                         shift and go to state 32
    vars                           shift and go to state 33
    clasePP                        shift and go to state 34
    funcion                        shift and go to state 35
    empty                          shift and go to state 36

state 29

    (13) funcion -> FUNCTION tipo TWODOTS . ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE

    ID              shift and go to state 37


state 30

    (31) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES . OPENBRACE establishmainscope estatuto CLOSEBRACE
    (32) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES . OPENBRACE CLOSEBRACE

    OPENBRACE       shift and go to state 38


state 31

    (19) vars -> VARS tipo savetype TWODOTS . varsP
    (20) varsP -> . param COMMA varsP
    (21) varsP -> . param SEMICOLON
    (23) param -> . ID
    (24) param -> . ID OPENBRACKET paramsP CLOSEBRACKET

    ID              shift and go to state 41

    varsP                          shift and go to state 39
    param                          shift and go to state 40

state 32

    (8) clase -> CLASS ID OPENBRACE claseP . CLOSEBRACE

    CLOSEBRACE      shift and go to state 42


state 33

    (9) claseP -> vars . clasePP
    (11) clasePP -> . funcion clasePP
    (12) clasePP -> . empty
    (13) funcion -> . FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (95) empty -> .

    FUNCTION        shift and go to state 14
    CLOSEBRACE      reduce using rule 95 (empty -> .)

    clasePP                        shift and go to state 43
    funcion                        shift and go to state 35
    empty                          shift and go to state 36

state 34

    (10) claseP -> clasePP .

    CLOSEBRACE      reduce using rule 10 (claseP -> clasePP .)


state 35

    (11) clasePP -> funcion . clasePP
    (11) clasePP -> . funcion clasePP
    (12) clasePP -> . empty
    (13) funcion -> . FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (95) empty -> .

    FUNCTION        shift and go to state 14
    CLOSEBRACE      reduce using rule 95 (empty -> .)

    funcion                        shift and go to state 35
    clasePP                        shift and go to state 44
    empty                          shift and go to state 36

state 36

    (12) clasePP -> empty .

    CLOSEBRACE      reduce using rule 12 (clasePP -> empty .)


state 37

    (13) funcion -> FUNCTION tipo TWODOTS ID . savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (14) savefuncscope -> .

    OPENPARENTHESES reduce using rule 14 (savefuncscope -> .)

    savefuncscope                  shift and go to state 45

state 38

    (31) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE . establishmainscope estatuto CLOSEBRACE
    (32) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE . CLOSEBRACE
    (33) establishmainscope -> .

  ! shift/reduce conflict for CLOSEBRACE resolved as shift
    CLOSEBRACE      shift and go to state 47
    ID              reduce using rule 33 (establishmainscope -> .)
    RETURN          reduce using rule 33 (establishmainscope -> .)
    READ            reduce using rule 33 (establishmainscope -> .)
    WRITE           reduce using rule 33 (establishmainscope -> .)
    IF              reduce using rule 33 (establishmainscope -> .)
    WHILE           reduce using rule 33 (establishmainscope -> .)
    FOR             reduce using rule 33 (establishmainscope -> .)
    VARS            reduce using rule 33 (establishmainscope -> .)

  ! CLOSEBRACE      [ reduce using rule 33 (establishmainscope -> .) ]

    establishmainscope             shift and go to state 46

state 39

    (19) vars -> VARS tipo savetype TWODOTS varsP .

    VARS            reduce using rule 19 (vars -> VARS tipo savetype TWODOTS varsP .)
    CLASS           reduce using rule 19 (vars -> VARS tipo savetype TWODOTS varsP .)
    FUNCTION        reduce using rule 19 (vars -> VARS tipo savetype TWODOTS varsP .)
    MAIN            reduce using rule 19 (vars -> VARS tipo savetype TWODOTS varsP .)
    $end            reduce using rule 19 (vars -> VARS tipo savetype TWODOTS varsP .)
    CLOSEBRACE      reduce using rule 19 (vars -> VARS tipo savetype TWODOTS varsP .)
    ID              reduce using rule 19 (vars -> VARS tipo savetype TWODOTS varsP .)
    RETURN          reduce using rule 19 (vars -> VARS tipo savetype TWODOTS varsP .)
    READ            reduce using rule 19 (vars -> VARS tipo savetype TWODOTS varsP .)
    WRITE           reduce using rule 19 (vars -> VARS tipo savetype TWODOTS varsP .)
    IF              reduce using rule 19 (vars -> VARS tipo savetype TWODOTS varsP .)
    WHILE           reduce using rule 19 (vars -> VARS tipo savetype TWODOTS varsP .)
    FOR             reduce using rule 19 (vars -> VARS tipo savetype TWODOTS varsP .)


state 40

    (20) varsP -> param . COMMA varsP
    (21) varsP -> param . SEMICOLON

    COMMA           shift and go to state 48
    SEMICOLON       shift and go to state 49


state 41

    (23) param -> ID .
    (24) param -> ID . OPENBRACKET paramsP CLOSEBRACKET

    COMMA           reduce using rule 23 (param -> ID .)
    SEMICOLON       reduce using rule 23 (param -> ID .)
    CLOSEPARENTHESES reduce using rule 23 (param -> ID .)
    OPENBRACKET     shift and go to state 50


state 42

    (8) clase -> CLASS ID OPENBRACE claseP CLOSEBRACE .

    VARS            reduce using rule 8 (clase -> CLASS ID OPENBRACE claseP CLOSEBRACE .)
    CLASS           reduce using rule 8 (clase -> CLASS ID OPENBRACE claseP CLOSEBRACE .)
    FUNCTION        reduce using rule 8 (clase -> CLASS ID OPENBRACE claseP CLOSEBRACE .)
    MAIN            reduce using rule 8 (clase -> CLASS ID OPENBRACE claseP CLOSEBRACE .)
    $end            reduce using rule 8 (clase -> CLASS ID OPENBRACE claseP CLOSEBRACE .)


state 43

    (9) claseP -> vars clasePP .

    CLOSEBRACE      reduce using rule 9 (claseP -> vars clasePP .)


state 44

    (11) clasePP -> funcion clasePP .

    CLOSEBRACE      reduce using rule 11 (clasePP -> funcion clasePP .)


state 45

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope . OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE

    OPENPARENTHESES shift and go to state 51


state 46

    (31) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope . estatuto CLOSEBRACE
    (34) estatuto -> . asignacion estatuto
    (35) estatuto -> . llamada estatuto
    (36) estatuto -> . retorno estatuto
    (37) estatuto -> . lectura estatuto
    (38) estatuto -> . escritura estatuto
    (39) estatuto -> . repeticion estatuto
    (40) estatuto -> . declaracion estatuto
    (41) estatuto -> . condicion estatuto
    (42) estatuto -> . empty
    (48) asignacion -> . ID EQUALS exp SEMICOLON
    (49) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> . ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> . ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
    (46) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (47) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (50) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (65) repeticion -> . condicional
    (66) repeticion -> . no_condicional
    (43) declaracion -> . vars
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (95) empty -> .
    (67) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (69) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> . FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
    (19) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 95 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    estatuto                       shift and go to state 52
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 47

    (32) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE .

    $end            reduce using rule 32 (bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE .)


state 48

    (20) varsP -> param COMMA . varsP
    (20) varsP -> . param COMMA varsP
    (21) varsP -> . param SEMICOLON
    (23) param -> . ID
    (24) param -> . ID OPENBRACKET paramsP CLOSEBRACKET

    ID              shift and go to state 41

    param                          shift and go to state 40
    varsP                          shift and go to state 72

state 49

    (21) varsP -> param SEMICOLON .

    VARS            reduce using rule 21 (varsP -> param SEMICOLON .)
    CLASS           reduce using rule 21 (varsP -> param SEMICOLON .)
    FUNCTION        reduce using rule 21 (varsP -> param SEMICOLON .)
    MAIN            reduce using rule 21 (varsP -> param SEMICOLON .)
    $end            reduce using rule 21 (varsP -> param SEMICOLON .)
    CLOSEBRACE      reduce using rule 21 (varsP -> param SEMICOLON .)
    ID              reduce using rule 21 (varsP -> param SEMICOLON .)
    RETURN          reduce using rule 21 (varsP -> param SEMICOLON .)
    READ            reduce using rule 21 (varsP -> param SEMICOLON .)
    WRITE           reduce using rule 21 (varsP -> param SEMICOLON .)
    IF              reduce using rule 21 (varsP -> param SEMICOLON .)
    WHILE           reduce using rule 21 (varsP -> param SEMICOLON .)
    FOR             reduce using rule 21 (varsP -> param SEMICOLON .)


state 50

    (24) param -> ID OPENBRACKET . paramsP CLOSEBRACKET
    (25) paramsP -> . exp COMMA paramsP
    (26) paramsP -> . exp
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    paramsP                        shift and go to state 74
    exp                            shift and go to state 75
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 51

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES . paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE
    (15) paramsfunction -> . tipo param COMMA paramsfunction
    (16) paramsfunction -> . tipo param
    (27) tipo -> . INT
    (28) tipo -> . FLOAT
    (29) tipo -> . CHAR
    (30) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 87
    paramsfunction                 shift and go to state 88

state 52

    (31) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto . CLOSEBRACE

    CLOSEBRACE      shift and go to state 89


state 53

    (34) estatuto -> asignacion . estatuto
    (34) estatuto -> . asignacion estatuto
    (35) estatuto -> . llamada estatuto
    (36) estatuto -> . retorno estatuto
    (37) estatuto -> . lectura estatuto
    (38) estatuto -> . escritura estatuto
    (39) estatuto -> . repeticion estatuto
    (40) estatuto -> . declaracion estatuto
    (41) estatuto -> . condicion estatuto
    (42) estatuto -> . empty
    (48) asignacion -> . ID EQUALS exp SEMICOLON
    (49) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> . ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> . ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
    (46) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (47) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (50) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (65) repeticion -> . condicional
    (66) repeticion -> . no_condicional
    (43) declaracion -> . vars
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (95) empty -> .
    (67) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (69) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> . FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
    (19) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 95 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    asignacion                     shift and go to state 53
    estatuto                       shift and go to state 90
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 54

    (35) estatuto -> llamada . estatuto
    (34) estatuto -> . asignacion estatuto
    (35) estatuto -> . llamada estatuto
    (36) estatuto -> . retorno estatuto
    (37) estatuto -> . lectura estatuto
    (38) estatuto -> . escritura estatuto
    (39) estatuto -> . repeticion estatuto
    (40) estatuto -> . declaracion estatuto
    (41) estatuto -> . condicion estatuto
    (42) estatuto -> . empty
    (48) asignacion -> . ID EQUALS exp SEMICOLON
    (49) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> . ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> . ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
    (46) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (47) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (50) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (65) repeticion -> . condicional
    (66) repeticion -> . no_condicional
    (43) declaracion -> . vars
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (95) empty -> .
    (67) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (69) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> . FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
    (19) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 95 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    llamada                        shift and go to state 54
    estatuto                       shift and go to state 91
    asignacion                     shift and go to state 53
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 55

    (36) estatuto -> retorno . estatuto
    (34) estatuto -> . asignacion estatuto
    (35) estatuto -> . llamada estatuto
    (36) estatuto -> . retorno estatuto
    (37) estatuto -> . lectura estatuto
    (38) estatuto -> . escritura estatuto
    (39) estatuto -> . repeticion estatuto
    (40) estatuto -> . declaracion estatuto
    (41) estatuto -> . condicion estatuto
    (42) estatuto -> . empty
    (48) asignacion -> . ID EQUALS exp SEMICOLON
    (49) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> . ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> . ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
    (46) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (47) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (50) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (65) repeticion -> . condicional
    (66) repeticion -> . no_condicional
    (43) declaracion -> . vars
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (95) empty -> .
    (67) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (69) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> . FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
    (19) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 95 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    retorno                        shift and go to state 55
    estatuto                       shift and go to state 92
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 56

    (37) estatuto -> lectura . estatuto
    (34) estatuto -> . asignacion estatuto
    (35) estatuto -> . llamada estatuto
    (36) estatuto -> . retorno estatuto
    (37) estatuto -> . lectura estatuto
    (38) estatuto -> . escritura estatuto
    (39) estatuto -> . repeticion estatuto
    (40) estatuto -> . declaracion estatuto
    (41) estatuto -> . condicion estatuto
    (42) estatuto -> . empty
    (48) asignacion -> . ID EQUALS exp SEMICOLON
    (49) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> . ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> . ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
    (46) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (47) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (50) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (65) repeticion -> . condicional
    (66) repeticion -> . no_condicional
    (43) declaracion -> . vars
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (95) empty -> .
    (67) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (69) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> . FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
    (19) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 95 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    lectura                        shift and go to state 56
    estatuto                       shift and go to state 93
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 57

    (38) estatuto -> escritura . estatuto
    (34) estatuto -> . asignacion estatuto
    (35) estatuto -> . llamada estatuto
    (36) estatuto -> . retorno estatuto
    (37) estatuto -> . lectura estatuto
    (38) estatuto -> . escritura estatuto
    (39) estatuto -> . repeticion estatuto
    (40) estatuto -> . declaracion estatuto
    (41) estatuto -> . condicion estatuto
    (42) estatuto -> . empty
    (48) asignacion -> . ID EQUALS exp SEMICOLON
    (49) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> . ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> . ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
    (46) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (47) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (50) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (65) repeticion -> . condicional
    (66) repeticion -> . no_condicional
    (43) declaracion -> . vars
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (95) empty -> .
    (67) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (69) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> . FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
    (19) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 95 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    escritura                      shift and go to state 57
    estatuto                       shift and go to state 94
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 58

    (39) estatuto -> repeticion . estatuto
    (34) estatuto -> . asignacion estatuto
    (35) estatuto -> . llamada estatuto
    (36) estatuto -> . retorno estatuto
    (37) estatuto -> . lectura estatuto
    (38) estatuto -> . escritura estatuto
    (39) estatuto -> . repeticion estatuto
    (40) estatuto -> . declaracion estatuto
    (41) estatuto -> . condicion estatuto
    (42) estatuto -> . empty
    (48) asignacion -> . ID EQUALS exp SEMICOLON
    (49) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> . ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> . ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
    (46) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (47) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (50) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (65) repeticion -> . condicional
    (66) repeticion -> . no_condicional
    (43) declaracion -> . vars
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (95) empty -> .
    (67) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (69) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> . FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
    (19) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 95 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    repeticion                     shift and go to state 58
    estatuto                       shift and go to state 95
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 59

    (40) estatuto -> declaracion . estatuto
    (34) estatuto -> . asignacion estatuto
    (35) estatuto -> . llamada estatuto
    (36) estatuto -> . retorno estatuto
    (37) estatuto -> . lectura estatuto
    (38) estatuto -> . escritura estatuto
    (39) estatuto -> . repeticion estatuto
    (40) estatuto -> . declaracion estatuto
    (41) estatuto -> . condicion estatuto
    (42) estatuto -> . empty
    (48) asignacion -> . ID EQUALS exp SEMICOLON
    (49) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> . ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> . ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
    (46) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (47) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (50) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (65) repeticion -> . condicional
    (66) repeticion -> . no_condicional
    (43) declaracion -> . vars
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (95) empty -> .
    (67) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (69) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> . FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
    (19) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 95 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    declaracion                    shift and go to state 59
    estatuto                       shift and go to state 96
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 60

    (41) estatuto -> condicion . estatuto
    (34) estatuto -> . asignacion estatuto
    (35) estatuto -> . llamada estatuto
    (36) estatuto -> . retorno estatuto
    (37) estatuto -> . lectura estatuto
    (38) estatuto -> . escritura estatuto
    (39) estatuto -> . repeticion estatuto
    (40) estatuto -> . declaracion estatuto
    (41) estatuto -> . condicion estatuto
    (42) estatuto -> . empty
    (48) asignacion -> . ID EQUALS exp SEMICOLON
    (49) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> . ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> . ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
    (46) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (47) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (50) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (65) repeticion -> . condicional
    (66) repeticion -> . no_condicional
    (43) declaracion -> . vars
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (95) empty -> .
    (67) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (69) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> . FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
    (19) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 95 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    condicion                      shift and go to state 60
    estatuto                       shift and go to state 97
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 61

    (42) estatuto -> empty .

    CLOSEBRACE      reduce using rule 42 (estatuto -> empty .)


state 62

    (48) asignacion -> ID . EQUALS exp SEMICOLON
    (49) asignacion -> ID . OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> ID . OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> ID . OPENPARENTHESES CLOSEPARENTHESES SEMICOLON

    EQUALS          shift and go to state 98
    OPENBRACKET     shift and go to state 99
    OPENPARENTHESES shift and go to state 100


state 63

    (46) retorno -> RETURN . OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON

    OPENPARENTHESES shift and go to state 101


state 64

    (47) lectura -> READ . OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON

    OPENPARENTHESES shift and go to state 102


state 65

    (50) escritura -> WRITE . OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON

    OPENPARENTHESES shift and go to state 103


state 66

    (65) repeticion -> condicional .

    ID              reduce using rule 65 (repeticion -> condicional .)
    RETURN          reduce using rule 65 (repeticion -> condicional .)
    READ            reduce using rule 65 (repeticion -> condicional .)
    WRITE           reduce using rule 65 (repeticion -> condicional .)
    IF              reduce using rule 65 (repeticion -> condicional .)
    WHILE           reduce using rule 65 (repeticion -> condicional .)
    FOR             reduce using rule 65 (repeticion -> condicional .)
    VARS            reduce using rule 65 (repeticion -> condicional .)
    CLOSEBRACE      reduce using rule 65 (repeticion -> condicional .)


state 67

    (66) repeticion -> no_condicional .

    ID              reduce using rule 66 (repeticion -> no_condicional .)
    RETURN          reduce using rule 66 (repeticion -> no_condicional .)
    READ            reduce using rule 66 (repeticion -> no_condicional .)
    WRITE           reduce using rule 66 (repeticion -> no_condicional .)
    IF              reduce using rule 66 (repeticion -> no_condicional .)
    WHILE           reduce using rule 66 (repeticion -> no_condicional .)
    FOR             reduce using rule 66 (repeticion -> no_condicional .)
    VARS            reduce using rule 66 (repeticion -> no_condicional .)
    CLOSEBRACE      reduce using rule 66 (repeticion -> no_condicional .)


state 68

    (43) declaracion -> vars .

    ID              reduce using rule 43 (declaracion -> vars .)
    RETURN          reduce using rule 43 (declaracion -> vars .)
    READ            reduce using rule 43 (declaracion -> vars .)
    WRITE           reduce using rule 43 (declaracion -> vars .)
    IF              reduce using rule 43 (declaracion -> vars .)
    WHILE           reduce using rule 43 (declaracion -> vars .)
    FOR             reduce using rule 43 (declaracion -> vars .)
    VARS            reduce using rule 43 (declaracion -> vars .)
    CLOSEBRACE      reduce using rule 43 (declaracion -> vars .)


state 69

    (57) condicion -> IF . OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto

    OPENPARENTHESES shift and go to state 104


state 70

    (67) condicional -> WHILE . OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> WHILE . OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE

    OPENPARENTHESES shift and go to state 105


state 71

    (69) no_condicional -> FOR . ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> FOR . ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE

    ID              shift and go to state 106


state 72

    (20) varsP -> param COMMA varsP .

    VARS            reduce using rule 20 (varsP -> param COMMA varsP .)
    CLASS           reduce using rule 20 (varsP -> param COMMA varsP .)
    FUNCTION        reduce using rule 20 (varsP -> param COMMA varsP .)
    MAIN            reduce using rule 20 (varsP -> param COMMA varsP .)
    $end            reduce using rule 20 (varsP -> param COMMA varsP .)
    CLOSEBRACE      reduce using rule 20 (varsP -> param COMMA varsP .)
    ID              reduce using rule 20 (varsP -> param COMMA varsP .)
    RETURN          reduce using rule 20 (varsP -> param COMMA varsP .)
    READ            reduce using rule 20 (varsP -> param COMMA varsP .)
    WRITE           reduce using rule 20 (varsP -> param COMMA varsP .)
    IF              reduce using rule 20 (varsP -> param COMMA varsP .)
    WHILE           reduce using rule 20 (varsP -> param COMMA varsP .)
    FOR             reduce using rule 20 (varsP -> param COMMA varsP .)


state 73

    (90) factor -> ID .

    MULTIPLY        reduce using rule 90 (factor -> ID .)
    DIVIDE          reduce using rule 90 (factor -> ID .)
    PLUS            reduce using rule 90 (factor -> ID .)
    MINUS           reduce using rule 90 (factor -> ID .)
    GREATER         reduce using rule 90 (factor -> ID .)
    LESS            reduce using rule 90 (factor -> ID .)
    DIFFERENT       reduce using rule 90 (factor -> ID .)
    EQUALS_BOOLEAN  reduce using rule 90 (factor -> ID .)
    LESSEQUAL       reduce using rule 90 (factor -> ID .)
    GREATEREQUAL    reduce using rule 90 (factor -> ID .)
    AND             reduce using rule 90 (factor -> ID .)
    OR              reduce using rule 90 (factor -> ID .)
    COMMA           reduce using rule 90 (factor -> ID .)
    CLOSEBRACKET    reduce using rule 90 (factor -> ID .)
    CLOSEPARENTHESES reduce using rule 90 (factor -> ID .)
    SEMICOLON       reduce using rule 90 (factor -> ID .)
    TO              reduce using rule 90 (factor -> ID .)
    OPENBRACE       reduce using rule 90 (factor -> ID .)
    DO              reduce using rule 90 (factor -> ID .)


state 74

    (24) param -> ID OPENBRACKET paramsP . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 107


state 75

    (25) paramsP -> exp . COMMA paramsP
    (26) paramsP -> exp .

    COMMA           shift and go to state 108
    CLOSEBRACKET    reduce using rule 26 (paramsP -> exp .)


state 76

    (71) exp -> iexp .
    (74) iexp -> iexp . AND nexp
    (75) iexp -> iexp . OR nexp

    COMMA           reduce using rule 71 (exp -> iexp .)
    CLOSEBRACKET    reduce using rule 71 (exp -> iexp .)
    CLOSEPARENTHESES reduce using rule 71 (exp -> iexp .)
    SEMICOLON       reduce using rule 71 (exp -> iexp .)
    TO              reduce using rule 71 (exp -> iexp .)
    OPENBRACE       reduce using rule 71 (exp -> iexp .)
    DO              reduce using rule 71 (exp -> iexp .)
    AND             shift and go to state 109
    OR              shift and go to state 110


state 77

    (72) exp -> NOT . iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    iexp                           shift and go to state 111
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 78

    (73) iexp -> nexp .
    (77) nexp -> nexp . GREATER pexp
    (78) nexp -> nexp . LESS pexp
    (79) nexp -> nexp . DIFFERENT pexp
    (80) nexp -> nexp . EQUALS_BOOLEAN pexp
    (81) nexp -> nexp . LESSEQUAL pexp
    (82) nexp -> nexp . GREATEREQUAL pexp

    AND             reduce using rule 73 (iexp -> nexp .)
    OR              reduce using rule 73 (iexp -> nexp .)
    COMMA           reduce using rule 73 (iexp -> nexp .)
    CLOSEBRACKET    reduce using rule 73 (iexp -> nexp .)
    CLOSEPARENTHESES reduce using rule 73 (iexp -> nexp .)
    SEMICOLON       reduce using rule 73 (iexp -> nexp .)
    TO              reduce using rule 73 (iexp -> nexp .)
    OPENBRACE       reduce using rule 73 (iexp -> nexp .)
    DO              reduce using rule 73 (iexp -> nexp .)
    GREATER         shift and go to state 112
    LESS            shift and go to state 113
    DIFFERENT       shift and go to state 114
    EQUALS_BOOLEAN  shift and go to state 115
    LESSEQUAL       shift and go to state 116
    GREATEREQUAL    shift and go to state 117


state 79

    (76) nexp -> pexp .
    (84) pexp -> pexp . PLUS termino
    (85) pexp -> pexp . MINUS termino

    GREATER         reduce using rule 76 (nexp -> pexp .)
    LESS            reduce using rule 76 (nexp -> pexp .)
    DIFFERENT       reduce using rule 76 (nexp -> pexp .)
    EQUALS_BOOLEAN  reduce using rule 76 (nexp -> pexp .)
    LESSEQUAL       reduce using rule 76 (nexp -> pexp .)
    GREATEREQUAL    reduce using rule 76 (nexp -> pexp .)
    AND             reduce using rule 76 (nexp -> pexp .)
    OR              reduce using rule 76 (nexp -> pexp .)
    COMMA           reduce using rule 76 (nexp -> pexp .)
    CLOSEBRACKET    reduce using rule 76 (nexp -> pexp .)
    CLOSEPARENTHESES reduce using rule 76 (nexp -> pexp .)
    SEMICOLON       reduce using rule 76 (nexp -> pexp .)
    TO              reduce using rule 76 (nexp -> pexp .)
    OPENBRACE       reduce using rule 76 (nexp -> pexp .)
    DO              reduce using rule 76 (nexp -> pexp .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119


state 80

    (83) pexp -> termino .
    (87) termino -> termino . MULTIPLY factor
    (88) termino -> termino . DIVIDE factor

    PLUS            reduce using rule 83 (pexp -> termino .)
    MINUS           reduce using rule 83 (pexp -> termino .)
    GREATER         reduce using rule 83 (pexp -> termino .)
    LESS            reduce using rule 83 (pexp -> termino .)
    DIFFERENT       reduce using rule 83 (pexp -> termino .)
    EQUALS_BOOLEAN  reduce using rule 83 (pexp -> termino .)
    LESSEQUAL       reduce using rule 83 (pexp -> termino .)
    GREATEREQUAL    reduce using rule 83 (pexp -> termino .)
    AND             reduce using rule 83 (pexp -> termino .)
    OR              reduce using rule 83 (pexp -> termino .)
    COMMA           reduce using rule 83 (pexp -> termino .)
    CLOSEBRACKET    reduce using rule 83 (pexp -> termino .)
    CLOSEPARENTHESES reduce using rule 83 (pexp -> termino .)
    SEMICOLON       reduce using rule 83 (pexp -> termino .)
    TO              reduce using rule 83 (pexp -> termino .)
    OPENBRACE       reduce using rule 83 (pexp -> termino .)
    DO              reduce using rule 83 (pexp -> termino .)
    MULTIPLY        shift and go to state 120
    DIVIDE          shift and go to state 121


state 81

    (86) termino -> factor .

    MULTIPLY        reduce using rule 86 (termino -> factor .)
    DIVIDE          reduce using rule 86 (termino -> factor .)
    PLUS            reduce using rule 86 (termino -> factor .)
    MINUS           reduce using rule 86 (termino -> factor .)
    GREATER         reduce using rule 86 (termino -> factor .)
    LESS            reduce using rule 86 (termino -> factor .)
    DIFFERENT       reduce using rule 86 (termino -> factor .)
    EQUALS_BOOLEAN  reduce using rule 86 (termino -> factor .)
    LESSEQUAL       reduce using rule 86 (termino -> factor .)
    GREATEREQUAL    reduce using rule 86 (termino -> factor .)
    AND             reduce using rule 86 (termino -> factor .)
    OR              reduce using rule 86 (termino -> factor .)
    COMMA           reduce using rule 86 (termino -> factor .)
    CLOSEBRACKET    reduce using rule 86 (termino -> factor .)
    CLOSEPARENTHESES reduce using rule 86 (termino -> factor .)
    SEMICOLON       reduce using rule 86 (termino -> factor .)
    TO              reduce using rule 86 (termino -> factor .)
    OPENBRACE       reduce using rule 86 (termino -> factor .)
    DO              reduce using rule 86 (termino -> factor .)


state 82

    (89) factor -> CTEB .

    MULTIPLY        reduce using rule 89 (factor -> CTEB .)
    DIVIDE          reduce using rule 89 (factor -> CTEB .)
    PLUS            reduce using rule 89 (factor -> CTEB .)
    MINUS           reduce using rule 89 (factor -> CTEB .)
    GREATER         reduce using rule 89 (factor -> CTEB .)
    LESS            reduce using rule 89 (factor -> CTEB .)
    DIFFERENT       reduce using rule 89 (factor -> CTEB .)
    EQUALS_BOOLEAN  reduce using rule 89 (factor -> CTEB .)
    LESSEQUAL       reduce using rule 89 (factor -> CTEB .)
    GREATEREQUAL    reduce using rule 89 (factor -> CTEB .)
    AND             reduce using rule 89 (factor -> CTEB .)
    OR              reduce using rule 89 (factor -> CTEB .)
    COMMA           reduce using rule 89 (factor -> CTEB .)
    CLOSEBRACKET    reduce using rule 89 (factor -> CTEB .)
    CLOSEPARENTHESES reduce using rule 89 (factor -> CTEB .)
    SEMICOLON       reduce using rule 89 (factor -> CTEB .)
    TO              reduce using rule 89 (factor -> CTEB .)
    OPENBRACE       reduce using rule 89 (factor -> CTEB .)
    DO              reduce using rule 89 (factor -> CTEB .)


state 83

    (91) factor -> CTEF .

    MULTIPLY        reduce using rule 91 (factor -> CTEF .)
    DIVIDE          reduce using rule 91 (factor -> CTEF .)
    PLUS            reduce using rule 91 (factor -> CTEF .)
    MINUS           reduce using rule 91 (factor -> CTEF .)
    GREATER         reduce using rule 91 (factor -> CTEF .)
    LESS            reduce using rule 91 (factor -> CTEF .)
    DIFFERENT       reduce using rule 91 (factor -> CTEF .)
    EQUALS_BOOLEAN  reduce using rule 91 (factor -> CTEF .)
    LESSEQUAL       reduce using rule 91 (factor -> CTEF .)
    GREATEREQUAL    reduce using rule 91 (factor -> CTEF .)
    AND             reduce using rule 91 (factor -> CTEF .)
    OR              reduce using rule 91 (factor -> CTEF .)
    COMMA           reduce using rule 91 (factor -> CTEF .)
    CLOSEBRACKET    reduce using rule 91 (factor -> CTEF .)
    CLOSEPARENTHESES reduce using rule 91 (factor -> CTEF .)
    SEMICOLON       reduce using rule 91 (factor -> CTEF .)
    TO              reduce using rule 91 (factor -> CTEF .)
    OPENBRACE       reduce using rule 91 (factor -> CTEF .)
    DO              reduce using rule 91 (factor -> CTEF .)


state 84

    (92) factor -> CTEI .

    MULTIPLY        reduce using rule 92 (factor -> CTEI .)
    DIVIDE          reduce using rule 92 (factor -> CTEI .)
    PLUS            reduce using rule 92 (factor -> CTEI .)
    MINUS           reduce using rule 92 (factor -> CTEI .)
    GREATER         reduce using rule 92 (factor -> CTEI .)
    LESS            reduce using rule 92 (factor -> CTEI .)
    DIFFERENT       reduce using rule 92 (factor -> CTEI .)
    EQUALS_BOOLEAN  reduce using rule 92 (factor -> CTEI .)
    LESSEQUAL       reduce using rule 92 (factor -> CTEI .)
    GREATEREQUAL    reduce using rule 92 (factor -> CTEI .)
    AND             reduce using rule 92 (factor -> CTEI .)
    OR              reduce using rule 92 (factor -> CTEI .)
    COMMA           reduce using rule 92 (factor -> CTEI .)
    CLOSEBRACKET    reduce using rule 92 (factor -> CTEI .)
    CLOSEPARENTHESES reduce using rule 92 (factor -> CTEI .)
    SEMICOLON       reduce using rule 92 (factor -> CTEI .)
    TO              reduce using rule 92 (factor -> CTEI .)
    OPENBRACE       reduce using rule 92 (factor -> CTEI .)
    DO              reduce using rule 92 (factor -> CTEI .)


state 85

    (93) factor -> CTEC .

    MULTIPLY        reduce using rule 93 (factor -> CTEC .)
    DIVIDE          reduce using rule 93 (factor -> CTEC .)
    PLUS            reduce using rule 93 (factor -> CTEC .)
    MINUS           reduce using rule 93 (factor -> CTEC .)
    GREATER         reduce using rule 93 (factor -> CTEC .)
    LESS            reduce using rule 93 (factor -> CTEC .)
    DIFFERENT       reduce using rule 93 (factor -> CTEC .)
    EQUALS_BOOLEAN  reduce using rule 93 (factor -> CTEC .)
    LESSEQUAL       reduce using rule 93 (factor -> CTEC .)
    GREATEREQUAL    reduce using rule 93 (factor -> CTEC .)
    AND             reduce using rule 93 (factor -> CTEC .)
    OR              reduce using rule 93 (factor -> CTEC .)
    COMMA           reduce using rule 93 (factor -> CTEC .)
    CLOSEBRACKET    reduce using rule 93 (factor -> CTEC .)
    CLOSEPARENTHESES reduce using rule 93 (factor -> CTEC .)
    SEMICOLON       reduce using rule 93 (factor -> CTEC .)
    TO              reduce using rule 93 (factor -> CTEC .)
    OPENBRACE       reduce using rule 93 (factor -> CTEC .)
    DO              reduce using rule 93 (factor -> CTEC .)


state 86

    (94) factor -> OPENPARENTHESES . exp CLOSEPARENTHESES
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    exp                            shift and go to state 122
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 87

    (15) paramsfunction -> tipo . param COMMA paramsfunction
    (16) paramsfunction -> tipo . param
    (23) param -> . ID
    (24) param -> . ID OPENBRACKET paramsP CLOSEBRACKET

    ID              shift and go to state 41

    param                          shift and go to state 123

state 88

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction . CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE

    CLOSEPARENTHESES shift and go to state 124


state 89

    (31) bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE .

    $end            reduce using rule 31 (bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE .)


state 90

    (34) estatuto -> asignacion estatuto .

    CLOSEBRACE      reduce using rule 34 (estatuto -> asignacion estatuto .)


state 91

    (35) estatuto -> llamada estatuto .

    CLOSEBRACE      reduce using rule 35 (estatuto -> llamada estatuto .)


state 92

    (36) estatuto -> retorno estatuto .

    CLOSEBRACE      reduce using rule 36 (estatuto -> retorno estatuto .)


state 93

    (37) estatuto -> lectura estatuto .

    CLOSEBRACE      reduce using rule 37 (estatuto -> lectura estatuto .)


state 94

    (38) estatuto -> escritura estatuto .

    CLOSEBRACE      reduce using rule 38 (estatuto -> escritura estatuto .)


state 95

    (39) estatuto -> repeticion estatuto .

    CLOSEBRACE      reduce using rule 39 (estatuto -> repeticion estatuto .)


state 96

    (40) estatuto -> declaracion estatuto .

    CLOSEBRACE      reduce using rule 40 (estatuto -> declaracion estatuto .)


state 97

    (41) estatuto -> condicion estatuto .

    CLOSEBRACE      reduce using rule 41 (estatuto -> condicion estatuto .)


state 98

    (48) asignacion -> ID EQUALS . exp SEMICOLON
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    exp                            shift and go to state 125
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 99

    (49) asignacion -> ID OPENBRACKET . paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (25) paramsP -> . exp COMMA paramsP
    (26) paramsP -> . exp
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    paramsP                        shift and go to state 126
    exp                            shift and go to state 75
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 100

    (44) llamada -> ID OPENPARENTHESES . param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> ID OPENPARENTHESES . CLOSEPARENTHESES SEMICOLON
    (23) param -> . ID
    (24) param -> . ID OPENBRACKET paramsP CLOSEBRACKET

    CLOSEPARENTHESES shift and go to state 128
    ID              shift and go to state 41

    param                          shift and go to state 127

state 101

    (46) retorno -> RETURN OPENPARENTHESES . exp CLOSEPARENTHESES SEMICOLON
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    exp                            shift and go to state 129
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 102

    (47) lectura -> READ OPENPARENTHESES . param CLOSEPARENTHESES SEMICOLON
    (23) param -> . ID
    (24) param -> . ID OPENBRACKET paramsP CLOSEBRACKET

    ID              shift and go to state 41

    param                          shift and go to state 130

state 103

    (50) escritura -> WRITE OPENPARENTHESES . escrituraP CLOSEPARENTHESES SEMICOLON
    (51) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP
    (52) escrituraP -> . exp COMMA escrituraP
    (53) escrituraP -> . ID COMMA escrituraP
    (54) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK
    (55) escrituraP -> . exp
    (56) escrituraP -> . ID
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    QUOTATIONMARK   shift and go to state 132
    ID              shift and go to state 134
    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    escrituraP                     shift and go to state 131
    exp                            shift and go to state 133
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 104

    (57) condicion -> IF OPENPARENTHESES . exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    exp                            shift and go to state 135
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 105

    (67) condicional -> WHILE OPENPARENTHESES . exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> WHILE OPENPARENTHESES . exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    exp                            shift and go to state 136
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 106

    (69) no_condicional -> FOR ID . EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> FOR ID . EQUALS exp TO exp DO OPENBRACE CLOSEBRACE

    EQUALS          shift and go to state 137


state 107

    (24) param -> ID OPENBRACKET paramsP CLOSEBRACKET .

    COMMA           reduce using rule 24 (param -> ID OPENBRACKET paramsP CLOSEBRACKET .)
    SEMICOLON       reduce using rule 24 (param -> ID OPENBRACKET paramsP CLOSEBRACKET .)
    CLOSEPARENTHESES reduce using rule 24 (param -> ID OPENBRACKET paramsP CLOSEBRACKET .)


state 108

    (25) paramsP -> exp COMMA . paramsP
    (25) paramsP -> . exp COMMA paramsP
    (26) paramsP -> . exp
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    exp                            shift and go to state 75
    paramsP                        shift and go to state 138
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 109

    (74) iexp -> iexp AND . nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    nexp                           shift and go to state 139
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 110

    (75) iexp -> iexp OR . nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    nexp                           shift and go to state 140
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 111

    (72) exp -> NOT iexp .
    (74) iexp -> iexp . AND nexp
    (75) iexp -> iexp . OR nexp

    COMMA           reduce using rule 72 (exp -> NOT iexp .)
    CLOSEBRACKET    reduce using rule 72 (exp -> NOT iexp .)
    CLOSEPARENTHESES reduce using rule 72 (exp -> NOT iexp .)
    SEMICOLON       reduce using rule 72 (exp -> NOT iexp .)
    TO              reduce using rule 72 (exp -> NOT iexp .)
    OPENBRACE       reduce using rule 72 (exp -> NOT iexp .)
    DO              reduce using rule 72 (exp -> NOT iexp .)
    AND             shift and go to state 109
    OR              shift and go to state 110


state 112

    (77) nexp -> nexp GREATER . pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    pexp                           shift and go to state 141
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 113

    (78) nexp -> nexp LESS . pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    pexp                           shift and go to state 142
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 114

    (79) nexp -> nexp DIFFERENT . pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    pexp                           shift and go to state 143
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 115

    (80) nexp -> nexp EQUALS_BOOLEAN . pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    pexp                           shift and go to state 144
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 116

    (81) nexp -> nexp LESSEQUAL . pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    pexp                           shift and go to state 145
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 117

    (82) nexp -> nexp GREATEREQUAL . pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    pexp                           shift and go to state 146
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 118

    (84) pexp -> pexp PLUS . termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    termino                        shift and go to state 147
    factor                         shift and go to state 81

state 119

    (85) pexp -> pexp MINUS . termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    termino                        shift and go to state 148
    factor                         shift and go to state 81

state 120

    (87) termino -> termino MULTIPLY . factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    factor                         shift and go to state 149

state 121

    (88) termino -> termino DIVIDE . factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    factor                         shift and go to state 150

state 122

    (94) factor -> OPENPARENTHESES exp . CLOSEPARENTHESES

    CLOSEPARENTHESES shift and go to state 151


state 123

    (15) paramsfunction -> tipo param . COMMA paramsfunction
    (16) paramsfunction -> tipo param .

    COMMA           shift and go to state 152
    CLOSEPARENTHESES reduce using rule 16 (paramsfunction -> tipo param .)


state 124

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES . OPENBRACE estatuto CLOSEBRACE

    OPENBRACE       shift and go to state 153


state 125

    (48) asignacion -> ID EQUALS exp . SEMICOLON

    SEMICOLON       shift and go to state 154


state 126

    (49) asignacion -> ID OPENBRACKET paramsP . CLOSEBRACKET EQUALS exp SEMICOLON

    CLOSEBRACKET    shift and go to state 155


state 127

    (44) llamada -> ID OPENPARENTHESES param . CLOSEPARENTHESES SEMICOLON

    CLOSEPARENTHESES shift and go to state 156


state 128

    (45) llamada -> ID OPENPARENTHESES CLOSEPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 157


state 129

    (46) retorno -> RETURN OPENPARENTHESES exp . CLOSEPARENTHESES SEMICOLON

    CLOSEPARENTHESES shift and go to state 158


state 130

    (47) lectura -> READ OPENPARENTHESES param . CLOSEPARENTHESES SEMICOLON

    CLOSEPARENTHESES shift and go to state 159


state 131

    (50) escritura -> WRITE OPENPARENTHESES escrituraP . CLOSEPARENTHESES SEMICOLON

    CLOSEPARENTHESES shift and go to state 160


state 132

    (51) escrituraP -> QUOTATIONMARK . CTESTRING QUOTATIONMARK COMMA escrituraP
    (54) escrituraP -> QUOTATIONMARK . CTESTRING QUOTATIONMARK

    CTESTRING       shift and go to state 161


state 133

    (52) escrituraP -> exp . COMMA escrituraP
    (55) escrituraP -> exp .

    COMMA           shift and go to state 162
    CLOSEPARENTHESES reduce using rule 55 (escrituraP -> exp .)


state 134

    (53) escrituraP -> ID . COMMA escrituraP
    (56) escrituraP -> ID .
    (90) factor -> ID .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for CLOSEPARENTHESES resolved using rule 56 (escrituraP -> ID .)
    COMMA           shift and go to state 163
    CLOSEPARENTHESES reduce using rule 56 (escrituraP -> ID .)
    MULTIPLY        reduce using rule 90 (factor -> ID .)
    DIVIDE          reduce using rule 90 (factor -> ID .)
    PLUS            reduce using rule 90 (factor -> ID .)
    MINUS           reduce using rule 90 (factor -> ID .)
    GREATER         reduce using rule 90 (factor -> ID .)
    LESS            reduce using rule 90 (factor -> ID .)
    DIFFERENT       reduce using rule 90 (factor -> ID .)
    EQUALS_BOOLEAN  reduce using rule 90 (factor -> ID .)
    LESSEQUAL       reduce using rule 90 (factor -> ID .)
    GREATEREQUAL    reduce using rule 90 (factor -> ID .)
    AND             reduce using rule 90 (factor -> ID .)
    OR              reduce using rule 90 (factor -> ID .)

  ! COMMA           [ reduce using rule 90 (factor -> ID .) ]
  ! CLOSEPARENTHESES [ reduce using rule 90 (factor -> ID .) ]


state 135

    (57) condicion -> IF OPENPARENTHESES exp . CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto

    CLOSEPARENTHESES shift and go to state 164


state 136

    (67) condicional -> WHILE OPENPARENTHESES exp . CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> WHILE OPENPARENTHESES exp . CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE

    CLOSEPARENTHESES shift and go to state 165


state 137

    (69) no_condicional -> FOR ID EQUALS . exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> FOR ID EQUALS . exp TO exp DO OPENBRACE CLOSEBRACE
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    exp                            shift and go to state 166
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 138

    (25) paramsP -> exp COMMA paramsP .

    CLOSEBRACKET    reduce using rule 25 (paramsP -> exp COMMA paramsP .)


state 139

    (74) iexp -> iexp AND nexp .
    (77) nexp -> nexp . GREATER pexp
    (78) nexp -> nexp . LESS pexp
    (79) nexp -> nexp . DIFFERENT pexp
    (80) nexp -> nexp . EQUALS_BOOLEAN pexp
    (81) nexp -> nexp . LESSEQUAL pexp
    (82) nexp -> nexp . GREATEREQUAL pexp

    AND             reduce using rule 74 (iexp -> iexp AND nexp .)
    OR              reduce using rule 74 (iexp -> iexp AND nexp .)
    COMMA           reduce using rule 74 (iexp -> iexp AND nexp .)
    CLOSEBRACKET    reduce using rule 74 (iexp -> iexp AND nexp .)
    CLOSEPARENTHESES reduce using rule 74 (iexp -> iexp AND nexp .)
    SEMICOLON       reduce using rule 74 (iexp -> iexp AND nexp .)
    TO              reduce using rule 74 (iexp -> iexp AND nexp .)
    OPENBRACE       reduce using rule 74 (iexp -> iexp AND nexp .)
    DO              reduce using rule 74 (iexp -> iexp AND nexp .)
    GREATER         shift and go to state 112
    LESS            shift and go to state 113
    DIFFERENT       shift and go to state 114
    EQUALS_BOOLEAN  shift and go to state 115
    LESSEQUAL       shift and go to state 116
    GREATEREQUAL    shift and go to state 117


state 140

    (75) iexp -> iexp OR nexp .
    (77) nexp -> nexp . GREATER pexp
    (78) nexp -> nexp . LESS pexp
    (79) nexp -> nexp . DIFFERENT pexp
    (80) nexp -> nexp . EQUALS_BOOLEAN pexp
    (81) nexp -> nexp . LESSEQUAL pexp
    (82) nexp -> nexp . GREATEREQUAL pexp

    AND             reduce using rule 75 (iexp -> iexp OR nexp .)
    OR              reduce using rule 75 (iexp -> iexp OR nexp .)
    COMMA           reduce using rule 75 (iexp -> iexp OR nexp .)
    CLOSEBRACKET    reduce using rule 75 (iexp -> iexp OR nexp .)
    CLOSEPARENTHESES reduce using rule 75 (iexp -> iexp OR nexp .)
    SEMICOLON       reduce using rule 75 (iexp -> iexp OR nexp .)
    TO              reduce using rule 75 (iexp -> iexp OR nexp .)
    OPENBRACE       reduce using rule 75 (iexp -> iexp OR nexp .)
    DO              reduce using rule 75 (iexp -> iexp OR nexp .)
    GREATER         shift and go to state 112
    LESS            shift and go to state 113
    DIFFERENT       shift and go to state 114
    EQUALS_BOOLEAN  shift and go to state 115
    LESSEQUAL       shift and go to state 116
    GREATEREQUAL    shift and go to state 117


state 141

    (77) nexp -> nexp GREATER pexp .
    (84) pexp -> pexp . PLUS termino
    (85) pexp -> pexp . MINUS termino

    GREATER         reduce using rule 77 (nexp -> nexp GREATER pexp .)
    LESS            reduce using rule 77 (nexp -> nexp GREATER pexp .)
    DIFFERENT       reduce using rule 77 (nexp -> nexp GREATER pexp .)
    EQUALS_BOOLEAN  reduce using rule 77 (nexp -> nexp GREATER pexp .)
    LESSEQUAL       reduce using rule 77 (nexp -> nexp GREATER pexp .)
    GREATEREQUAL    reduce using rule 77 (nexp -> nexp GREATER pexp .)
    AND             reduce using rule 77 (nexp -> nexp GREATER pexp .)
    OR              reduce using rule 77 (nexp -> nexp GREATER pexp .)
    COMMA           reduce using rule 77 (nexp -> nexp GREATER pexp .)
    CLOSEBRACKET    reduce using rule 77 (nexp -> nexp GREATER pexp .)
    CLOSEPARENTHESES reduce using rule 77 (nexp -> nexp GREATER pexp .)
    SEMICOLON       reduce using rule 77 (nexp -> nexp GREATER pexp .)
    TO              reduce using rule 77 (nexp -> nexp GREATER pexp .)
    OPENBRACE       reduce using rule 77 (nexp -> nexp GREATER pexp .)
    DO              reduce using rule 77 (nexp -> nexp GREATER pexp .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119


state 142

    (78) nexp -> nexp LESS pexp .
    (84) pexp -> pexp . PLUS termino
    (85) pexp -> pexp . MINUS termino

    GREATER         reduce using rule 78 (nexp -> nexp LESS pexp .)
    LESS            reduce using rule 78 (nexp -> nexp LESS pexp .)
    DIFFERENT       reduce using rule 78 (nexp -> nexp LESS pexp .)
    EQUALS_BOOLEAN  reduce using rule 78 (nexp -> nexp LESS pexp .)
    LESSEQUAL       reduce using rule 78 (nexp -> nexp LESS pexp .)
    GREATEREQUAL    reduce using rule 78 (nexp -> nexp LESS pexp .)
    AND             reduce using rule 78 (nexp -> nexp LESS pexp .)
    OR              reduce using rule 78 (nexp -> nexp LESS pexp .)
    COMMA           reduce using rule 78 (nexp -> nexp LESS pexp .)
    CLOSEBRACKET    reduce using rule 78 (nexp -> nexp LESS pexp .)
    CLOSEPARENTHESES reduce using rule 78 (nexp -> nexp LESS pexp .)
    SEMICOLON       reduce using rule 78 (nexp -> nexp LESS pexp .)
    TO              reduce using rule 78 (nexp -> nexp LESS pexp .)
    OPENBRACE       reduce using rule 78 (nexp -> nexp LESS pexp .)
    DO              reduce using rule 78 (nexp -> nexp LESS pexp .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119


state 143

    (79) nexp -> nexp DIFFERENT pexp .
    (84) pexp -> pexp . PLUS termino
    (85) pexp -> pexp . MINUS termino

    GREATER         reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    LESS            reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    DIFFERENT       reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    EQUALS_BOOLEAN  reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    LESSEQUAL       reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    GREATEREQUAL    reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    AND             reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    OR              reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    COMMA           reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    CLOSEBRACKET    reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    CLOSEPARENTHESES reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    SEMICOLON       reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    TO              reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    OPENBRACE       reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    DO              reduce using rule 79 (nexp -> nexp DIFFERENT pexp .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119


state 144

    (80) nexp -> nexp EQUALS_BOOLEAN pexp .
    (84) pexp -> pexp . PLUS termino
    (85) pexp -> pexp . MINUS termino

    GREATER         reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    LESS            reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    DIFFERENT       reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    EQUALS_BOOLEAN  reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    LESSEQUAL       reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    GREATEREQUAL    reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    AND             reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    OR              reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    COMMA           reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    CLOSEBRACKET    reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    CLOSEPARENTHESES reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    SEMICOLON       reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    TO              reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    OPENBRACE       reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    DO              reduce using rule 80 (nexp -> nexp EQUALS_BOOLEAN pexp .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119


state 145

    (81) nexp -> nexp LESSEQUAL pexp .
    (84) pexp -> pexp . PLUS termino
    (85) pexp -> pexp . MINUS termino

    GREATER         reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    LESS            reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    DIFFERENT       reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    EQUALS_BOOLEAN  reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    LESSEQUAL       reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    GREATEREQUAL    reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    AND             reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    OR              reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    COMMA           reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    CLOSEBRACKET    reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    CLOSEPARENTHESES reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    SEMICOLON       reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    TO              reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    OPENBRACE       reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    DO              reduce using rule 81 (nexp -> nexp LESSEQUAL pexp .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119


state 146

    (82) nexp -> nexp GREATEREQUAL pexp .
    (84) pexp -> pexp . PLUS termino
    (85) pexp -> pexp . MINUS termino

    GREATER         reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    LESS            reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    DIFFERENT       reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    EQUALS_BOOLEAN  reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    LESSEQUAL       reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    GREATEREQUAL    reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    AND             reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    OR              reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    COMMA           reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    CLOSEBRACKET    reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    CLOSEPARENTHESES reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    SEMICOLON       reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    TO              reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    OPENBRACE       reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    DO              reduce using rule 82 (nexp -> nexp GREATEREQUAL pexp .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119


state 147

    (84) pexp -> pexp PLUS termino .
    (87) termino -> termino . MULTIPLY factor
    (88) termino -> termino . DIVIDE factor

    PLUS            reduce using rule 84 (pexp -> pexp PLUS termino .)
    MINUS           reduce using rule 84 (pexp -> pexp PLUS termino .)
    GREATER         reduce using rule 84 (pexp -> pexp PLUS termino .)
    LESS            reduce using rule 84 (pexp -> pexp PLUS termino .)
    DIFFERENT       reduce using rule 84 (pexp -> pexp PLUS termino .)
    EQUALS_BOOLEAN  reduce using rule 84 (pexp -> pexp PLUS termino .)
    LESSEQUAL       reduce using rule 84 (pexp -> pexp PLUS termino .)
    GREATEREQUAL    reduce using rule 84 (pexp -> pexp PLUS termino .)
    AND             reduce using rule 84 (pexp -> pexp PLUS termino .)
    OR              reduce using rule 84 (pexp -> pexp PLUS termino .)
    COMMA           reduce using rule 84 (pexp -> pexp PLUS termino .)
    CLOSEBRACKET    reduce using rule 84 (pexp -> pexp PLUS termino .)
    CLOSEPARENTHESES reduce using rule 84 (pexp -> pexp PLUS termino .)
    SEMICOLON       reduce using rule 84 (pexp -> pexp PLUS termino .)
    TO              reduce using rule 84 (pexp -> pexp PLUS termino .)
    OPENBRACE       reduce using rule 84 (pexp -> pexp PLUS termino .)
    DO              reduce using rule 84 (pexp -> pexp PLUS termino .)
    MULTIPLY        shift and go to state 120
    DIVIDE          shift and go to state 121


state 148

    (85) pexp -> pexp MINUS termino .
    (87) termino -> termino . MULTIPLY factor
    (88) termino -> termino . DIVIDE factor

    PLUS            reduce using rule 85 (pexp -> pexp MINUS termino .)
    MINUS           reduce using rule 85 (pexp -> pexp MINUS termino .)
    GREATER         reduce using rule 85 (pexp -> pexp MINUS termino .)
    LESS            reduce using rule 85 (pexp -> pexp MINUS termino .)
    DIFFERENT       reduce using rule 85 (pexp -> pexp MINUS termino .)
    EQUALS_BOOLEAN  reduce using rule 85 (pexp -> pexp MINUS termino .)
    LESSEQUAL       reduce using rule 85 (pexp -> pexp MINUS termino .)
    GREATEREQUAL    reduce using rule 85 (pexp -> pexp MINUS termino .)
    AND             reduce using rule 85 (pexp -> pexp MINUS termino .)
    OR              reduce using rule 85 (pexp -> pexp MINUS termino .)
    COMMA           reduce using rule 85 (pexp -> pexp MINUS termino .)
    CLOSEBRACKET    reduce using rule 85 (pexp -> pexp MINUS termino .)
    CLOSEPARENTHESES reduce using rule 85 (pexp -> pexp MINUS termino .)
    SEMICOLON       reduce using rule 85 (pexp -> pexp MINUS termino .)
    TO              reduce using rule 85 (pexp -> pexp MINUS termino .)
    OPENBRACE       reduce using rule 85 (pexp -> pexp MINUS termino .)
    DO              reduce using rule 85 (pexp -> pexp MINUS termino .)
    MULTIPLY        shift and go to state 120
    DIVIDE          shift and go to state 121


state 149

    (87) termino -> termino MULTIPLY factor .

    MULTIPLY        reduce using rule 87 (termino -> termino MULTIPLY factor .)
    DIVIDE          reduce using rule 87 (termino -> termino MULTIPLY factor .)
    PLUS            reduce using rule 87 (termino -> termino MULTIPLY factor .)
    MINUS           reduce using rule 87 (termino -> termino MULTIPLY factor .)
    GREATER         reduce using rule 87 (termino -> termino MULTIPLY factor .)
    LESS            reduce using rule 87 (termino -> termino MULTIPLY factor .)
    DIFFERENT       reduce using rule 87 (termino -> termino MULTIPLY factor .)
    EQUALS_BOOLEAN  reduce using rule 87 (termino -> termino MULTIPLY factor .)
    LESSEQUAL       reduce using rule 87 (termino -> termino MULTIPLY factor .)
    GREATEREQUAL    reduce using rule 87 (termino -> termino MULTIPLY factor .)
    AND             reduce using rule 87 (termino -> termino MULTIPLY factor .)
    OR              reduce using rule 87 (termino -> termino MULTIPLY factor .)
    COMMA           reduce using rule 87 (termino -> termino MULTIPLY factor .)
    CLOSEBRACKET    reduce using rule 87 (termino -> termino MULTIPLY factor .)
    CLOSEPARENTHESES reduce using rule 87 (termino -> termino MULTIPLY factor .)
    SEMICOLON       reduce using rule 87 (termino -> termino MULTIPLY factor .)
    TO              reduce using rule 87 (termino -> termino MULTIPLY factor .)
    OPENBRACE       reduce using rule 87 (termino -> termino MULTIPLY factor .)
    DO              reduce using rule 87 (termino -> termino MULTIPLY factor .)


state 150

    (88) termino -> termino DIVIDE factor .

    MULTIPLY        reduce using rule 88 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 88 (termino -> termino DIVIDE factor .)
    PLUS            reduce using rule 88 (termino -> termino DIVIDE factor .)
    MINUS           reduce using rule 88 (termino -> termino DIVIDE factor .)
    GREATER         reduce using rule 88 (termino -> termino DIVIDE factor .)
    LESS            reduce using rule 88 (termino -> termino DIVIDE factor .)
    DIFFERENT       reduce using rule 88 (termino -> termino DIVIDE factor .)
    EQUALS_BOOLEAN  reduce using rule 88 (termino -> termino DIVIDE factor .)
    LESSEQUAL       reduce using rule 88 (termino -> termino DIVIDE factor .)
    GREATEREQUAL    reduce using rule 88 (termino -> termino DIVIDE factor .)
    AND             reduce using rule 88 (termino -> termino DIVIDE factor .)
    OR              reduce using rule 88 (termino -> termino DIVIDE factor .)
    COMMA           reduce using rule 88 (termino -> termino DIVIDE factor .)
    CLOSEBRACKET    reduce using rule 88 (termino -> termino DIVIDE factor .)
    CLOSEPARENTHESES reduce using rule 88 (termino -> termino DIVIDE factor .)
    SEMICOLON       reduce using rule 88 (termino -> termino DIVIDE factor .)
    TO              reduce using rule 88 (termino -> termino DIVIDE factor .)
    OPENBRACE       reduce using rule 88 (termino -> termino DIVIDE factor .)
    DO              reduce using rule 88 (termino -> termino DIVIDE factor .)


state 151

    (94) factor -> OPENPARENTHESES exp CLOSEPARENTHESES .

    MULTIPLY        reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    DIVIDE          reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    PLUS            reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    MINUS           reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    GREATER         reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    LESS            reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    DIFFERENT       reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    EQUALS_BOOLEAN  reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    LESSEQUAL       reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    GREATEREQUAL    reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    AND             reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    OR              reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    COMMA           reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    CLOSEBRACKET    reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    CLOSEPARENTHESES reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    SEMICOLON       reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    TO              reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    OPENBRACE       reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)
    DO              reduce using rule 94 (factor -> OPENPARENTHESES exp CLOSEPARENTHESES .)


state 152

    (15) paramsfunction -> tipo param COMMA . paramsfunction
    (15) paramsfunction -> . tipo param COMMA paramsfunction
    (16) paramsfunction -> . tipo param
    (27) tipo -> . INT
    (28) tipo -> . FLOAT
    (29) tipo -> . CHAR
    (30) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    tipo                           shift and go to state 87
    paramsfunction                 shift and go to state 167

state 153

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE . estatuto CLOSEBRACE
    (34) estatuto -> . asignacion estatuto
    (35) estatuto -> . llamada estatuto
    (36) estatuto -> . retorno estatuto
    (37) estatuto -> . lectura estatuto
    (38) estatuto -> . escritura estatuto
    (39) estatuto -> . repeticion estatuto
    (40) estatuto -> . declaracion estatuto
    (41) estatuto -> . condicion estatuto
    (42) estatuto -> . empty
    (48) asignacion -> . ID EQUALS exp SEMICOLON
    (49) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> . ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> . ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
    (46) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (47) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (50) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (65) repeticion -> . condicional
    (66) repeticion -> . no_condicional
    (43) declaracion -> . vars
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (95) empty -> .
    (67) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (69) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> . FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
    (19) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 95 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    estatuto                       shift and go to state 168
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 154

    (48) asignacion -> ID EQUALS exp SEMICOLON .

    ID              reduce using rule 48 (asignacion -> ID EQUALS exp SEMICOLON .)
    RETURN          reduce using rule 48 (asignacion -> ID EQUALS exp SEMICOLON .)
    READ            reduce using rule 48 (asignacion -> ID EQUALS exp SEMICOLON .)
    WRITE           reduce using rule 48 (asignacion -> ID EQUALS exp SEMICOLON .)
    IF              reduce using rule 48 (asignacion -> ID EQUALS exp SEMICOLON .)
    WHILE           reduce using rule 48 (asignacion -> ID EQUALS exp SEMICOLON .)
    FOR             reduce using rule 48 (asignacion -> ID EQUALS exp SEMICOLON .)
    VARS            reduce using rule 48 (asignacion -> ID EQUALS exp SEMICOLON .)
    CLOSEBRACE      reduce using rule 48 (asignacion -> ID EQUALS exp SEMICOLON .)


state 155

    (49) asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET . EQUALS exp SEMICOLON

    EQUALS          shift and go to state 169


state 156

    (44) llamada -> ID OPENPARENTHESES param CLOSEPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 170


state 157

    (45) llamada -> ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON .

    ID              reduce using rule 45 (llamada -> ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON .)
    RETURN          reduce using rule 45 (llamada -> ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON .)
    READ            reduce using rule 45 (llamada -> ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON .)
    WRITE           reduce using rule 45 (llamada -> ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON .)
    IF              reduce using rule 45 (llamada -> ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON .)
    WHILE           reduce using rule 45 (llamada -> ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON .)
    FOR             reduce using rule 45 (llamada -> ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON .)
    VARS            reduce using rule 45 (llamada -> ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON .)
    CLOSEBRACE      reduce using rule 45 (llamada -> ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON .)


state 158

    (46) retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 171


state 159

    (47) lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 172


state 160

    (50) escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 173


state 161

    (51) escrituraP -> QUOTATIONMARK CTESTRING . QUOTATIONMARK COMMA escrituraP
    (54) escrituraP -> QUOTATIONMARK CTESTRING . QUOTATIONMARK

    QUOTATIONMARK   shift and go to state 174


state 162

    (52) escrituraP -> exp COMMA . escrituraP
    (51) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP
    (52) escrituraP -> . exp COMMA escrituraP
    (53) escrituraP -> . ID COMMA escrituraP
    (54) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK
    (55) escrituraP -> . exp
    (56) escrituraP -> . ID
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    QUOTATIONMARK   shift and go to state 132
    ID              shift and go to state 134
    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    exp                            shift and go to state 133
    escrituraP                     shift and go to state 175
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 163

    (53) escrituraP -> ID COMMA . escrituraP
    (51) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP
    (52) escrituraP -> . exp COMMA escrituraP
    (53) escrituraP -> . ID COMMA escrituraP
    (54) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK
    (55) escrituraP -> . exp
    (56) escrituraP -> . ID
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    QUOTATIONMARK   shift and go to state 132
    ID              shift and go to state 134
    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    escrituraP                     shift and go to state 176
    exp                            shift and go to state 133
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 164

    (57) condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES . OPENBRACE gen_gotof condicionp fill_goto

    OPENBRACE       shift and go to state 177


state 165

    (67) condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES . DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES . DO OPENBRACE CLOSEBRACE

    DO              shift and go to state 178


state 166

    (69) no_condicional -> FOR ID EQUALS exp . TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> FOR ID EQUALS exp . TO exp DO OPENBRACE CLOSEBRACE

    TO              shift and go to state 179


state 167

    (15) paramsfunction -> tipo param COMMA paramsfunction .

    CLOSEPARENTHESES reduce using rule 15 (paramsfunction -> tipo param COMMA paramsfunction .)


state 168

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto . CLOSEBRACE

    CLOSEBRACE      shift and go to state 180


state 169

    (49) asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS . exp SEMICOLON
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    exp                            shift and go to state 181
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 170

    (44) llamada -> ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .

    ID              reduce using rule 44 (llamada -> ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    RETURN          reduce using rule 44 (llamada -> ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    READ            reduce using rule 44 (llamada -> ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    WRITE           reduce using rule 44 (llamada -> ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    IF              reduce using rule 44 (llamada -> ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    WHILE           reduce using rule 44 (llamada -> ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    FOR             reduce using rule 44 (llamada -> ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    VARS            reduce using rule 44 (llamada -> ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    CLOSEBRACE      reduce using rule 44 (llamada -> ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)


state 171

    (46) retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .

    ID              reduce using rule 46 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    RETURN          reduce using rule 46 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    READ            reduce using rule 46 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    WRITE           reduce using rule 46 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    IF              reduce using rule 46 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    WHILE           reduce using rule 46 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    FOR             reduce using rule 46 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    VARS            reduce using rule 46 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)
    CLOSEBRACE      reduce using rule 46 (retorno -> RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON .)


state 172

    (47) lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .

    ID              reduce using rule 47 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    RETURN          reduce using rule 47 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    READ            reduce using rule 47 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    WRITE           reduce using rule 47 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    IF              reduce using rule 47 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    WHILE           reduce using rule 47 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    FOR             reduce using rule 47 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    VARS            reduce using rule 47 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)
    CLOSEBRACE      reduce using rule 47 (lectura -> READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON .)


state 173

    (50) escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .

    ID              reduce using rule 50 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    RETURN          reduce using rule 50 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    READ            reduce using rule 50 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    WRITE           reduce using rule 50 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    IF              reduce using rule 50 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    WHILE           reduce using rule 50 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    FOR             reduce using rule 50 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    VARS            reduce using rule 50 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)
    CLOSEBRACE      reduce using rule 50 (escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON .)


state 174

    (51) escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK . COMMA escrituraP
    (54) escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK .

    COMMA           shift and go to state 182
    CLOSEPARENTHESES reduce using rule 54 (escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK .)


state 175

    (52) escrituraP -> exp COMMA escrituraP .

    CLOSEPARENTHESES reduce using rule 52 (escrituraP -> exp COMMA escrituraP .)


state 176

    (53) escrituraP -> ID COMMA escrituraP .

    CLOSEPARENTHESES reduce using rule 53 (escrituraP -> ID COMMA escrituraP .)


state 177

    (57) condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE . gen_gotof condicionp fill_goto
    (58) gen_gotof -> .

    ID              reduce using rule 58 (gen_gotof -> .)
    RETURN          reduce using rule 58 (gen_gotof -> .)
    READ            reduce using rule 58 (gen_gotof -> .)
    WRITE           reduce using rule 58 (gen_gotof -> .)
    IF              reduce using rule 58 (gen_gotof -> .)
    WHILE           reduce using rule 58 (gen_gotof -> .)
    FOR             reduce using rule 58 (gen_gotof -> .)
    VARS            reduce using rule 58 (gen_gotof -> .)
    CLOSEBRACE      reduce using rule 58 (gen_gotof -> .)

    gen_gotof                      shift and go to state 183

state 178

    (67) condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO . OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO . OPENBRACE CLOSEBRACE

    OPENBRACE       shift and go to state 184


state 179

    (69) no_condicional -> FOR ID EQUALS exp TO . exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> FOR ID EQUALS exp TO . exp DO OPENBRACE CLOSEBRACE
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    ID              shift and go to state 73
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    exp                            shift and go to state 185
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 180

    (13) funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE .

    VARS            reduce using rule 13 (funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE .)
    CLASS           reduce using rule 13 (funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE .)
    FUNCTION        reduce using rule 13 (funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE .)
    MAIN            reduce using rule 13 (funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE .)
    $end            reduce using rule 13 (funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 13 (funcion -> FUNCTION tipo TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction CLOSEPARENTHESES OPENBRACE estatuto CLOSEBRACE .)


state 181

    (49) asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp . SEMICOLON

    SEMICOLON       shift and go to state 186


state 182

    (51) escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA . escrituraP
    (51) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP
    (52) escrituraP -> . exp COMMA escrituraP
    (53) escrituraP -> . ID COMMA escrituraP
    (54) escrituraP -> . QUOTATIONMARK CTESTRING QUOTATIONMARK
    (55) escrituraP -> . exp
    (56) escrituraP -> . ID
    (71) exp -> . iexp
    (72) exp -> . NOT iexp
    (73) iexp -> . nexp
    (74) iexp -> . iexp AND nexp
    (75) iexp -> . iexp OR nexp
    (76) nexp -> . pexp
    (77) nexp -> . nexp GREATER pexp
    (78) nexp -> . nexp LESS pexp
    (79) nexp -> . nexp DIFFERENT pexp
    (80) nexp -> . nexp EQUALS_BOOLEAN pexp
    (81) nexp -> . nexp LESSEQUAL pexp
    (82) nexp -> . nexp GREATEREQUAL pexp
    (83) pexp -> . termino
    (84) pexp -> . pexp PLUS termino
    (85) pexp -> . pexp MINUS termino
    (86) termino -> . factor
    (87) termino -> . termino MULTIPLY factor
    (88) termino -> . termino DIVIDE factor
    (89) factor -> . CTEB
    (90) factor -> . ID
    (91) factor -> . CTEF
    (92) factor -> . CTEI
    (93) factor -> . CTEC
    (94) factor -> . OPENPARENTHESES exp CLOSEPARENTHESES

    QUOTATIONMARK   shift and go to state 132
    ID              shift and go to state 134
    NOT             shift and go to state 77
    CTEB            shift and go to state 82
    CTEF            shift and go to state 83
    CTEI            shift and go to state 84
    CTEC            shift and go to state 85
    OPENPARENTHESES shift and go to state 86

    escrituraP                     shift and go to state 187
    exp                            shift and go to state 133
    iexp                           shift and go to state 76
    nexp                           shift and go to state 78
    pexp                           shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81

state 183

    (57) condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof . condicionp fill_goto
    (62) condicionp -> . estatuto fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE
    (63) condicionp -> . estatuto fill_gotof gen_goto CLOSEBRACE ELSE condicion
    (64) condicionp -> . estatuto fill_gotof gen_goto CLOSEBRACE
    (34) estatuto -> . asignacion estatuto
    (35) estatuto -> . llamada estatuto
    (36) estatuto -> . retorno estatuto
    (37) estatuto -> . lectura estatuto
    (38) estatuto -> . escritura estatuto
    (39) estatuto -> . repeticion estatuto
    (40) estatuto -> . declaracion estatuto
    (41) estatuto -> . condicion estatuto
    (42) estatuto -> . empty
    (48) asignacion -> . ID EQUALS exp SEMICOLON
    (49) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> . ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> . ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
    (46) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (47) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (50) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (65) repeticion -> . condicional
    (66) repeticion -> . no_condicional
    (43) declaracion -> . vars
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (95) empty -> .
    (67) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (69) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> . FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
    (19) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 95 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    condicionp                     shift and go to state 188
    estatuto                       shift and go to state 189
    condicion                      shift and go to state 60
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 184

    (67) condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE . estatuto CLOSEBRACE
    (68) condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE . CLOSEBRACE
    (34) estatuto -> . asignacion estatuto
    (35) estatuto -> . llamada estatuto
    (36) estatuto -> . retorno estatuto
    (37) estatuto -> . lectura estatuto
    (38) estatuto -> . escritura estatuto
    (39) estatuto -> . repeticion estatuto
    (40) estatuto -> . declaracion estatuto
    (41) estatuto -> . condicion estatuto
    (42) estatuto -> . empty
    (48) asignacion -> . ID EQUALS exp SEMICOLON
    (49) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> . ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> . ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
    (46) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (47) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (50) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (65) repeticion -> . condicional
    (66) repeticion -> . no_condicional
    (43) declaracion -> . vars
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (95) empty -> .
    (67) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (69) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> . FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
    (19) vars -> . VARS tipo savetype TWODOTS varsP

  ! shift/reduce conflict for CLOSEBRACE resolved as shift
    CLOSEBRACE      shift and go to state 191
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

  ! CLOSEBRACE      [ reduce using rule 95 (empty -> .) ]

    estatuto                       shift and go to state 190
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 185

    (69) no_condicional -> FOR ID EQUALS exp TO exp . OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> FOR ID EQUALS exp TO exp . DO OPENBRACE CLOSEBRACE

    OPENBRACE       shift and go to state 192
    DO              shift and go to state 193


state 186

    (49) asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .

    ID              reduce using rule 49 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    RETURN          reduce using rule 49 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    READ            reduce using rule 49 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    WRITE           reduce using rule 49 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    IF              reduce using rule 49 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    WHILE           reduce using rule 49 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    FOR             reduce using rule 49 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    VARS            reduce using rule 49 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)
    CLOSEBRACE      reduce using rule 49 (asignacion -> ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON .)


state 187

    (51) escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP .

    CLOSEPARENTHESES reduce using rule 51 (escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP .)


state 188

    (57) condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp . fill_goto
    (61) fill_goto -> .

    ID              reduce using rule 61 (fill_goto -> .)
    RETURN          reduce using rule 61 (fill_goto -> .)
    READ            reduce using rule 61 (fill_goto -> .)
    WRITE           reduce using rule 61 (fill_goto -> .)
    IF              reduce using rule 61 (fill_goto -> .)
    WHILE           reduce using rule 61 (fill_goto -> .)
    FOR             reduce using rule 61 (fill_goto -> .)
    VARS            reduce using rule 61 (fill_goto -> .)
    CLOSEBRACE      reduce using rule 61 (fill_goto -> .)

    fill_goto                      shift and go to state 194

state 189

    (62) condicionp -> estatuto . fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE
    (63) condicionp -> estatuto . fill_gotof gen_goto CLOSEBRACE ELSE condicion
    (64) condicionp -> estatuto . fill_gotof gen_goto CLOSEBRACE
    (59) fill_gotof -> .

    CLOSEBRACE      reduce using rule 59 (fill_gotof -> .)

    fill_gotof                     shift and go to state 195

state 190

    (67) condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto . CLOSEBRACE

    CLOSEBRACE      shift and go to state 196


state 191

    (68) condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE .

    ID              reduce using rule 68 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE .)
    RETURN          reduce using rule 68 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE .)
    READ            reduce using rule 68 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE .)
    WRITE           reduce using rule 68 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE .)
    IF              reduce using rule 68 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE .)
    WHILE           reduce using rule 68 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE .)
    FOR             reduce using rule 68 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE .)
    VARS            reduce using rule 68 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 68 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE .)


state 192

    (69) no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE . estatuto CLOSEBRACE
    (34) estatuto -> . asignacion estatuto
    (35) estatuto -> . llamada estatuto
    (36) estatuto -> . retorno estatuto
    (37) estatuto -> . lectura estatuto
    (38) estatuto -> . escritura estatuto
    (39) estatuto -> . repeticion estatuto
    (40) estatuto -> . declaracion estatuto
    (41) estatuto -> . condicion estatuto
    (42) estatuto -> . empty
    (48) asignacion -> . ID EQUALS exp SEMICOLON
    (49) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> . ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> . ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
    (46) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (47) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (50) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (65) repeticion -> . condicional
    (66) repeticion -> . no_condicional
    (43) declaracion -> . vars
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (95) empty -> .
    (67) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (69) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> . FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
    (19) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 95 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    estatuto                       shift and go to state 197
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 193

    (70) no_condicional -> FOR ID EQUALS exp TO exp DO . OPENBRACE CLOSEBRACE

    OPENBRACE       shift and go to state 198


state 194

    (57) condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .

    ID              reduce using rule 57 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    RETURN          reduce using rule 57 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    READ            reduce using rule 57 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    WRITE           reduce using rule 57 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    IF              reduce using rule 57 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    WHILE           reduce using rule 57 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    FOR             reduce using rule 57 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    VARS            reduce using rule 57 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)
    CLOSEBRACE      reduce using rule 57 (condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto .)


state 195

    (62) condicionp -> estatuto fill_gotof . gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE
    (63) condicionp -> estatuto fill_gotof . gen_goto CLOSEBRACE ELSE condicion
    (64) condicionp -> estatuto fill_gotof . gen_goto CLOSEBRACE
    (60) gen_goto -> .

    CLOSEBRACE      reduce using rule 60 (gen_goto -> .)

    gen_goto                       shift and go to state 199

state 196

    (67) condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE .

    ID              reduce using rule 67 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE .)
    RETURN          reduce using rule 67 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE .)
    READ            reduce using rule 67 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE .)
    WRITE           reduce using rule 67 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE .)
    IF              reduce using rule 67 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE .)
    WHILE           reduce using rule 67 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE .)
    FOR             reduce using rule 67 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE .)
    VARS            reduce using rule 67 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 67 (condicional -> WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE .)


state 197

    (69) no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto . CLOSEBRACE

    CLOSEBRACE      shift and go to state 200


state 198

    (70) no_condicional -> FOR ID EQUALS exp TO exp DO OPENBRACE . CLOSEBRACE

    CLOSEBRACE      shift and go to state 201


state 199

    (62) condicionp -> estatuto fill_gotof gen_goto . CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE
    (63) condicionp -> estatuto fill_gotof gen_goto . CLOSEBRACE ELSE condicion
    (64) condicionp -> estatuto fill_gotof gen_goto . CLOSEBRACE

    CLOSEBRACE      shift and go to state 202


state 200

    (69) no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .

    ID              reduce using rule 69 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    RETURN          reduce using rule 69 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    READ            reduce using rule 69 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    WRITE           reduce using rule 69 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    IF              reduce using rule 69 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    WHILE           reduce using rule 69 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    FOR             reduce using rule 69 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    VARS            reduce using rule 69 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 69 (no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE .)


state 201

    (70) no_condicional -> FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE .

    ID              reduce using rule 70 (no_condicional -> FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE .)
    RETURN          reduce using rule 70 (no_condicional -> FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE .)
    READ            reduce using rule 70 (no_condicional -> FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE .)
    WRITE           reduce using rule 70 (no_condicional -> FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE .)
    IF              reduce using rule 70 (no_condicional -> FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE .)
    WHILE           reduce using rule 70 (no_condicional -> FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE .)
    FOR             reduce using rule 70 (no_condicional -> FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE .)
    VARS            reduce using rule 70 (no_condicional -> FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 70 (no_condicional -> FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE .)


state 202

    (62) condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE . ELSE OPENBRACE estatuto CLOSEBRACE
    (63) condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE . ELSE condicion
    (64) condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE .

    ELSE            shift and go to state 203
    ID              reduce using rule 64 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE .)
    RETURN          reduce using rule 64 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE .)
    READ            reduce using rule 64 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE .)
    WRITE           reduce using rule 64 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE .)
    IF              reduce using rule 64 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE .)
    WHILE           reduce using rule 64 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE .)
    FOR             reduce using rule 64 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE .)
    VARS            reduce using rule 64 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 64 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE .)


state 203

    (62) condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE . OPENBRACE estatuto CLOSEBRACE
    (63) condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE . condicion
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto

    OPENBRACE       shift and go to state 204
    IF              shift and go to state 69

    condicion                      shift and go to state 205

state 204

    (62) condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE . estatuto CLOSEBRACE
    (34) estatuto -> . asignacion estatuto
    (35) estatuto -> . llamada estatuto
    (36) estatuto -> . retorno estatuto
    (37) estatuto -> . lectura estatuto
    (38) estatuto -> . escritura estatuto
    (39) estatuto -> . repeticion estatuto
    (40) estatuto -> . declaracion estatuto
    (41) estatuto -> . condicion estatuto
    (42) estatuto -> . empty
    (48) asignacion -> . ID EQUALS exp SEMICOLON
    (49) asignacion -> . ID OPENBRACKET paramsP CLOSEBRACKET EQUALS exp SEMICOLON
    (44) llamada -> . ID OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (45) llamada -> . ID OPENPARENTHESES CLOSEPARENTHESES SEMICOLON
    (46) retorno -> . RETURN OPENPARENTHESES exp CLOSEPARENTHESES SEMICOLON
    (47) lectura -> . READ OPENPARENTHESES param CLOSEPARENTHESES SEMICOLON
    (50) escritura -> . WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON
    (65) repeticion -> . condicional
    (66) repeticion -> . no_condicional
    (43) declaracion -> . vars
    (57) condicion -> . IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto
    (95) empty -> .
    (67) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE estatuto CLOSEBRACE
    (68) condicional -> . WHILE OPENPARENTHESES exp CLOSEPARENTHESES DO OPENBRACE CLOSEBRACE
    (69) no_condicional -> . FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE
    (70) no_condicional -> . FOR ID EQUALS exp TO exp DO OPENBRACE CLOSEBRACE
    (19) vars -> . VARS tipo savetype TWODOTS varsP

    ID              shift and go to state 62
    RETURN          shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 69
    CLOSEBRACE      reduce using rule 95 (empty -> .)
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    VARS            shift and go to state 12

    estatuto                       shift and go to state 206
    asignacion                     shift and go to state 53
    llamada                        shift and go to state 54
    retorno                        shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 57
    repeticion                     shift and go to state 58
    declaracion                    shift and go to state 59
    condicion                      shift and go to state 60
    empty                          shift and go to state 61
    condicional                    shift and go to state 66
    no_condicional                 shift and go to state 67
    vars                           shift and go to state 68

state 205

    (63) condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE condicion .

    ID              reduce using rule 63 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE condicion .)
    RETURN          reduce using rule 63 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE condicion .)
    READ            reduce using rule 63 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE condicion .)
    WRITE           reduce using rule 63 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE condicion .)
    IF              reduce using rule 63 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE condicion .)
    WHILE           reduce using rule 63 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE condicion .)
    FOR             reduce using rule 63 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE condicion .)
    VARS            reduce using rule 63 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE condicion .)
    CLOSEBRACE      reduce using rule 63 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE condicion .)


state 206

    (62) condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE estatuto . CLOSEBRACE

    CLOSEBRACE      shift and go to state 207


state 207

    (62) condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .

    ID              reduce using rule 62 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    RETURN          reduce using rule 62 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    READ            reduce using rule 62 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    WRITE           reduce using rule 62 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    IF              reduce using rule 62 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    WHILE           reduce using rule 62 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    FOR             reduce using rule 62 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    VARS            reduce using rule 62 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 62 (condicionp -> estatuto fill_gotof gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLOSEBRACE in state 38 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 134 resolved as shift
WARNING: shift/reduce conflict for CLOSEBRACE in state 184 resolved as shift
WARNING: reduce/reduce conflict in state 134 resolved using rule (escrituraP -> ID)
WARNING: rejected rule (factor -> ID) in state 134
