
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programanonassocLESSGREATERLESSEQUALGREATEREQUALEQUALS_BOOLEANleftPLUSMINUSleftMULTIPLYDIVIDErightEQUALSAND BOOL CALL CHAR CLASS CLOSEBRACE CLOSEBRACKET CLOSEPARENTHESES COMMA CTEB CTEC CTEF CTEI CTESTRING CTE_COMMENT DIFFERENT DIVIDE DO DOT ELSE EQUALS EQUALS_BOOLEAN FLOAT FOR FUNCTION GREATER GREATEREQUAL HASHTAG ID IF INT LESS LESSEQUAL MAIN MINUS MULTIPLY NOT OPENBRACE OPENBRACKET OPENPARENTHESES OR PLUS PRINT PROGRAM QUOTATIONMARK READ RETURN SEMICOLON THEN TO TWODOTS VARS VOID WHILE WRITE\n    programa : PROGRAM ID SEMICOLON establishglobalscope programaP\n    establishglobalscope :\n    programaP : vars programaP\n    | clase programaP\n    | funcion programaP\n    | CTE_COMMENT programaP\n    | bloque\n    | empty\n    \n    clase : CLASS ID OPENBRACE claseP CLOSEBRACE\n    \n    claseP : vars clasePP\n         | clasePP\n    \n    clasePP : funcion clasePP\n            | empty\n    \n    funcion : FUNCTION tipo_f TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE turnoff estatuto CLOSEBRACE\n    \n    turnoff : \n    \n    tipo_f : INT\n            | FLOAT\n            | BOOL\n            | CHAR\n            | VOID\n    \n    savefuncscope : \n    \n    paramsfunction : tipo savetipo param COMMA paramsfunction\n                    | tipo savetipo param\n                    | empty\n    \n    savetipo : \n    \n    savesequence : \n    \n    return : RETURN exp SEMICOLON\n            | RETURN SEMICOLON\n    \n    vars : VARS tipo savetype TWODOTS varsP\n    \n    varsP : param COMMA varsP\n            | param SEMICOLON\n    \n    savetype : \n    \n    param : ID\n        | ID declare_dims\n    \n    declare_dims : OPENBRACKET exp CLOSEBRACKET declare_dims\n                | OPENBRACKET exp CLOSEBRACKET\n    \n    paramsP : exp COMMA paramsP\n            | exp\n    \n    tipo : INT\n         | FLOAT\n         | CHAR\n         | BOOL\n    \n    bloque : MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE\n            | MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE\n    \n    establishmainscope : \n    \n    estatuto : asignacion estatuto\n        | llamada estatuto\n        | lectura estatuto\n        | escritura estatuto\n        | repeticion estatuto\n        | declaracion estatuto\n        | condicion estatuto\n        | return estatuto\n        | CTE_COMMENT estatuto\n        | empty\n    \n    declaracion : vars\n    \n    llamada : ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES\n    \n    gen_era : \n    \n    param_call : exp gen_param printt\n                | exp gen_param COMMA param_call\n    \n    printt : \n    \n    gen_param : \n    \n    lectura : READ OPENPARENTHESES param_read CLOSEPARENTHESES SEMICOLON\n    \n    param_read : \n    \n    asignacion : ID EQUALS exp SEMICOLON\n        | ID OPENBRACKET asignaciondim EQUALS exp SEMICOLON\n    \n    asignaciondim : exp CLOSEBRACKET OPENBRACKET asignaciondim\n                    | exp CLOSEBRACKET\n    \n    escritura : WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON\n    \n    escrituraP : QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP\n        | exp COMMA escrituraP\n        | ID COMMA escrituraP\n        | QUOTATIONMARK CTESTRING QUOTATIONMARK\n        | exp\n        | ID\n    \n    condicion : IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto\n    \n    gen_gotof : \n    \n    fill_gotof : \n    \n    gen_goto : \n    \n    fill_goto : \n    \n    fill_gotof_if : \n    \n    condicionp : estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE\n          | estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE condicion\n          | estatuto fill_gotof_if gen_goto CLOSEBRACE\n    \n    repeticion : condicional\n        | no_condicional\n    \n    condicional : WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE \n    \n    migaja : \n    \n    gen_goto_migaja : \n    \n    gen_goto_while : \n    \n    gen_fill_goto : \n    \n    fill_goto_while : \n    \n    fill_gotof_while : \n    \n    no_condicional : FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE\n    \n    exp : iexp\n        | NOT iexp\n    \n    iexp : nexp\n        | iexp AND nexp\n        | iexp OR nexp\n    \n    nexp : pexp\n        | nexp GREATER pexp\n        | nexp LESS pexp\n        | nexp DIFFERENT pexp\n        | nexp EQUALS_BOOLEAN pexp\n        | nexp LESSEQUAL pexp\n        | nexp GREATEREQUAL pexp\n    \n    pexp : termino\n        | pexp PLUS termino\n        | pexp MINUS termino\n    \n    termino : factor\n    | termino MULTIPLY factor\n    | termino DIVIDE factor\n    \n    factor :\n        | CTEF\n        | CTEI\n        | CTEC\n        | ID\n        | CTEB\n        | llamada printt\n        | OPENPARENTHESES exp CLOSEPARENTHESES\n    \n    empty :\n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,4,5,6,7,8,9,10,11,12,17,18,19,20,46,49,54,56,81,99,210,],[0,-2,-121,-1,-121,-121,-121,-121,-7,-8,-3,-4,-5,-6,-29,-9,-44,-31,-30,-43,-14,]),'ID':([2,14,22,23,24,25,36,38,45,46,53,55,56,58,61,62,63,64,65,66,67,68,69,74,75,76,78,80,81,84,95,97,109,110,113,114,116,117,120,121,123,124,125,126,127,128,129,130,131,132,136,140,147,148,149,166,167,174,175,179,182,183,185,186,190,192,193,195,198,199,200,206,208,209,211,217,218,221,222,223,225,],[3,26,-39,-40,-41,-42,44,48,-45,-29,71,48,-31,92,71,71,71,71,71,71,71,71,71,-85,-86,-56,92,118,-30,92,92,-25,92,92,145,92,-28,-88,92,92,92,92,92,92,92,92,92,92,92,92,48,92,-27,92,92,-65,92,145,145,-15,92,-57,-63,-69,-77,92,71,-66,92,145,71,-80,71,71,-76,-94,-84,-87,71,-83,-82,]),'SEMICOLON':([3,47,48,57,78,83,84,85,86,87,88,89,90,91,92,93,94,109,115,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,137,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,171,172,181,183,],[4,56,-33,-34,116,-95,-113,-97,-100,-107,-110,-114,-115,-116,-117,-118,-61,-113,147,-36,-113,-113,-96,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,166,-35,-98,-99,-101,-102,-103,-104,-105,-106,-108,-109,-111,-112,-120,-113,185,186,195,-57,]),'CTE_COMMENT':([4,5,7,8,9,10,45,46,49,53,56,61,62,63,64,65,66,67,68,69,74,75,76,81,116,147,166,179,183,185,186,190,193,195,200,206,208,209,210,211,217,218,221,222,223,225,],[-2,10,10,10,10,10,-45,-29,-9,69,-31,69,69,69,69,69,69,69,69,69,-85,-86,-56,-30,-28,-27,-65,-15,-57,-63,-69,-77,69,-66,69,-80,69,69,-14,-76,-94,-84,-87,69,-83,-82,]),'VARS':([4,5,7,8,9,10,35,45,46,49,53,56,61,62,63,64,65,66,67,68,69,74,75,76,81,116,147,166,179,183,185,186,190,193,195,200,206,208,209,210,211,217,218,221,222,223,225,],[-2,13,13,13,13,13,13,-45,-29,-9,13,-31,13,13,13,13,13,13,13,13,13,-85,-86,-56,-30,-28,-27,-65,-15,-57,-63,-69,-77,13,-66,13,-80,13,13,-14,-76,-94,-84,-87,13,-83,-82,]),'CLASS':([4,5,7,8,9,10,46,49,56,81,210,],[-2,14,14,14,14,14,-29,-9,-31,-30,-14,]),'FUNCTION':([4,5,7,8,9,10,35,40,42,46,49,56,81,210,],[-2,15,15,15,15,15,15,15,15,-29,-9,-31,-30,-14,]),'MAIN':([4,5,7,8,9,10,46,49,56,81,210,],[-2,16,16,16,16,16,-29,-9,-31,-30,-14,]),'INT':([13,15,59,180,],[22,28,22,22,]),'FLOAT':([13,15,59,180,],[23,29,23,23,]),'CHAR':([13,15,59,180,],[24,31,24,24,]),'BOOL':([13,15,59,180,],[25,30,25,25,]),'VOID':([15,],[32,]),'OPENPARENTHESES':([16,44,52,58,71,72,73,77,78,79,84,92,95,109,110,111,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,140,145,148,149,167,174,175,182,192,198,199,],[33,-21,59,95,-58,112,113,114,95,117,95,-58,95,95,95,140,95,95,-88,95,95,95,95,95,95,95,95,95,95,95,95,95,-58,95,95,95,95,95,95,95,95,95,]),'TWODOTS':([21,22,23,24,25,27,28,29,30,31,32,34,],[-32,-39,-40,-41,-42,36,-16,-17,-18,-19,-20,38,]),'OPENBRACE':([26,37,83,84,85,86,87,88,89,90,91,92,93,94,120,121,122,123,124,125,126,127,128,129,130,131,132,133,151,152,153,154,155,156,157,158,159,160,161,162,163,164,176,183,192,201,202,220,],[35,45,-95,-113,-97,-100,-107,-110,-114,-115,-116,-117,-118,-61,-113,-113,-96,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-98,-99,-101,-102,-103,-104,-105,-106,-108,-109,-111,-112,-120,179,190,-57,-113,208,209,222,]),'CLOSEPARENTHESES':([33,48,57,59,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,112,113,114,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,140,141,142,144,145,146,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,169,170,174,175,177,180,183,184,187,188,189,191,194,197,198,199,204,205,],[37,-33,-34,-121,-95,-113,-97,-100,-107,-110,-114,-115,-116,-117,-118,-61,-113,-26,-24,-64,-113,-113,-88,-36,-113,-113,-96,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,163,164,-113,171,172,-74,-75,176,-113,-35,-98,-99,-101,-102,-103,-104,-105,-106,-108,-109,-111,-112,-120,-23,183,-62,-113,-113,-77,-121,-57,-61,-73,-71,-72,201,-22,-59,-113,-113,-60,-70,]),'CLOSEBRACE':([35,39,40,41,42,43,45,46,50,51,53,56,60,61,62,63,64,65,66,67,68,69,70,74,75,76,81,100,101,102,103,104,105,106,107,108,116,147,166,179,183,185,186,190,193,195,200,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,],[-121,49,-121,-11,-121,-13,54,-29,-10,-12,-121,-31,99,-121,-121,-121,-121,-121,-121,-121,-121,-121,-55,-85,-86,-56,-30,-46,-47,-48,-49,-50,-51,-52,-53,-54,-28,-27,-65,-15,-57,-63,-69,-77,-121,-66,-121,210,-80,-81,-121,-121,-14,-76,-79,-93,217,218,-89,-94,-84,221,-87,-121,-83,225,-82,]),'READ':([45,46,53,56,61,62,63,64,65,66,67,68,69,74,75,76,81,116,147,166,179,183,185,186,190,193,195,200,206,208,209,211,217,218,221,222,223,225,],[-45,-29,72,-31,72,72,72,72,72,72,72,72,72,-85,-86,-56,-30,-28,-27,-65,-15,-57,-63,-69,-77,72,-66,72,-80,72,72,-76,-94,-84,-87,72,-83,-82,]),'WRITE':([45,46,53,56,61,62,63,64,65,66,67,68,69,74,75,76,81,116,147,166,179,183,185,186,190,193,195,200,206,208,209,211,217,218,221,222,223,225,],[-45,-29,73,-31,73,73,73,73,73,73,73,73,73,-85,-86,-56,-30,-28,-27,-65,-15,-57,-63,-69,-77,73,-66,73,-80,73,73,-76,-94,-84,-87,73,-83,-82,]),'IF':([45,46,53,56,61,62,63,64,65,66,67,68,69,74,75,76,81,116,147,166,179,183,185,186,190,193,195,200,206,208,209,211,217,218,220,221,222,223,225,],[-45,-29,77,-31,77,77,77,77,77,77,77,77,77,-85,-86,-56,-30,-28,-27,-65,-15,-57,-63,-69,-77,77,-66,77,-80,77,77,-76,-94,-84,77,-87,77,-83,-82,]),'RETURN':([45,46,53,56,61,62,63,64,65,66,67,68,69,74,75,76,81,116,147,166,179,183,185,186,190,193,195,200,206,208,209,211,217,218,221,222,223,225,],[-45,-29,78,-31,78,78,78,78,78,78,78,78,78,-85,-86,-56,-30,-28,-27,-65,-15,-57,-63,-69,-77,78,-66,78,-80,78,78,-76,-94,-84,-87,78,-83,-82,]),'WHILE':([45,46,53,56,61,62,63,64,65,66,67,68,69,74,75,76,81,116,147,166,179,183,185,186,190,193,195,200,206,208,209,211,217,218,221,222,223,225,],[-45,-29,79,-31,79,79,79,79,79,79,79,79,79,-85,-86,-56,-30,-28,-27,-65,-15,-57,-63,-69,-77,79,-66,79,-80,79,79,-76,-94,-84,-87,79,-83,-82,]),'FOR':([45,46,53,56,61,62,63,64,65,66,67,68,69,74,75,76,81,116,147,166,179,183,185,186,190,193,195,200,206,208,209,211,217,218,221,222,223,225,],[-45,-29,80,-31,80,80,80,80,80,80,80,80,80,-85,-86,-56,-30,-28,-27,-65,-15,-57,-63,-69,-77,80,-66,80,-80,80,80,-76,-94,-84,-87,80,-83,-82,]),'COMMA':([47,48,57,83,84,85,86,87,88,89,90,91,92,93,94,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,140,144,145,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,170,174,175,183,184,187,198,199,],[55,-33,-34,-95,-113,-97,-100,-107,-110,-114,-115,-116,-117,-118,-61,-113,-36,-113,-113,-96,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-113,174,175,-35,-98,-99,-101,-102,-103,-104,-105,-106,-108,-109,-111,-112,-120,180,-62,-113,-113,-57,198,199,-113,-113,]),'OPENBRACKET':([48,71,119,168,],[58,110,58,182,]),'NOT':([58,78,95,109,110,113,114,117,140,148,149,167,174,175,182,192,198,199,],[84,84,84,84,84,84,84,-88,84,84,84,84,84,84,84,84,84,84,]),'MULTIPLY':([58,78,84,87,88,89,90,91,92,93,94,95,109,110,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,133,140,145,148,149,159,160,161,162,163,167,174,175,182,183,192,198,199,],[-113,-113,-113,131,-110,-114,-115,-116,-117,-118,-61,-113,-113,-113,-113,-113,-88,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-113,-117,-113,-113,131,131,-111,-112,-120,-113,-113,-113,-113,-57,-113,-113,-113,]),'DIVIDE':([58,78,84,87,88,89,90,91,92,93,94,95,109,110,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,133,140,145,148,149,159,160,161,162,163,167,174,175,182,183,192,198,199,],[-113,-113,-113,132,-110,-114,-115,-116,-117,-118,-61,-113,-113,-113,-113,-113,-88,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-113,-117,-113,-113,132,132,-111,-112,-120,-113,-113,-113,-113,-57,-113,-113,-113,]),'PLUS':([58,78,84,86,87,88,89,90,91,92,93,94,95,109,110,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,133,140,145,148,149,153,154,155,156,157,158,159,160,161,162,163,167,174,175,182,183,192,198,199,],[-113,-113,-113,129,-107,-110,-114,-115,-116,-117,-118,-61,-113,-113,-113,-113,-113,-88,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-113,-117,-113,-113,129,129,129,129,129,129,-108,-109,-111,-112,-120,-113,-113,-113,-113,-57,-113,-113,-113,]),'MINUS':([58,78,84,86,87,88,89,90,91,92,93,94,95,109,110,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,133,140,145,148,149,153,154,155,156,157,158,159,160,161,162,163,167,174,175,182,183,192,198,199,],[-113,-113,-113,130,-107,-110,-114,-115,-116,-117,-118,-61,-113,-113,-113,-113,-113,-88,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-113,-117,-113,-113,130,130,130,130,130,130,-108,-109,-111,-112,-120,-113,-113,-113,-113,-57,-113,-113,-113,]),'GREATER':([58,78,84,85,86,87,88,89,90,91,92,93,94,95,109,110,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,133,140,145,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,167,174,175,182,183,192,198,199,],[-113,-113,-113,123,-100,-107,-110,-114,-115,-116,-117,-118,-61,-113,-113,-113,-113,-113,-88,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-113,-117,-113,-113,123,123,-101,-102,-103,-104,-105,-106,-108,-109,-111,-112,-120,-113,-113,-113,-113,-57,-113,-113,-113,]),'LESS':([58,78,84,85,86,87,88,89,90,91,92,93,94,95,109,110,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,133,140,145,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,167,174,175,182,183,192,198,199,],[-113,-113,-113,124,-100,-107,-110,-114,-115,-116,-117,-118,-61,-113,-113,-113,-113,-113,-88,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-113,-117,-113,-113,124,124,-101,-102,-103,-104,-105,-106,-108,-109,-111,-112,-120,-113,-113,-113,-113,-57,-113,-113,-113,]),'DIFFERENT':([58,78,84,85,86,87,88,89,90,91,92,93,94,95,109,110,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,133,140,145,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,167,174,175,182,183,192,198,199,],[-113,-113,-113,125,-100,-107,-110,-114,-115,-116,-117,-118,-61,-113,-113,-113,-113,-113,-88,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-113,-117,-113,-113,125,125,-101,-102,-103,-104,-105,-106,-108,-109,-111,-112,-120,-113,-113,-113,-113,-57,-113,-113,-113,]),'EQUALS_BOOLEAN':([58,78,84,85,86,87,88,89,90,91,92,93,94,95,109,110,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,133,140,145,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,167,174,175,182,183,192,198,199,],[-113,-113,-113,126,-100,-107,-110,-114,-115,-116,-117,-118,-61,-113,-113,-113,-113,-113,-88,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-113,-117,-113,-113,126,126,-101,-102,-103,-104,-105,-106,-108,-109,-111,-112,-120,-113,-113,-113,-113,-57,-113,-113,-113,]),'LESSEQUAL':([58,78,84,85,86,87,88,89,90,91,92,93,94,95,109,110,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,133,140,145,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,167,174,175,182,183,192,198,199,],[-113,-113,-113,127,-100,-107,-110,-114,-115,-116,-117,-118,-61,-113,-113,-113,-113,-113,-88,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-113,-117,-113,-113,127,127,-101,-102,-103,-104,-105,-106,-108,-109,-111,-112,-120,-113,-113,-113,-113,-57,-113,-113,-113,]),'GREATEREQUAL':([58,78,84,85,86,87,88,89,90,91,92,93,94,95,109,110,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,133,140,145,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,167,174,175,182,183,192,198,199,],[-113,-113,-113,128,-100,-107,-110,-114,-115,-116,-117,-118,-61,-113,-113,-113,-113,-113,-88,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-113,-117,-113,-113,128,128,-101,-102,-103,-104,-105,-106,-108,-109,-111,-112,-120,-113,-113,-113,-113,-57,-113,-113,-113,]),'AND':([58,78,83,84,85,86,87,88,89,90,91,92,93,94,95,109,110,113,114,117,120,121,122,123,124,125,126,127,128,129,130,131,132,133,140,145,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,167,174,175,182,183,192,198,199,],[-113,-113,120,-113,-97,-100,-107,-110,-114,-115,-116,-117,-118,-61,-113,-113,-113,-113,-113,-88,-113,-113,120,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-113,-117,-113,-113,-98,-99,-101,-102,-103,-104,-105,-106,-108,-109,-111,-112,-120,-113,-113,-113,-113,-57,-113,-113,-113,]),'OR':([58,78,83,84,85,86,87,88,89,90,91,92,93,94,95,109,110,113,114,117,120,121,122,123,124,125,126,127,128,129,130,131,132,133,140,145,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,167,174,175,182,183,192,198,199,],[-113,-113,121,-113,-97,-100,-107,-110,-114,-115,-116,-117,-118,-61,-113,-113,-113,-113,-113,-88,-113,-113,121,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-113,-117,-113,-113,-98,-99,-101,-102,-103,-104,-105,-106,-108,-109,-111,-112,-120,-113,-113,-113,-113,-57,-113,-113,-113,]),'CLOSEBRACKET':([58,82,83,84,85,86,87,88,89,90,91,92,93,94,110,120,121,122,123,124,125,126,127,128,129,130,131,132,133,139,151,152,153,154,155,156,157,158,159,160,161,162,163,182,183,],[-113,119,-95,-113,-97,-100,-107,-110,-114,-115,-116,-117,-118,-61,-113,-113,-113,-96,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,168,-98,-99,-101,-102,-103,-104,-105,-106,-108,-109,-111,-112,-120,-113,-57,]),'CTEF':([58,78,84,95,109,110,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,140,148,149,167,174,175,182,192,198,199,],[89,89,89,89,89,89,89,89,-88,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'CTEI':([58,78,84,95,109,110,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,140,148,149,167,174,175,182,192,198,199,],[90,90,90,90,90,90,90,90,-88,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'CTEC':([58,78,84,95,109,110,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,140,148,149,167,174,175,182,192,198,199,],[91,91,91,91,91,91,91,91,-88,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'CTEB':([58,78,84,95,109,110,113,114,117,120,121,123,124,125,126,127,128,129,130,131,132,140,148,149,167,174,175,182,192,198,199,],[93,93,93,93,93,93,93,93,-88,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'EQUALS':([71,118,138,168,196,],[109,149,167,-68,-67,]),'TO':([83,84,85,86,87,88,89,90,91,92,93,94,120,121,122,123,124,125,126,127,128,129,130,131,132,133,149,151,152,153,154,155,156,157,158,159,160,161,162,163,178,183,],[-95,-113,-97,-100,-107,-110,-114,-115,-116,-117,-118,-61,-113,-113,-96,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-119,-113,-98,-99,-101,-102,-103,-104,-105,-106,-108,-109,-111,-112,-120,192,-57,]),'QUOTATIONMARK':([113,173,174,175,199,],[143,187,143,143,143,]),'CTESTRING':([143,],[173,]),'ELSE':([218,],[220,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'establishglobalscope':([4,],[5,]),'programaP':([5,7,8,9,10,],[6,17,18,19,20,]),'vars':([5,7,8,9,10,35,53,61,62,63,64,65,66,67,68,69,193,200,208,209,222,],[7,7,7,7,7,40,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'clase':([5,7,8,9,10,],[8,8,8,8,8,]),'funcion':([5,7,8,9,10,35,40,42,],[9,9,9,9,9,42,42,42,]),'bloque':([5,7,8,9,10,],[11,11,11,11,11,]),'empty':([5,7,8,9,10,35,40,42,53,59,61,62,63,64,65,66,67,68,69,180,193,200,208,209,222,],[12,12,12,12,12,43,43,43,70,98,70,70,70,70,70,70,70,70,70,98,70,70,70,70,70,]),'tipo':([13,59,180,],[21,97,97,]),'tipo_f':([15,],[27,]),'savetype':([21,],[34,]),'claseP':([35,],[39,]),'clasePP':([35,40,42,],[41,50,51,]),'varsP':([38,55,],[46,81,]),'param':([38,55,136,],[47,47,165,]),'savefuncscope':([44,],[52,]),'establishmainscope':([45,],[53,]),'declare_dims':([48,119,],[57,150,]),'estatuto':([53,61,62,63,64,65,66,67,68,69,193,200,208,209,222,],[60,100,101,102,103,104,105,106,107,108,203,207,213,214,224,]),'asignacion':([53,61,62,63,64,65,66,67,68,69,193,200,208,209,222,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'llamada':([53,58,61,62,63,64,65,66,67,68,69,78,84,95,109,110,113,114,120,121,123,124,125,126,127,128,129,130,131,132,140,148,149,167,174,175,182,192,193,198,199,200,208,209,222,],[62,94,62,62,62,62,62,62,62,62,62,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,62,94,94,62,62,62,62,]),'lectura':([53,61,62,63,64,65,66,67,68,69,193,200,208,209,222,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'escritura':([53,61,62,63,64,65,66,67,68,69,193,200,208,209,222,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'repeticion':([53,61,62,63,64,65,66,67,68,69,193,200,208,209,222,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'declaracion':([53,61,62,63,64,65,66,67,68,69,193,200,208,209,222,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'condicion':([53,61,62,63,64,65,66,67,68,69,193,200,208,209,220,222,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,223,67,]),'return':([53,61,62,63,64,65,66,67,68,69,193,200,208,209,222,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'condicional':([53,61,62,63,64,65,66,67,68,69,193,200,208,209,222,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'no_condicional':([53,61,62,63,64,65,66,67,68,69,193,200,208,209,222,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'exp':([58,78,95,109,110,113,114,140,148,149,167,174,175,182,192,198,199,],[82,115,134,137,139,144,146,170,177,178,181,144,144,139,202,170,144,]),'iexp':([58,78,84,95,109,110,113,114,140,148,149,167,174,175,182,192,198,199,],[83,83,122,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'nexp':([58,78,84,95,109,110,113,114,120,121,140,148,149,167,174,175,182,192,198,199,],[85,85,85,85,85,85,85,85,151,152,85,85,85,85,85,85,85,85,85,85,]),'pexp':([58,78,84,95,109,110,113,114,120,121,123,124,125,126,127,128,140,148,149,167,174,175,182,192,198,199,],[86,86,86,86,86,86,86,86,86,86,153,154,155,156,157,158,86,86,86,86,86,86,86,86,86,86,]),'termino':([58,78,84,95,109,110,113,114,120,121,123,124,125,126,127,128,129,130,140,148,149,167,174,175,182,192,198,199,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,159,160,87,87,87,87,87,87,87,87,87,87,]),'factor':([58,78,84,95,109,110,113,114,120,121,123,124,125,126,127,128,129,130,131,132,140,148,149,167,174,175,182,192,198,199,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,161,162,88,88,88,88,88,88,88,88,88,88,]),'paramsfunction':([59,180,],[96,194,]),'gen_era':([71,92,145,],[111,111,111,]),'printt':([94,184,],[133,197,]),'savesequence':([96,],[135,]),'savetipo':([97,],[136,]),'asignaciondim':([110,182,],[138,196,]),'param_read':([112,],[141,]),'escrituraP':([113,174,175,199,],[142,188,189,205,]),'migaja':([117,],[148,]),'param_call':([140,198,],[169,204,]),'gen_param':([170,],[184,]),'gen_gotof':([177,190,],[191,200,]),'turnoff':([179,],[193,]),'condicionp':([200,],[206,]),'fill_goto':([206,],[211,]),'fill_gotof_if':([207,],[212,]),'gen_goto':([212,],[215,]),'fill_gotof_while':([213,],[216,]),'gen_goto_migaja':([216,],[219,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SEMICOLON establishglobalscope programaP','programa',5,'p_programa','lexyacc.py',148),
  ('establishglobalscope -> <empty>','establishglobalscope',0,'p_establishglobalscope','lexyacc.py',157),
  ('programaP -> vars programaP','programaP',2,'p_programaP','lexyacc.py',169),
  ('programaP -> clase programaP','programaP',2,'p_programaP','lexyacc.py',170),
  ('programaP -> funcion programaP','programaP',2,'p_programaP','lexyacc.py',171),
  ('programaP -> CTE_COMMENT programaP','programaP',2,'p_programaP','lexyacc.py',172),
  ('programaP -> bloque','programaP',1,'p_programaP','lexyacc.py',173),
  ('programaP -> empty','programaP',1,'p_programaP','lexyacc.py',174),
  ('clase -> CLASS ID OPENBRACE claseP CLOSEBRACE','clase',5,'p_clase','lexyacc.py',179),
  ('claseP -> vars clasePP','claseP',2,'p_claseP','lexyacc.py',185),
  ('claseP -> clasePP','claseP',1,'p_claseP','lexyacc.py',186),
  ('clasePP -> funcion clasePP','clasePP',2,'p_clasePP','lexyacc.py',191),
  ('clasePP -> empty','clasePP',1,'p_clasePP','lexyacc.py',192),
  ('funcion -> FUNCTION tipo_f TWODOTS ID savefuncscope OPENPARENTHESES paramsfunction savesequence CLOSEPARENTHESES OPENBRACE turnoff estatuto CLOSEBRACE','funcion',13,'p_funcion','lexyacc.py',197),
  ('turnoff -> <empty>','turnoff',0,'p_turnoff','lexyacc.py',202),
  ('tipo_f -> INT','tipo_f',1,'p_tipo_f','lexyacc.py',211),
  ('tipo_f -> FLOAT','tipo_f',1,'p_tipo_f','lexyacc.py',212),
  ('tipo_f -> BOOL','tipo_f',1,'p_tipo_f','lexyacc.py',213),
  ('tipo_f -> CHAR','tipo_f',1,'p_tipo_f','lexyacc.py',214),
  ('tipo_f -> VOID','tipo_f',1,'p_tipo_f','lexyacc.py',215),
  ('savefuncscope -> <empty>','savefuncscope',0,'p_savefuncscope','lexyacc.py',225),
  ('paramsfunction -> tipo savetipo param COMMA paramsfunction','paramsfunction',5,'p_paramsfunction','lexyacc.py',237),
  ('paramsfunction -> tipo savetipo param','paramsfunction',3,'p_paramsfunction','lexyacc.py',238),
  ('paramsfunction -> empty','paramsfunction',1,'p_paramsfunction','lexyacc.py',239),
  ('savetipo -> <empty>','savetipo',0,'p_savetipo','lexyacc.py',244),
  ('savesequence -> <empty>','savesequence',0,'p_savesequence','lexyacc.py',257),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','lexyacc.py',270),
  ('return -> RETURN SEMICOLON','return',2,'p_return','lexyacc.py',271),
  ('vars -> VARS tipo savetype TWODOTS varsP','vars',5,'p_vars','lexyacc.py',288),
  ('varsP -> param COMMA varsP','varsP',3,'p_varsP','lexyacc.py',293),
  ('varsP -> param SEMICOLON','varsP',2,'p_varsP','lexyacc.py',294),
  ('savetype -> <empty>','savetype',0,'p_savetype','lexyacc.py',299),
  ('param -> ID','param',1,'p_param','lexyacc.py',308),
  ('param -> ID declare_dims','param',2,'p_param','lexyacc.py',309),
  ('declare_dims -> OPENBRACKET exp CLOSEBRACKET declare_dims','declare_dims',4,'p_declare_dims','lexyacc.py',362),
  ('declare_dims -> OPENBRACKET exp CLOSEBRACKET','declare_dims',3,'p_declare_dims','lexyacc.py',363),
  ('paramsP -> exp COMMA paramsP','paramsP',3,'p_paramsP','lexyacc.py',375),
  ('paramsP -> exp','paramsP',1,'p_paramsP','lexyacc.py',376),
  ('tipo -> INT','tipo',1,'p_tipo','lexyacc.py',381),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lexyacc.py',382),
  ('tipo -> CHAR','tipo',1,'p_tipo','lexyacc.py',383),
  ('tipo -> BOOL','tipo',1,'p_tipo','lexyacc.py',384),
  ('bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE establishmainscope estatuto CLOSEBRACE','bloque',7,'p_bloque','lexyacc.py',390),
  ('bloque -> MAIN OPENPARENTHESES CLOSEPARENTHESES OPENBRACE CLOSEBRACE','bloque',5,'p_bloque','lexyacc.py',391),
  ('establishmainscope -> <empty>','establishmainscope',0,'p_establishmainscope','lexyacc.py',397),
  ('estatuto -> asignacion estatuto','estatuto',2,'p_estatuto','lexyacc.py',409),
  ('estatuto -> llamada estatuto','estatuto',2,'p_estatuto','lexyacc.py',410),
  ('estatuto -> lectura estatuto','estatuto',2,'p_estatuto','lexyacc.py',411),
  ('estatuto -> escritura estatuto','estatuto',2,'p_estatuto','lexyacc.py',412),
  ('estatuto -> repeticion estatuto','estatuto',2,'p_estatuto','lexyacc.py',413),
  ('estatuto -> declaracion estatuto','estatuto',2,'p_estatuto','lexyacc.py',414),
  ('estatuto -> condicion estatuto','estatuto',2,'p_estatuto','lexyacc.py',415),
  ('estatuto -> return estatuto','estatuto',2,'p_estatuto','lexyacc.py',416),
  ('estatuto -> CTE_COMMENT estatuto','estatuto',2,'p_estatuto','lexyacc.py',417),
  ('estatuto -> empty','estatuto',1,'p_estatuto','lexyacc.py',418),
  ('declaracion -> vars','declaracion',1,'p_declaracion','lexyacc.py',423),
  ('llamada -> ID gen_era OPENPARENTHESES param_call CLOSEPARENTHESES','llamada',5,'p_llamada','lexyacc.py',428),
  ('gen_era -> <empty>','gen_era',0,'p_gen_era','lexyacc.py',439),
  ('param_call -> exp gen_param printt','param_call',3,'p_param_call','lexyacc.py',448),
  ('param_call -> exp gen_param COMMA param_call','param_call',4,'p_param_call','lexyacc.py',449),
  ('printt -> <empty>','printt',0,'p_printt','lexyacc.py',454),
  ('gen_param -> <empty>','gen_param',0,'p_gen_param','lexyacc.py',460),
  ('lectura -> READ OPENPARENTHESES param_read CLOSEPARENTHESES SEMICOLON','lectura',5,'p_lectura','lexyacc.py',466),
  ('param_read -> <empty>','param_read',0,'p_param_read','lexyacc.py',471),
  ('asignacion -> ID EQUALS exp SEMICOLON','asignacion',4,'p_asignacion','lexyacc.py',476),
  ('asignacion -> ID OPENBRACKET asignaciondim EQUALS exp SEMICOLON','asignacion',6,'p_asignacion','lexyacc.py',477),
  ('asignaciondim -> exp CLOSEBRACKET OPENBRACKET asignaciondim','asignaciondim',4,'p_asignaciondim','lexyacc.py',498),
  ('asignaciondim -> exp CLOSEBRACKET','asignaciondim',2,'p_asignaciondim','lexyacc.py',499),
  ('escritura -> WRITE OPENPARENTHESES escrituraP CLOSEPARENTHESES SEMICOLON','escritura',5,'p_escritura','lexyacc.py',505),
  ('escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK COMMA escrituraP','escrituraP',5,'p_escrituraP','lexyacc.py',510),
  ('escrituraP -> exp COMMA escrituraP','escrituraP',3,'p_escrituraP','lexyacc.py',511),
  ('escrituraP -> ID COMMA escrituraP','escrituraP',3,'p_escrituraP','lexyacc.py',512),
  ('escrituraP -> QUOTATIONMARK CTESTRING QUOTATIONMARK','escrituraP',3,'p_escrituraP','lexyacc.py',513),
  ('escrituraP -> exp','escrituraP',1,'p_escrituraP','lexyacc.py',514),
  ('escrituraP -> ID','escrituraP',1,'p_escrituraP','lexyacc.py',515),
  ('condicion -> IF OPENPARENTHESES exp CLOSEPARENTHESES OPENBRACE gen_gotof condicionp fill_goto','condicion',8,'p_condicion','lexyacc.py',520),
  ('gen_gotof -> <empty>','gen_gotof',0,'p_gen_gotof','lexyacc.py',525),
  ('fill_gotof -> <empty>','fill_gotof',0,'p_fill_gotof','lexyacc.py',532),
  ('gen_goto -> <empty>','gen_goto',0,'p_gen_goto','lexyacc.py',538),
  ('fill_goto -> <empty>','fill_goto',0,'p_fill_goto','lexyacc.py',544),
  ('fill_gotof_if -> <empty>','fill_gotof_if',0,'p_fill_gotof_if','lexyacc.py',550),
  ('condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE OPENBRACE estatuto CLOSEBRACE','condicionp',8,'p_condicionp','lexyacc.py',556),
  ('condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE ELSE condicion','condicionp',6,'p_condicionp','lexyacc.py',557),
  ('condicionp -> estatuto fill_gotof_if gen_goto CLOSEBRACE','condicionp',4,'p_condicionp','lexyacc.py',558),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','lexyacc.py',564),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','lexyacc.py',565),
  ('condicional -> WHILE OPENPARENTHESES migaja exp gen_gotof CLOSEPARENTHESES OPENBRACE estatuto fill_gotof_while gen_goto_migaja CLOSEBRACE','condicional',11,'p_condicional','lexyacc.py',570),
  ('migaja -> <empty>','migaja',0,'p_migaja','lexyacc.py',575),
  ('gen_goto_migaja -> <empty>','gen_goto_migaja',0,'p_gen_goto_migaja','lexyacc.py',581),
  ('gen_goto_while -> <empty>','gen_goto_while',0,'p_gen_goto_while','lexyacc.py',587),
  ('gen_fill_goto -> <empty>','gen_fill_goto',0,'p_gen_fill_goto','lexyacc.py',593),
  ('fill_goto_while -> <empty>','fill_goto_while',0,'p_fill_goto_while','lexyacc.py',599),
  ('fill_gotof_while -> <empty>','fill_gotof_while',0,'p_fill_gotof_while','lexyacc.py',605),
  ('no_condicional -> FOR ID EQUALS exp TO exp OPENBRACE estatuto CLOSEBRACE','no_condicional',9,'p_nocondicional','lexyacc.py',612),
  ('exp -> iexp','exp',1,'p_exp','lexyacc.py',618),
  ('exp -> NOT iexp','exp',2,'p_exp','lexyacc.py',619),
  ('iexp -> nexp','iexp',1,'p_iexp','lexyacc.py',629),
  ('iexp -> iexp AND nexp','iexp',3,'p_iexp','lexyacc.py',630),
  ('iexp -> iexp OR nexp','iexp',3,'p_iexp','lexyacc.py',631),
  ('nexp -> pexp','nexp',1,'p_nexp','lexyacc.py',652),
  ('nexp -> nexp GREATER pexp','nexp',3,'p_nexp','lexyacc.py',653),
  ('nexp -> nexp LESS pexp','nexp',3,'p_nexp','lexyacc.py',654),
  ('nexp -> nexp DIFFERENT pexp','nexp',3,'p_nexp','lexyacc.py',655),
  ('nexp -> nexp EQUALS_BOOLEAN pexp','nexp',3,'p_nexp','lexyacc.py',656),
  ('nexp -> nexp LESSEQUAL pexp','nexp',3,'p_nexp','lexyacc.py',657),
  ('nexp -> nexp GREATEREQUAL pexp','nexp',3,'p_nexp','lexyacc.py',658),
  ('pexp -> termino','pexp',1,'p_pexp','lexyacc.py',680),
  ('pexp -> pexp PLUS termino','pexp',3,'p_pexp','lexyacc.py',681),
  ('pexp -> pexp MINUS termino','pexp',3,'p_pexp','lexyacc.py',682),
  ('termino -> factor','termino',1,'p_termino','lexyacc.py',706),
  ('termino -> termino MULTIPLY factor','termino',3,'p_termino','lexyacc.py',707),
  ('termino -> termino DIVIDE factor','termino',3,'p_termino','lexyacc.py',708),
  ('factor -> <empty>','factor',0,'p_factor','lexyacc.py',733),
  ('factor -> CTEF','factor',1,'p_factor','lexyacc.py',734),
  ('factor -> CTEI','factor',1,'p_factor','lexyacc.py',735),
  ('factor -> CTEC','factor',1,'p_factor','lexyacc.py',736),
  ('factor -> ID','factor',1,'p_factor','lexyacc.py',737),
  ('factor -> CTEB','factor',1,'p_factor','lexyacc.py',738),
  ('factor -> llamada printt','factor',2,'p_factor','lexyacc.py',739),
  ('factor -> OPENPARENTHESES exp CLOSEPARENTHESES','factor',3,'p_factor','lexyacc.py',740),
  ('empty -> <empty>','empty',0,'p_empty','lexyacc.py',779),
]
